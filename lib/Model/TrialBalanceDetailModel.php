<?php
/**
 * TrialBalanceDetailModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Default/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.12
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;

use \ArrayAccess;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * TrialBalanceDetailModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TrialBalanceDetailModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'TrialBalanceDetail';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'rowNumber' => 'int',
        'note' => 'string',
        'custom' => 'map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]',
        'files' => '\Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]',
        'currencyYTDBalance' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'description' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'importedAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'importedSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'line' => '\Hut6\CranaplusAcumaticaSdk\Model\IntValueModel',
        'mapNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'mappedAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'mappedSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'selected' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'status' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'type' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'yTDBalance' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'uuid',
        'rowNumber' => 'int64',
        'note' => null,
        'custom' => null,
        'files' => null,
        'currencyYTDBalance' => null,
        'description' => null,
        'importedAccount' => null,
        'importedSubaccount' => null,
        'line' => null,
        'mapNbr' => null,
        'mappedAccount' => null,
        'mappedSubaccount' => null,
        'selected' => null,
        'status' => null,
        'type' => null,
        'yTDBalance' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'rowNumber' => 'rowNumber',
        'note' => 'note',
        'custom' => 'custom',
        'files' => 'files',
        'currencyYTDBalance' => 'CurrencyYTDBalance',
        'description' => 'Description',
        'importedAccount' => 'ImportedAccount',
        'importedSubaccount' => 'ImportedSubaccount',
        'line' => 'Line',
        'mapNbr' => 'MapNbr',
        'mappedAccount' => 'MappedAccount',
        'mappedSubaccount' => 'MappedSubaccount',
        'selected' => 'Selected',
        'status' => 'Status',
        'type' => 'Type',
        'yTDBalance' => 'YTDBalance'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'rowNumber' => 'setRowNumber',
        'note' => 'setNote',
        'custom' => 'setCustom',
        'files' => 'setFiles',
        'currencyYTDBalance' => 'setCurrencyYTDBalance',
        'description' => 'setDescription',
        'importedAccount' => 'setImportedAccount',
        'importedSubaccount' => 'setImportedSubaccount',
        'line' => 'setLine',
        'mapNbr' => 'setMapNbr',
        'mappedAccount' => 'setMappedAccount',
        'mappedSubaccount' => 'setMappedSubaccount',
        'selected' => 'setSelected',
        'status' => 'setStatus',
        'type' => 'setType',
        'yTDBalance' => 'setYTDBalance'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'rowNumber' => 'getRowNumber',
        'note' => 'getNote',
        'custom' => 'getCustom',
        'files' => 'getFiles',
        'currencyYTDBalance' => 'getCurrencyYTDBalance',
        'description' => 'getDescription',
        'importedAccount' => 'getImportedAccount',
        'importedSubaccount' => 'getImportedSubaccount',
        'line' => 'getLine',
        'mapNbr' => 'getMapNbr',
        'mappedAccount' => 'getMappedAccount',
        'mappedSubaccount' => 'getMappedSubaccount',
        'selected' => 'getSelected',
        'status' => 'getStatus',
        'type' => 'getType',
        'yTDBalance' => 'getYTDBalance'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['rowNumber'] = isset($data['rowNumber']) ? $data['rowNumber'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['custom'] = isset($data['custom']) ? $data['custom'] : null;
        $this->container['files'] = isset($data['files']) ? $data['files'] : null;
        $this->container['currencyYTDBalance'] = isset($data['currencyYTDBalance']) ? $data['currencyYTDBalance'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['importedAccount'] = isset($data['importedAccount']) ? $data['importedAccount'] : null;
        $this->container['importedSubaccount'] = isset($data['importedSubaccount']) ? $data['importedSubaccount'] : null;
        $this->container['line'] = isset($data['line']) ? $data['line'] : null;
        $this->container['mapNbr'] = isset($data['mapNbr']) ? $data['mapNbr'] : null;
        $this->container['mappedAccount'] = isset($data['mappedAccount']) ? $data['mappedAccount'] : null;
        $this->container['mappedSubaccount'] = isset($data['mappedSubaccount']) ? $data['mappedSubaccount'] : null;
        $this->container['selected'] = isset($data['selected']) ? $data['selected'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['yTDBalance'] = isset($data['yTDBalance']) ? $data['yTDBalance'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets rowNumber
     *
     * @return int
     */
    public function getRowNumber()
    {
        return $this->container['rowNumber'];
    }

    /**
     * Sets rowNumber
     *
     * @param int $rowNumber rowNumber
     *
     * @return $this
     */
    public function setRowNumber($rowNumber)
    {
        $this->container['rowNumber'] = $rowNumber;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note note
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets custom
     *
     * @return map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]
     */
    public function getCustom()
    {
        return $this->container['custom'];
    }

    /**
     * Sets custom
     *
     * @param map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]] $custom custom
     *
     * @return $this
     */
    public function setCustom($custom)
    {
        $this->container['custom'] = $custom;

        return $this;
    }

    /**
     * Gets files
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]
     */
    public function getFiles()
    {
        return $this->container['files'];
    }

    /**
     * Sets files
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[] $files files
     *
     * @return $this
     */
    public function setFiles($files)
    {
        $this->container['files'] = $files;

        return $this;
    }

    /**
     * Gets currencyYTDBalance
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getCurrencyYTDBalance()
    {
        return $this->container['currencyYTDBalance'];
    }

    /**
     * Sets currencyYTDBalance
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $currencyYTDBalance currencyYTDBalance
     *
     * @return $this
     */
    public function setCurrencyYTDBalance($currencyYTDBalance)
    {
        $this->container['currencyYTDBalance'] = $currencyYTDBalance;

        return $this;
    }

    /**
     * Gets description
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets importedAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getImportedAccount()
    {
        return $this->container['importedAccount'];
    }

    /**
     * Sets importedAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $importedAccount importedAccount
     *
     * @return $this
     */
    public function setImportedAccount($importedAccount)
    {
        $this->container['importedAccount'] = $importedAccount;

        return $this;
    }

    /**
     * Gets importedSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getImportedSubaccount()
    {
        return $this->container['importedSubaccount'];
    }

    /**
     * Sets importedSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $importedSubaccount importedSubaccount
     *
     * @return $this
     */
    public function setImportedSubaccount($importedSubaccount)
    {
        $this->container['importedSubaccount'] = $importedSubaccount;

        return $this;
    }

    /**
     * Gets line
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel
     */
    public function getLine()
    {
        return $this->container['line'];
    }

    /**
     * Sets line
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel $line line
     *
     * @return $this
     */
    public function setLine($line)
    {
        $this->container['line'] = $line;

        return $this;
    }

    /**
     * Gets mapNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getMapNbr()
    {
        return $this->container['mapNbr'];
    }

    /**
     * Sets mapNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $mapNbr mapNbr
     *
     * @return $this
     */
    public function setMapNbr($mapNbr)
    {
        $this->container['mapNbr'] = $mapNbr;

        return $this;
    }

    /**
     * Gets mappedAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getMappedAccount()
    {
        return $this->container['mappedAccount'];
    }

    /**
     * Sets mappedAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $mappedAccount mappedAccount
     *
     * @return $this
     */
    public function setMappedAccount($mappedAccount)
    {
        $this->container['mappedAccount'] = $mappedAccount;

        return $this;
    }

    /**
     * Gets mappedSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getMappedSubaccount()
    {
        return $this->container['mappedSubaccount'];
    }

    /**
     * Sets mappedSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $mappedSubaccount mappedSubaccount
     *
     * @return $this
     */
    public function setMappedSubaccount($mappedSubaccount)
    {
        $this->container['mappedSubaccount'] = $mappedSubaccount;

        return $this;
    }

    /**
     * Gets selected
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getSelected()
    {
        return $this->container['selected'];
    }

    /**
     * Sets selected
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $selected selected
     *
     * @return $this
     */
    public function setSelected($selected)
    {
        $this->container['selected'] = $selected;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets type
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets yTDBalance
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getYTDBalance()
    {
        return $this->container['yTDBalance'];
    }

    /**
     * Sets yTDBalance
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $yTDBalance yTDBalance
     *
     * @return $this
     */
    public function setYTDBalance($yTDBalance)
    {
        $this->container['yTDBalance'] = $yTDBalance;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


