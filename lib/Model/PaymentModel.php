<?php
/**
 * PaymentModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Default/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.12
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;

use \ArrayAccess;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * PaymentModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PaymentModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Payment';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'rowNumber' => 'int',
        'note' => 'string',
        'custom' => 'map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]',
        'files' => '\Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]',
        'applicationDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'applicationHistory' => '\Hut6\CranaplusAcumaticaSdk\Model\PaymentApplicationHistoryDetailModel[]',
        'appliedToDocuments' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'cardAccountNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\IntValueModel',
        'cashAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'creditCardProcessingInfo' => '\Hut6\CranaplusAcumaticaSdk\Model\CreditCardProcessingDetailModel[]',
        'currencyID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'customerID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'description' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'documentsToApply' => '\Hut6\CranaplusAcumaticaSdk\Model\PaymentDetailModel[]',
        'hold' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'ordersToApply' => '\Hut6\CranaplusAcumaticaSdk\Model\PaymentOrderDetailModel[]',
        'paymentAmount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'paymentMethod' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'paymentRef' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'referenceNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'status' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'type' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'uuid',
        'rowNumber' => 'int64',
        'note' => null,
        'custom' => null,
        'files' => null,
        'applicationDate' => null,
        'applicationHistory' => null,
        'appliedToDocuments' => null,
        'cardAccountNbr' => null,
        'cashAccount' => null,
        'creditCardProcessingInfo' => null,
        'currencyID' => null,
        'customerID' => null,
        'description' => null,
        'documentsToApply' => null,
        'hold' => null,
        'ordersToApply' => null,
        'paymentAmount' => null,
        'paymentMethod' => null,
        'paymentRef' => null,
        'referenceNbr' => null,
        'status' => null,
        'type' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'rowNumber' => 'rowNumber',
        'note' => 'note',
        'custom' => 'custom',
        'files' => 'files',
        'applicationDate' => 'ApplicationDate',
        'applicationHistory' => 'ApplicationHistory',
        'appliedToDocuments' => 'AppliedToDocuments',
        'cardAccountNbr' => 'CardAccountNbr',
        'cashAccount' => 'CashAccount',
        'creditCardProcessingInfo' => 'CreditCardProcessingInfo',
        'currencyID' => 'CurrencyID',
        'customerID' => 'CustomerID',
        'description' => 'Description',
        'documentsToApply' => 'DocumentsToApply',
        'hold' => 'Hold',
        'ordersToApply' => 'OrdersToApply',
        'paymentAmount' => 'PaymentAmount',
        'paymentMethod' => 'PaymentMethod',
        'paymentRef' => 'PaymentRef',
        'referenceNbr' => 'ReferenceNbr',
        'status' => 'Status',
        'type' => 'Type'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'rowNumber' => 'setRowNumber',
        'note' => 'setNote',
        'custom' => 'setCustom',
        'files' => 'setFiles',
        'applicationDate' => 'setApplicationDate',
        'applicationHistory' => 'setApplicationHistory',
        'appliedToDocuments' => 'setAppliedToDocuments',
        'cardAccountNbr' => 'setCardAccountNbr',
        'cashAccount' => 'setCashAccount',
        'creditCardProcessingInfo' => 'setCreditCardProcessingInfo',
        'currencyID' => 'setCurrencyID',
        'customerID' => 'setCustomerID',
        'description' => 'setDescription',
        'documentsToApply' => 'setDocumentsToApply',
        'hold' => 'setHold',
        'ordersToApply' => 'setOrdersToApply',
        'paymentAmount' => 'setPaymentAmount',
        'paymentMethod' => 'setPaymentMethod',
        'paymentRef' => 'setPaymentRef',
        'referenceNbr' => 'setReferenceNbr',
        'status' => 'setStatus',
        'type' => 'setType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'rowNumber' => 'getRowNumber',
        'note' => 'getNote',
        'custom' => 'getCustom',
        'files' => 'getFiles',
        'applicationDate' => 'getApplicationDate',
        'applicationHistory' => 'getApplicationHistory',
        'appliedToDocuments' => 'getAppliedToDocuments',
        'cardAccountNbr' => 'getCardAccountNbr',
        'cashAccount' => 'getCashAccount',
        'creditCardProcessingInfo' => 'getCreditCardProcessingInfo',
        'currencyID' => 'getCurrencyID',
        'customerID' => 'getCustomerID',
        'description' => 'getDescription',
        'documentsToApply' => 'getDocumentsToApply',
        'hold' => 'getHold',
        'ordersToApply' => 'getOrdersToApply',
        'paymentAmount' => 'getPaymentAmount',
        'paymentMethod' => 'getPaymentMethod',
        'paymentRef' => 'getPaymentRef',
        'referenceNbr' => 'getReferenceNbr',
        'status' => 'getStatus',
        'type' => 'getType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['rowNumber'] = isset($data['rowNumber']) ? $data['rowNumber'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['custom'] = isset($data['custom']) ? $data['custom'] : null;
        $this->container['files'] = isset($data['files']) ? $data['files'] : null;
        $this->container['applicationDate'] = isset($data['applicationDate']) ? $data['applicationDate'] : null;
        $this->container['applicationHistory'] = isset($data['applicationHistory']) ? $data['applicationHistory'] : null;
        $this->container['appliedToDocuments'] = isset($data['appliedToDocuments']) ? $data['appliedToDocuments'] : null;
        $this->container['cardAccountNbr'] = isset($data['cardAccountNbr']) ? $data['cardAccountNbr'] : null;
        $this->container['cashAccount'] = isset($data['cashAccount']) ? $data['cashAccount'] : null;
        $this->container['creditCardProcessingInfo'] = isset($data['creditCardProcessingInfo']) ? $data['creditCardProcessingInfo'] : null;
        $this->container['currencyID'] = isset($data['currencyID']) ? $data['currencyID'] : null;
        $this->container['customerID'] = isset($data['customerID']) ? $data['customerID'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['documentsToApply'] = isset($data['documentsToApply']) ? $data['documentsToApply'] : null;
        $this->container['hold'] = isset($data['hold']) ? $data['hold'] : null;
        $this->container['ordersToApply'] = isset($data['ordersToApply']) ? $data['ordersToApply'] : null;
        $this->container['paymentAmount'] = isset($data['paymentAmount']) ? $data['paymentAmount'] : null;
        $this->container['paymentMethod'] = isset($data['paymentMethod']) ? $data['paymentMethod'] : null;
        $this->container['paymentRef'] = isset($data['paymentRef']) ? $data['paymentRef'] : null;
        $this->container['referenceNbr'] = isset($data['referenceNbr']) ? $data['referenceNbr'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets rowNumber
     *
     * @return int
     */
    public function getRowNumber()
    {
        return $this->container['rowNumber'];
    }

    /**
     * Sets rowNumber
     *
     * @param int $rowNumber rowNumber
     *
     * @return $this
     */
    public function setRowNumber($rowNumber)
    {
        $this->container['rowNumber'] = $rowNumber;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note note
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets custom
     *
     * @return map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]
     */
    public function getCustom()
    {
        return $this->container['custom'];
    }

    /**
     * Sets custom
     *
     * @param map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]] $custom custom
     *
     * @return $this
     */
    public function setCustom($custom)
    {
        $this->container['custom'] = $custom;

        return $this;
    }

    /**
     * Gets files
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]
     */
    public function getFiles()
    {
        return $this->container['files'];
    }

    /**
     * Sets files
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[] $files files
     *
     * @return $this
     */
    public function setFiles($files)
    {
        $this->container['files'] = $files;

        return $this;
    }

    /**
     * Gets applicationDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getApplicationDate()
    {
        return $this->container['applicationDate'];
    }

    /**
     * Sets applicationDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $applicationDate applicationDate
     *
     * @return $this
     */
    public function setApplicationDate($applicationDate)
    {
        $this->container['applicationDate'] = $applicationDate;

        return $this;
    }

    /**
     * Gets applicationHistory
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\PaymentApplicationHistoryDetailModel[]
     */
    public function getApplicationHistory()
    {
        return $this->container['applicationHistory'];
    }

    /**
     * Sets applicationHistory
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\PaymentApplicationHistoryDetailModel[] $applicationHistory applicationHistory
     *
     * @return $this
     */
    public function setApplicationHistory($applicationHistory)
    {
        $this->container['applicationHistory'] = $applicationHistory;

        return $this;
    }

    /**
     * Gets appliedToDocuments
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getAppliedToDocuments()
    {
        return $this->container['appliedToDocuments'];
    }

    /**
     * Sets appliedToDocuments
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $appliedToDocuments appliedToDocuments
     *
     * @return $this
     */
    public function setAppliedToDocuments($appliedToDocuments)
    {
        $this->container['appliedToDocuments'] = $appliedToDocuments;

        return $this;
    }

    /**
     * Gets cardAccountNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel
     */
    public function getCardAccountNbr()
    {
        return $this->container['cardAccountNbr'];
    }

    /**
     * Sets cardAccountNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel $cardAccountNbr cardAccountNbr
     *
     * @return $this
     */
    public function setCardAccountNbr($cardAccountNbr)
    {
        $this->container['cardAccountNbr'] = $cardAccountNbr;

        return $this;
    }

    /**
     * Gets cashAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCashAccount()
    {
        return $this->container['cashAccount'];
    }

    /**
     * Sets cashAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $cashAccount cashAccount
     *
     * @return $this
     */
    public function setCashAccount($cashAccount)
    {
        $this->container['cashAccount'] = $cashAccount;

        return $this;
    }

    /**
     * Gets creditCardProcessingInfo
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\CreditCardProcessingDetailModel[]
     */
    public function getCreditCardProcessingInfo()
    {
        return $this->container['creditCardProcessingInfo'];
    }

    /**
     * Sets creditCardProcessingInfo
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\CreditCardProcessingDetailModel[] $creditCardProcessingInfo creditCardProcessingInfo
     *
     * @return $this
     */
    public function setCreditCardProcessingInfo($creditCardProcessingInfo)
    {
        $this->container['creditCardProcessingInfo'] = $creditCardProcessingInfo;

        return $this;
    }

    /**
     * Gets currencyID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCurrencyID()
    {
        return $this->container['currencyID'];
    }

    /**
     * Sets currencyID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $currencyID currencyID
     *
     * @return $this
     */
    public function setCurrencyID($currencyID)
    {
        $this->container['currencyID'] = $currencyID;

        return $this;
    }

    /**
     * Gets customerID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCustomerID()
    {
        return $this->container['customerID'];
    }

    /**
     * Sets customerID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $customerID customerID
     *
     * @return $this
     */
    public function setCustomerID($customerID)
    {
        $this->container['customerID'] = $customerID;

        return $this;
    }

    /**
     * Gets description
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets documentsToApply
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\PaymentDetailModel[]
     */
    public function getDocumentsToApply()
    {
        return $this->container['documentsToApply'];
    }

    /**
     * Sets documentsToApply
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\PaymentDetailModel[] $documentsToApply documentsToApply
     *
     * @return $this
     */
    public function setDocumentsToApply($documentsToApply)
    {
        $this->container['documentsToApply'] = $documentsToApply;

        return $this;
    }

    /**
     * Gets hold
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getHold()
    {
        return $this->container['hold'];
    }

    /**
     * Sets hold
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $hold hold
     *
     * @return $this
     */
    public function setHold($hold)
    {
        $this->container['hold'] = $hold;

        return $this;
    }

    /**
     * Gets ordersToApply
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\PaymentOrderDetailModel[]
     */
    public function getOrdersToApply()
    {
        return $this->container['ordersToApply'];
    }

    /**
     * Sets ordersToApply
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\PaymentOrderDetailModel[] $ordersToApply ordersToApply
     *
     * @return $this
     */
    public function setOrdersToApply($ordersToApply)
    {
        $this->container['ordersToApply'] = $ordersToApply;

        return $this;
    }

    /**
     * Gets paymentAmount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getPaymentAmount()
    {
        return $this->container['paymentAmount'];
    }

    /**
     * Sets paymentAmount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $paymentAmount paymentAmount
     *
     * @return $this
     */
    public function setPaymentAmount($paymentAmount)
    {
        $this->container['paymentAmount'] = $paymentAmount;

        return $this;
    }

    /**
     * Gets paymentMethod
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPaymentMethod()
    {
        return $this->container['paymentMethod'];
    }

    /**
     * Sets paymentMethod
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $paymentMethod paymentMethod
     *
     * @return $this
     */
    public function setPaymentMethod($paymentMethod)
    {
        $this->container['paymentMethod'] = $paymentMethod;

        return $this;
    }

    /**
     * Gets paymentRef
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPaymentRef()
    {
        return $this->container['paymentRef'];
    }

    /**
     * Sets paymentRef
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $paymentRef paymentRef
     *
     * @return $this
     */
    public function setPaymentRef($paymentRef)
    {
        $this->container['paymentRef'] = $paymentRef;

        return $this;
    }

    /**
     * Gets referenceNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getReferenceNbr()
    {
        return $this->container['referenceNbr'];
    }

    /**
     * Sets referenceNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $referenceNbr referenceNbr
     *
     * @return $this
     */
    public function setReferenceNbr($referenceNbr)
    {
        $this->container['referenceNbr'] = $referenceNbr;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets type
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


