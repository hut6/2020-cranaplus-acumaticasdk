<?php
/**
 * SalesOrderDetailModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.22
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * SalesOrderDetailModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SalesOrderDetailModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SalesOrderDetail';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'account' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'allocations' => '\Hut6\CranaplusAcumaticaSdk\Model\SalesOrderDetailAllocationModel[]',
        'alternateID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'autoCreateIssue' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'averageCost' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'branch' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'commissionable' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'completed' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'discountAmount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'discountCode' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'discountedUnitPrice' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'discountPercent' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'extendedPrice' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'freeItem' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'inventoryID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'lastModifiedDate' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'lineDescription' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'lineNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\IntValueModel',
        'lineType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'location' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'manualDiscount' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'markForPO' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'openQty' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'operation' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'orderQty' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'overshipThreshold' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'pOSource' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'projectTask' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'purchasingSettings' => '\Hut6\CranaplusAcumaticaSdk\Model\PurchaseSettingsModel',
        'qtyOnShipments' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'reasonCode' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'requestedOn' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'salespersonID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'shipOn' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'shippingRule' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'subitem' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'taxCategory' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'unbilledAmount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'undershipThreshold' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'unitCost' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'unitPrice' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'uOM' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'warehouseID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'account' => null,
        'allocations' => null,
        'alternateID' => null,
        'autoCreateIssue' => null,
        'averageCost' => null,
        'branch' => null,
        'commissionable' => null,
        'completed' => null,
        'discountAmount' => null,
        'discountCode' => null,
        'discountedUnitPrice' => null,
        'discountPercent' => null,
        'extendedPrice' => null,
        'freeItem' => null,
        'inventoryID' => null,
        'lastModifiedDate' => null,
        'lineDescription' => null,
        'lineNbr' => null,
        'lineType' => null,
        'location' => null,
        'manualDiscount' => null,
        'markForPO' => null,
        'openQty' => null,
        'operation' => null,
        'orderQty' => null,
        'overshipThreshold' => null,
        'pOSource' => null,
        'projectTask' => null,
        'purchasingSettings' => null,
        'qtyOnShipments' => null,
        'reasonCode' => null,
        'requestedOn' => null,
        'salespersonID' => null,
        'shipOn' => null,
        'shippingRule' => null,
        'subitem' => null,
        'taxCategory' => null,
        'unbilledAmount' => null,
        'undershipThreshold' => null,
        'unitCost' => null,
        'unitPrice' => null,
        'uOM' => null,
        'warehouseID' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account' => 'Account',
        'allocations' => 'Allocations',
        'alternateID' => 'AlternateID',
        'autoCreateIssue' => 'AutoCreateIssue',
        'averageCost' => 'AverageCost',
        'branch' => 'Branch',
        'commissionable' => 'Commissionable',
        'completed' => 'Completed',
        'discountAmount' => 'DiscountAmount',
        'discountCode' => 'DiscountCode',
        'discountedUnitPrice' => 'DiscountedUnitPrice',
        'discountPercent' => 'DiscountPercent',
        'extendedPrice' => 'ExtendedPrice',
        'freeItem' => 'FreeItem',
        'inventoryID' => 'InventoryID',
        'lastModifiedDate' => 'LastModifiedDate',
        'lineDescription' => 'LineDescription',
        'lineNbr' => 'LineNbr',
        'lineType' => 'LineType',
        'location' => 'Location',
        'manualDiscount' => 'ManualDiscount',
        'markForPO' => 'MarkForPO',
        'openQty' => 'OpenQty',
        'operation' => 'Operation',
        'orderQty' => 'OrderQty',
        'overshipThreshold' => 'OvershipThreshold',
        'pOSource' => 'POSource',
        'projectTask' => 'ProjectTask',
        'purchasingSettings' => 'PurchasingSettings',
        'qtyOnShipments' => 'QtyOnShipments',
        'reasonCode' => 'ReasonCode',
        'requestedOn' => 'RequestedOn',
        'salespersonID' => 'SalespersonID',
        'shipOn' => 'ShipOn',
        'shippingRule' => 'ShippingRule',
        'subitem' => 'Subitem',
        'taxCategory' => 'TaxCategory',
        'unbilledAmount' => 'UnbilledAmount',
        'undershipThreshold' => 'UndershipThreshold',
        'unitCost' => 'UnitCost',
        'unitPrice' => 'UnitPrice',
        'uOM' => 'UOM',
        'warehouseID' => 'WarehouseID'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account' => 'setAccount',
        'allocations' => 'setAllocations',
        'alternateID' => 'setAlternateID',
        'autoCreateIssue' => 'setAutoCreateIssue',
        'averageCost' => 'setAverageCost',
        'branch' => 'setBranch',
        'commissionable' => 'setCommissionable',
        'completed' => 'setCompleted',
        'discountAmount' => 'setDiscountAmount',
        'discountCode' => 'setDiscountCode',
        'discountedUnitPrice' => 'setDiscountedUnitPrice',
        'discountPercent' => 'setDiscountPercent',
        'extendedPrice' => 'setExtendedPrice',
        'freeItem' => 'setFreeItem',
        'inventoryID' => 'setInventoryID',
        'lastModifiedDate' => 'setLastModifiedDate',
        'lineDescription' => 'setLineDescription',
        'lineNbr' => 'setLineNbr',
        'lineType' => 'setLineType',
        'location' => 'setLocation',
        'manualDiscount' => 'setManualDiscount',
        'markForPO' => 'setMarkForPO',
        'openQty' => 'setOpenQty',
        'operation' => 'setOperation',
        'orderQty' => 'setOrderQty',
        'overshipThreshold' => 'setOvershipThreshold',
        'pOSource' => 'setPOSource',
        'projectTask' => 'setProjectTask',
        'purchasingSettings' => 'setPurchasingSettings',
        'qtyOnShipments' => 'setQtyOnShipments',
        'reasonCode' => 'setReasonCode',
        'requestedOn' => 'setRequestedOn',
        'salespersonID' => 'setSalespersonID',
        'shipOn' => 'setShipOn',
        'shippingRule' => 'setShippingRule',
        'subitem' => 'setSubitem',
        'taxCategory' => 'setTaxCategory',
        'unbilledAmount' => 'setUnbilledAmount',
        'undershipThreshold' => 'setUndershipThreshold',
        'unitCost' => 'setUnitCost',
        'unitPrice' => 'setUnitPrice',
        'uOM' => 'setUOM',
        'warehouseID' => 'setWarehouseID'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account' => 'getAccount',
        'allocations' => 'getAllocations',
        'alternateID' => 'getAlternateID',
        'autoCreateIssue' => 'getAutoCreateIssue',
        'averageCost' => 'getAverageCost',
        'branch' => 'getBranch',
        'commissionable' => 'getCommissionable',
        'completed' => 'getCompleted',
        'discountAmount' => 'getDiscountAmount',
        'discountCode' => 'getDiscountCode',
        'discountedUnitPrice' => 'getDiscountedUnitPrice',
        'discountPercent' => 'getDiscountPercent',
        'extendedPrice' => 'getExtendedPrice',
        'freeItem' => 'getFreeItem',
        'inventoryID' => 'getInventoryID',
        'lastModifiedDate' => 'getLastModifiedDate',
        'lineDescription' => 'getLineDescription',
        'lineNbr' => 'getLineNbr',
        'lineType' => 'getLineType',
        'location' => 'getLocation',
        'manualDiscount' => 'getManualDiscount',
        'markForPO' => 'getMarkForPO',
        'openQty' => 'getOpenQty',
        'operation' => 'getOperation',
        'orderQty' => 'getOrderQty',
        'overshipThreshold' => 'getOvershipThreshold',
        'pOSource' => 'getPOSource',
        'projectTask' => 'getProjectTask',
        'purchasingSettings' => 'getPurchasingSettings',
        'qtyOnShipments' => 'getQtyOnShipments',
        'reasonCode' => 'getReasonCode',
        'requestedOn' => 'getRequestedOn',
        'salespersonID' => 'getSalespersonID',
        'shipOn' => 'getShipOn',
        'shippingRule' => 'getShippingRule',
        'subitem' => 'getSubitem',
        'taxCategory' => 'getTaxCategory',
        'unbilledAmount' => 'getUnbilledAmount',
        'undershipThreshold' => 'getUndershipThreshold',
        'unitCost' => 'getUnitCost',
        'unitPrice' => 'getUnitPrice',
        'uOM' => 'getUOM',
        'warehouseID' => 'getWarehouseID'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['account'] = isset($data['account']) ? $data['account'] : null;
        $this->container['allocations'] = isset($data['allocations']) ? $data['allocations'] : null;
        $this->container['alternateID'] = isset($data['alternateID']) ? $data['alternateID'] : null;
        $this->container['autoCreateIssue'] = isset($data['autoCreateIssue']) ? $data['autoCreateIssue'] : null;
        $this->container['averageCost'] = isset($data['averageCost']) ? $data['averageCost'] : null;
        $this->container['branch'] = isset($data['branch']) ? $data['branch'] : null;
        $this->container['commissionable'] = isset($data['commissionable']) ? $data['commissionable'] : null;
        $this->container['completed'] = isset($data['completed']) ? $data['completed'] : null;
        $this->container['discountAmount'] = isset($data['discountAmount']) ? $data['discountAmount'] : null;
        $this->container['discountCode'] = isset($data['discountCode']) ? $data['discountCode'] : null;
        $this->container['discountedUnitPrice'] = isset($data['discountedUnitPrice']) ? $data['discountedUnitPrice'] : null;
        $this->container['discountPercent'] = isset($data['discountPercent']) ? $data['discountPercent'] : null;
        $this->container['extendedPrice'] = isset($data['extendedPrice']) ? $data['extendedPrice'] : null;
        $this->container['freeItem'] = isset($data['freeItem']) ? $data['freeItem'] : null;
        $this->container['inventoryID'] = isset($data['inventoryID']) ? $data['inventoryID'] : null;
        $this->container['lastModifiedDate'] = isset($data['lastModifiedDate']) ? $data['lastModifiedDate'] : null;
        $this->container['lineDescription'] = isset($data['lineDescription']) ? $data['lineDescription'] : null;
        $this->container['lineNbr'] = isset($data['lineNbr']) ? $data['lineNbr'] : null;
        $this->container['lineType'] = isset($data['lineType']) ? $data['lineType'] : null;
        $this->container['location'] = isset($data['location']) ? $data['location'] : null;
        $this->container['manualDiscount'] = isset($data['manualDiscount']) ? $data['manualDiscount'] : null;
        $this->container['markForPO'] = isset($data['markForPO']) ? $data['markForPO'] : null;
        $this->container['openQty'] = isset($data['openQty']) ? $data['openQty'] : null;
        $this->container['operation'] = isset($data['operation']) ? $data['operation'] : null;
        $this->container['orderQty'] = isset($data['orderQty']) ? $data['orderQty'] : null;
        $this->container['overshipThreshold'] = isset($data['overshipThreshold']) ? $data['overshipThreshold'] : null;
        $this->container['pOSource'] = isset($data['pOSource']) ? $data['pOSource'] : null;
        $this->container['projectTask'] = isset($data['projectTask']) ? $data['projectTask'] : null;
        $this->container['purchasingSettings'] = isset($data['purchasingSettings']) ? $data['purchasingSettings'] : null;
        $this->container['qtyOnShipments'] = isset($data['qtyOnShipments']) ? $data['qtyOnShipments'] : null;
        $this->container['reasonCode'] = isset($data['reasonCode']) ? $data['reasonCode'] : null;
        $this->container['requestedOn'] = isset($data['requestedOn']) ? $data['requestedOn'] : null;
        $this->container['salespersonID'] = isset($data['salespersonID']) ? $data['salespersonID'] : null;
        $this->container['shipOn'] = isset($data['shipOn']) ? $data['shipOn'] : null;
        $this->container['shippingRule'] = isset($data['shippingRule']) ? $data['shippingRule'] : null;
        $this->container['subitem'] = isset($data['subitem']) ? $data['subitem'] : null;
        $this->container['taxCategory'] = isset($data['taxCategory']) ? $data['taxCategory'] : null;
        $this->container['unbilledAmount'] = isset($data['unbilledAmount']) ? $data['unbilledAmount'] : null;
        $this->container['undershipThreshold'] = isset($data['undershipThreshold']) ? $data['undershipThreshold'] : null;
        $this->container['unitCost'] = isset($data['unitCost']) ? $data['unitCost'] : null;
        $this->container['unitPrice'] = isset($data['unitPrice']) ? $data['unitPrice'] : null;
        $this->container['uOM'] = isset($data['uOM']) ? $data['uOM'] : null;
        $this->container['warehouseID'] = isset($data['warehouseID']) ? $data['warehouseID'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $account account
     *
     * @return $this
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets allocations
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\SalesOrderDetailAllocationModel[]
     */
    public function getAllocations()
    {
        return $this->container['allocations'];
    }

    /**
     * Sets allocations
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\SalesOrderDetailAllocationModel[] $allocations allocations
     *
     * @return $this
     */
    public function setAllocations($allocations)
    {
        $this->container['allocations'] = $allocations;

        return $this;
    }

    /**
     * Gets alternateID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getAlternateID()
    {
        return $this->container['alternateID'];
    }

    /**
     * Sets alternateID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $alternateID alternateID
     *
     * @return $this
     */
    public function setAlternateID($alternateID)
    {
        $this->container['alternateID'] = $alternateID;

        return $this;
    }

    /**
     * Gets autoCreateIssue
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getAutoCreateIssue()
    {
        return $this->container['autoCreateIssue'];
    }

    /**
     * Sets autoCreateIssue
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $autoCreateIssue autoCreateIssue
     *
     * @return $this
     */
    public function setAutoCreateIssue($autoCreateIssue)
    {
        $this->container['autoCreateIssue'] = $autoCreateIssue;

        return $this;
    }

    /**
     * Gets averageCost
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getAverageCost()
    {
        return $this->container['averageCost'];
    }

    /**
     * Sets averageCost
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $averageCost averageCost
     *
     * @return $this
     */
    public function setAverageCost($averageCost)
    {
        $this->container['averageCost'] = $averageCost;

        return $this;
    }

    /**
     * Gets branch
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getBranch()
    {
        return $this->container['branch'];
    }

    /**
     * Sets branch
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $branch branch
     *
     * @return $this
     */
    public function setBranch($branch)
    {
        $this->container['branch'] = $branch;

        return $this;
    }

    /**
     * Gets commissionable
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getCommissionable()
    {
        return $this->container['commissionable'];
    }

    /**
     * Sets commissionable
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $commissionable commissionable
     *
     * @return $this
     */
    public function setCommissionable($commissionable)
    {
        $this->container['commissionable'] = $commissionable;

        return $this;
    }

    /**
     * Gets completed
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getCompleted()
    {
        return $this->container['completed'];
    }

    /**
     * Sets completed
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $completed completed
     *
     * @return $this
     */
    public function setCompleted($completed)
    {
        $this->container['completed'] = $completed;

        return $this;
    }

    /**
     * Gets discountAmount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getDiscountAmount()
    {
        return $this->container['discountAmount'];
    }

    /**
     * Sets discountAmount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $discountAmount discountAmount
     *
     * @return $this
     */
    public function setDiscountAmount($discountAmount)
    {
        $this->container['discountAmount'] = $discountAmount;

        return $this;
    }

    /**
     * Gets discountCode
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDiscountCode()
    {
        return $this->container['discountCode'];
    }

    /**
     * Sets discountCode
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $discountCode discountCode
     *
     * @return $this
     */
    public function setDiscountCode($discountCode)
    {
        $this->container['discountCode'] = $discountCode;

        return $this;
    }

    /**
     * Gets discountedUnitPrice
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getDiscountedUnitPrice()
    {
        return $this->container['discountedUnitPrice'];
    }

    /**
     * Sets discountedUnitPrice
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $discountedUnitPrice discountedUnitPrice
     *
     * @return $this
     */
    public function setDiscountedUnitPrice($discountedUnitPrice)
    {
        $this->container['discountedUnitPrice'] = $discountedUnitPrice;

        return $this;
    }

    /**
     * Gets discountPercent
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getDiscountPercent()
    {
        return $this->container['discountPercent'];
    }

    /**
     * Sets discountPercent
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $discountPercent discountPercent
     *
     * @return $this
     */
    public function setDiscountPercent($discountPercent)
    {
        $this->container['discountPercent'] = $discountPercent;

        return $this;
    }

    /**
     * Gets extendedPrice
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getExtendedPrice()
    {
        return $this->container['extendedPrice'];
    }

    /**
     * Sets extendedPrice
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $extendedPrice extendedPrice
     *
     * @return $this
     */
    public function setExtendedPrice($extendedPrice)
    {
        $this->container['extendedPrice'] = $extendedPrice;

        return $this;
    }

    /**
     * Gets freeItem
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getFreeItem()
    {
        return $this->container['freeItem'];
    }

    /**
     * Sets freeItem
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $freeItem freeItem
     *
     * @return $this
     */
    public function setFreeItem($freeItem)
    {
        $this->container['freeItem'] = $freeItem;

        return $this;
    }

    /**
     * Gets inventoryID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getInventoryID()
    {
        return $this->container['inventoryID'];
    }

    /**
     * Sets inventoryID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $inventoryID inventoryID
     *
     * @return $this
     */
    public function setInventoryID($inventoryID)
    {
        $this->container['inventoryID'] = $inventoryID;

        return $this;
    }

    /**
     * Gets lastModifiedDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLastModifiedDate()
    {
        return $this->container['lastModifiedDate'];
    }

    /**
     * Sets lastModifiedDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $lastModifiedDate lastModifiedDate
     *
     * @return $this
     */
    public function setLastModifiedDate($lastModifiedDate)
    {
        $this->container['lastModifiedDate'] = $lastModifiedDate;

        return $this;
    }

    /**
     * Gets lineDescription
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLineDescription()
    {
        return $this->container['lineDescription'];
    }

    /**
     * Sets lineDescription
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $lineDescription lineDescription
     *
     * @return $this
     */
    public function setLineDescription($lineDescription)
    {
        $this->container['lineDescription'] = $lineDescription;

        return $this;
    }

    /**
     * Gets lineNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel
     */
    public function getLineNbr()
    {
        return $this->container['lineNbr'];
    }

    /**
     * Sets lineNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel $lineNbr lineNbr
     *
     * @return $this
     */
    public function setLineNbr($lineNbr)
    {
        $this->container['lineNbr'] = $lineNbr;

        return $this;
    }

    /**
     * Gets lineType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLineType()
    {
        return $this->container['lineType'];
    }

    /**
     * Sets lineType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $lineType lineType
     *
     * @return $this
     */
    public function setLineType($lineType)
    {
        $this->container['lineType'] = $lineType;

        return $this;
    }

    /**
     * Gets location
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $location location
     *
     * @return $this
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets manualDiscount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getManualDiscount()
    {
        return $this->container['manualDiscount'];
    }

    /**
     * Sets manualDiscount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $manualDiscount manualDiscount
     *
     * @return $this
     */
    public function setManualDiscount($manualDiscount)
    {
        $this->container['manualDiscount'] = $manualDiscount;

        return $this;
    }

    /**
     * Gets markForPO
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getMarkForPO()
    {
        return $this->container['markForPO'];
    }

    /**
     * Sets markForPO
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $markForPO markForPO
     *
     * @return $this
     */
    public function setMarkForPO($markForPO)
    {
        $this->container['markForPO'] = $markForPO;

        return $this;
    }

    /**
     * Gets openQty
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getOpenQty()
    {
        return $this->container['openQty'];
    }

    /**
     * Sets openQty
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $openQty openQty
     *
     * @return $this
     */
    public function setOpenQty($openQty)
    {
        $this->container['openQty'] = $openQty;

        return $this;
    }

    /**
     * Gets operation
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getOperation()
    {
        return $this->container['operation'];
    }

    /**
     * Sets operation
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $operation operation
     *
     * @return $this
     */
    public function setOperation($operation)
    {
        $this->container['operation'] = $operation;

        return $this;
    }

    /**
     * Gets orderQty
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getOrderQty()
    {
        return $this->container['orderQty'];
    }

    /**
     * Sets orderQty
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $orderQty orderQty
     *
     * @return $this
     */
    public function setOrderQty($orderQty)
    {
        $this->container['orderQty'] = $orderQty;

        return $this;
    }

    /**
     * Gets overshipThreshold
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getOvershipThreshold()
    {
        return $this->container['overshipThreshold'];
    }

    /**
     * Sets overshipThreshold
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $overshipThreshold overshipThreshold
     *
     * @return $this
     */
    public function setOvershipThreshold($overshipThreshold)
    {
        $this->container['overshipThreshold'] = $overshipThreshold;

        return $this;
    }

    /**
     * Gets pOSource
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPOSource()
    {
        return $this->container['pOSource'];
    }

    /**
     * Sets pOSource
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $pOSource pOSource
     *
     * @return $this
     */
    public function setPOSource($pOSource)
    {
        $this->container['pOSource'] = $pOSource;

        return $this;
    }

    /**
     * Gets projectTask
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getProjectTask()
    {
        return $this->container['projectTask'];
    }

    /**
     * Sets projectTask
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $projectTask projectTask
     *
     * @return $this
     */
    public function setProjectTask($projectTask)
    {
        $this->container['projectTask'] = $projectTask;

        return $this;
    }

    /**
     * Gets purchasingSettings
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\PurchaseSettingsModel
     */
    public function getPurchasingSettings()
    {
        return $this->container['purchasingSettings'];
    }

    /**
     * Sets purchasingSettings
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\PurchaseSettingsModel $purchasingSettings purchasingSettings
     *
     * @return $this
     */
    public function setPurchasingSettings($purchasingSettings)
    {
        $this->container['purchasingSettings'] = $purchasingSettings;

        return $this;
    }

    /**
     * Gets qtyOnShipments
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getQtyOnShipments()
    {
        return $this->container['qtyOnShipments'];
    }

    /**
     * Sets qtyOnShipments
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $qtyOnShipments qtyOnShipments
     *
     * @return $this
     */
    public function setQtyOnShipments($qtyOnShipments)
    {
        $this->container['qtyOnShipments'] = $qtyOnShipments;

        return $this;
    }

    /**
     * Gets reasonCode
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getReasonCode()
    {
        return $this->container['reasonCode'];
    }

    /**
     * Sets reasonCode
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $reasonCode reasonCode
     *
     * @return $this
     */
    public function setReasonCode($reasonCode)
    {
        $this->container['reasonCode'] = $reasonCode;

        return $this;
    }

    /**
     * Gets requestedOn
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getRequestedOn()
    {
        return $this->container['requestedOn'];
    }

    /**
     * Sets requestedOn
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $requestedOn requestedOn
     *
     * @return $this
     */
    public function setRequestedOn($requestedOn)
    {
        $this->container['requestedOn'] = $requestedOn;

        return $this;
    }

    /**
     * Gets salespersonID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getSalespersonID()
    {
        return $this->container['salespersonID'];
    }

    /**
     * Sets salespersonID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $salespersonID salespersonID
     *
     * @return $this
     */
    public function setSalespersonID($salespersonID)
    {
        $this->container['salespersonID'] = $salespersonID;

        return $this;
    }

    /**
     * Gets shipOn
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getShipOn()
    {
        return $this->container['shipOn'];
    }

    /**
     * Sets shipOn
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $shipOn shipOn
     *
     * @return $this
     */
    public function setShipOn($shipOn)
    {
        $this->container['shipOn'] = $shipOn;

        return $this;
    }

    /**
     * Gets shippingRule
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getShippingRule()
    {
        return $this->container['shippingRule'];
    }

    /**
     * Sets shippingRule
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $shippingRule shippingRule
     *
     * @return $this
     */
    public function setShippingRule($shippingRule)
    {
        $this->container['shippingRule'] = $shippingRule;

        return $this;
    }

    /**
     * Gets subitem
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getSubitem()
    {
        return $this->container['subitem'];
    }

    /**
     * Sets subitem
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $subitem subitem
     *
     * @return $this
     */
    public function setSubitem($subitem)
    {
        $this->container['subitem'] = $subitem;

        return $this;
    }

    /**
     * Gets taxCategory
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxCategory()
    {
        return $this->container['taxCategory'];
    }

    /**
     * Sets taxCategory
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxCategory taxCategory
     *
     * @return $this
     */
    public function setTaxCategory($taxCategory)
    {
        $this->container['taxCategory'] = $taxCategory;

        return $this;
    }

    /**
     * Gets unbilledAmount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getUnbilledAmount()
    {
        return $this->container['unbilledAmount'];
    }

    /**
     * Sets unbilledAmount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $unbilledAmount unbilledAmount
     *
     * @return $this
     */
    public function setUnbilledAmount($unbilledAmount)
    {
        $this->container['unbilledAmount'] = $unbilledAmount;

        return $this;
    }

    /**
     * Gets undershipThreshold
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getUndershipThreshold()
    {
        return $this->container['undershipThreshold'];
    }

    /**
     * Sets undershipThreshold
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $undershipThreshold undershipThreshold
     *
     * @return $this
     */
    public function setUndershipThreshold($undershipThreshold)
    {
        $this->container['undershipThreshold'] = $undershipThreshold;

        return $this;
    }

    /**
     * Gets unitCost
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getUnitCost()
    {
        return $this->container['unitCost'];
    }

    /**
     * Sets unitCost
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $unitCost unitCost
     *
     * @return $this
     */
    public function setUnitCost($unitCost)
    {
        $this->container['unitCost'] = $unitCost;

        return $this;
    }

    /**
     * Gets unitPrice
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getUnitPrice()
    {
        return $this->container['unitPrice'];
    }

    /**
     * Sets unitPrice
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $unitPrice unitPrice
     *
     * @return $this
     */
    public function setUnitPrice($unitPrice)
    {
        $this->container['unitPrice'] = $unitPrice;

        return $this;
    }

    /**
     * Gets uOM
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getUOM()
    {
        return $this->container['uOM'];
    }

    /**
     * Sets uOM
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $uOM uOM
     *
     * @return $this
     */
    public function setUOM($uOM)
    {
        $this->container['uOM'] = $uOM;

        return $this;
    }

    /**
     * Gets warehouseID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getWarehouseID()
    {
        return $this->container['warehouseID'];
    }

    /**
     * Sets warehouseID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $warehouseID warehouseID
     *
     * @return $this
     */
    public function setWarehouseID($warehouseID)
    {
        $this->container['warehouseID'] = $warehouseID;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


