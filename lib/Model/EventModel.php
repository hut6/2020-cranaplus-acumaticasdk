<?php
/**
 * EventModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Default/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.12
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;

use \ArrayAccess;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * EventModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EventModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Event';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'rowNumber' => 'int',
        'note' => 'string',
        'custom' => 'map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]',
        'files' => '\Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]',
        'allDay' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'attendees' => '\Hut6\CranaplusAcumaticaSdk\Model\EventAttendeeModel[]',
        'body' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'category' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'endDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'endTime' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'internal' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'location' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'noteID' => '\Hut6\CranaplusAcumaticaSdk\Model\GuidValueModel',
        'priority' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'relatedActivities' => '\Hut6\CranaplusAcumaticaSdk\Model\EventRelatedActivityModel[]',
        'relatedEntityDescription' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'reminder' => '\Hut6\CranaplusAcumaticaSdk\Model\ReminderDetailModel',
        'showAs' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'startDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'startTime' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'status' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'summary' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'timeActivity' => '\Hut6\CranaplusAcumaticaSdk\Model\EventTimeActivityModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'uuid',
        'rowNumber' => 'int64',
        'note' => null,
        'custom' => null,
        'files' => null,
        'allDay' => null,
        'attendees' => null,
        'body' => null,
        'category' => null,
        'endDate' => null,
        'endTime' => null,
        'internal' => null,
        'location' => null,
        'noteID' => null,
        'priority' => null,
        'relatedActivities' => null,
        'relatedEntityDescription' => null,
        'reminder' => null,
        'showAs' => null,
        'startDate' => null,
        'startTime' => null,
        'status' => null,
        'summary' => null,
        'timeActivity' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'rowNumber' => 'rowNumber',
        'note' => 'note',
        'custom' => 'custom',
        'files' => 'files',
        'allDay' => 'AllDay',
        'attendees' => 'Attendees',
        'body' => 'Body',
        'category' => 'Category',
        'endDate' => 'EndDate',
        'endTime' => 'EndTime',
        'internal' => 'Internal',
        'location' => 'Location',
        'noteID' => 'NoteID',
        'priority' => 'Priority',
        'relatedActivities' => 'RelatedActivities',
        'relatedEntityDescription' => 'RelatedEntityDescription',
        'reminder' => 'Reminder',
        'showAs' => 'ShowAs',
        'startDate' => 'StartDate',
        'startTime' => 'StartTime',
        'status' => 'Status',
        'summary' => 'Summary',
        'timeActivity' => 'TimeActivity'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'rowNumber' => 'setRowNumber',
        'note' => 'setNote',
        'custom' => 'setCustom',
        'files' => 'setFiles',
        'allDay' => 'setAllDay',
        'attendees' => 'setAttendees',
        'body' => 'setBody',
        'category' => 'setCategory',
        'endDate' => 'setEndDate',
        'endTime' => 'setEndTime',
        'internal' => 'setInternal',
        'location' => 'setLocation',
        'noteID' => 'setNoteID',
        'priority' => 'setPriority',
        'relatedActivities' => 'setRelatedActivities',
        'relatedEntityDescription' => 'setRelatedEntityDescription',
        'reminder' => 'setReminder',
        'showAs' => 'setShowAs',
        'startDate' => 'setStartDate',
        'startTime' => 'setStartTime',
        'status' => 'setStatus',
        'summary' => 'setSummary',
        'timeActivity' => 'setTimeActivity'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'rowNumber' => 'getRowNumber',
        'note' => 'getNote',
        'custom' => 'getCustom',
        'files' => 'getFiles',
        'allDay' => 'getAllDay',
        'attendees' => 'getAttendees',
        'body' => 'getBody',
        'category' => 'getCategory',
        'endDate' => 'getEndDate',
        'endTime' => 'getEndTime',
        'internal' => 'getInternal',
        'location' => 'getLocation',
        'noteID' => 'getNoteID',
        'priority' => 'getPriority',
        'relatedActivities' => 'getRelatedActivities',
        'relatedEntityDescription' => 'getRelatedEntityDescription',
        'reminder' => 'getReminder',
        'showAs' => 'getShowAs',
        'startDate' => 'getStartDate',
        'startTime' => 'getStartTime',
        'status' => 'getStatus',
        'summary' => 'getSummary',
        'timeActivity' => 'getTimeActivity'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['rowNumber'] = isset($data['rowNumber']) ? $data['rowNumber'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['custom'] = isset($data['custom']) ? $data['custom'] : null;
        $this->container['files'] = isset($data['files']) ? $data['files'] : null;
        $this->container['allDay'] = isset($data['allDay']) ? $data['allDay'] : null;
        $this->container['attendees'] = isset($data['attendees']) ? $data['attendees'] : null;
        $this->container['body'] = isset($data['body']) ? $data['body'] : null;
        $this->container['category'] = isset($data['category']) ? $data['category'] : null;
        $this->container['endDate'] = isset($data['endDate']) ? $data['endDate'] : null;
        $this->container['endTime'] = isset($data['endTime']) ? $data['endTime'] : null;
        $this->container['internal'] = isset($data['internal']) ? $data['internal'] : null;
        $this->container['location'] = isset($data['location']) ? $data['location'] : null;
        $this->container['noteID'] = isset($data['noteID']) ? $data['noteID'] : null;
        $this->container['priority'] = isset($data['priority']) ? $data['priority'] : null;
        $this->container['relatedActivities'] = isset($data['relatedActivities']) ? $data['relatedActivities'] : null;
        $this->container['relatedEntityDescription'] = isset($data['relatedEntityDescription']) ? $data['relatedEntityDescription'] : null;
        $this->container['reminder'] = isset($data['reminder']) ? $data['reminder'] : null;
        $this->container['showAs'] = isset($data['showAs']) ? $data['showAs'] : null;
        $this->container['startDate'] = isset($data['startDate']) ? $data['startDate'] : null;
        $this->container['startTime'] = isset($data['startTime']) ? $data['startTime'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['summary'] = isset($data['summary']) ? $data['summary'] : null;
        $this->container['timeActivity'] = isset($data['timeActivity']) ? $data['timeActivity'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets rowNumber
     *
     * @return int
     */
    public function getRowNumber()
    {
        return $this->container['rowNumber'];
    }

    /**
     * Sets rowNumber
     *
     * @param int $rowNumber rowNumber
     *
     * @return $this
     */
    public function setRowNumber($rowNumber)
    {
        $this->container['rowNumber'] = $rowNumber;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note note
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets custom
     *
     * @return map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]
     */
    public function getCustom()
    {
        return $this->container['custom'];
    }

    /**
     * Sets custom
     *
     * @param map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]] $custom custom
     *
     * @return $this
     */
    public function setCustom($custom)
    {
        $this->container['custom'] = $custom;

        return $this;
    }

    /**
     * Gets files
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]
     */
    public function getFiles()
    {
        return $this->container['files'];
    }

    /**
     * Sets files
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[] $files files
     *
     * @return $this
     */
    public function setFiles($files)
    {
        $this->container['files'] = $files;

        return $this;
    }

    /**
     * Gets allDay
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getAllDay()
    {
        return $this->container['allDay'];
    }

    /**
     * Sets allDay
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $allDay allDay
     *
     * @return $this
     */
    public function setAllDay($allDay)
    {
        $this->container['allDay'] = $allDay;

        return $this;
    }

    /**
     * Gets attendees
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\EventAttendeeModel[]
     */
    public function getAttendees()
    {
        return $this->container['attendees'];
    }

    /**
     * Sets attendees
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\EventAttendeeModel[] $attendees attendees
     *
     * @return $this
     */
    public function setAttendees($attendees)
    {
        $this->container['attendees'] = $attendees;

        return $this;
    }

    /**
     * Gets body
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getBody()
    {
        return $this->container['body'];
    }

    /**
     * Sets body
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $body body
     *
     * @return $this
     */
    public function setBody($body)
    {
        $this->container['body'] = $body;

        return $this;
    }

    /**
     * Gets category
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCategory()
    {
        return $this->container['category'];
    }

    /**
     * Sets category
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $category category
     *
     * @return $this
     */
    public function setCategory($category)
    {
        $this->container['category'] = $category;

        return $this;
    }

    /**
     * Gets endDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getEndDate()
    {
        return $this->container['endDate'];
    }

    /**
     * Sets endDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $endDate endDate
     *
     * @return $this
     */
    public function setEndDate($endDate)
    {
        $this->container['endDate'] = $endDate;

        return $this;
    }

    /**
     * Gets endTime
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getEndTime()
    {
        return $this->container['endTime'];
    }

    /**
     * Sets endTime
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $endTime endTime
     *
     * @return $this
     */
    public function setEndTime($endTime)
    {
        $this->container['endTime'] = $endTime;

        return $this;
    }

    /**
     * Gets internal
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getInternal()
    {
        return $this->container['internal'];
    }

    /**
     * Sets internal
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $internal internal
     *
     * @return $this
     */
    public function setInternal($internal)
    {
        $this->container['internal'] = $internal;

        return $this;
    }

    /**
     * Gets location
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $location location
     *
     * @return $this
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets noteID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\GuidValueModel
     */
    public function getNoteID()
    {
        return $this->container['noteID'];
    }

    /**
     * Sets noteID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\GuidValueModel $noteID noteID
     *
     * @return $this
     */
    public function setNoteID($noteID)
    {
        $this->container['noteID'] = $noteID;

        return $this;
    }

    /**
     * Gets priority
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPriority()
    {
        return $this->container['priority'];
    }

    /**
     * Sets priority
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $priority priority
     *
     * @return $this
     */
    public function setPriority($priority)
    {
        $this->container['priority'] = $priority;

        return $this;
    }

    /**
     * Gets relatedActivities
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\EventRelatedActivityModel[]
     */
    public function getRelatedActivities()
    {
        return $this->container['relatedActivities'];
    }

    /**
     * Sets relatedActivities
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\EventRelatedActivityModel[] $relatedActivities relatedActivities
     *
     * @return $this
     */
    public function setRelatedActivities($relatedActivities)
    {
        $this->container['relatedActivities'] = $relatedActivities;

        return $this;
    }

    /**
     * Gets relatedEntityDescription
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getRelatedEntityDescription()
    {
        return $this->container['relatedEntityDescription'];
    }

    /**
     * Sets relatedEntityDescription
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $relatedEntityDescription relatedEntityDescription
     *
     * @return $this
     */
    public function setRelatedEntityDescription($relatedEntityDescription)
    {
        $this->container['relatedEntityDescription'] = $relatedEntityDescription;

        return $this;
    }

    /**
     * Gets reminder
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\ReminderDetailModel
     */
    public function getReminder()
    {
        return $this->container['reminder'];
    }

    /**
     * Sets reminder
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\ReminderDetailModel $reminder reminder
     *
     * @return $this
     */
    public function setReminder($reminder)
    {
        $this->container['reminder'] = $reminder;

        return $this;
    }

    /**
     * Gets showAs
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getShowAs()
    {
        return $this->container['showAs'];
    }

    /**
     * Sets showAs
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $showAs showAs
     *
     * @return $this
     */
    public function setShowAs($showAs)
    {
        $this->container['showAs'] = $showAs;

        return $this;
    }

    /**
     * Gets startDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getStartDate()
    {
        return $this->container['startDate'];
    }

    /**
     * Sets startDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $startDate startDate
     *
     * @return $this
     */
    public function setStartDate($startDate)
    {
        $this->container['startDate'] = $startDate;

        return $this;
    }

    /**
     * Gets startTime
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getStartTime()
    {
        return $this->container['startTime'];
    }

    /**
     * Sets startTime
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $startTime startTime
     *
     * @return $this
     */
    public function setStartTime($startTime)
    {
        $this->container['startTime'] = $startTime;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets summary
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getSummary()
    {
        return $this->container['summary'];
    }

    /**
     * Sets summary
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $summary summary
     *
     * @return $this
     */
    public function setSummary($summary)
    {
        $this->container['summary'] = $summary;

        return $this;
    }

    /**
     * Gets timeActivity
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\EventTimeActivityModel
     */
    public function getTimeActivity()
    {
        return $this->container['timeActivity'];
    }

    /**
     * Sets timeActivity
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\EventTimeActivityModel $timeActivity timeActivity
     *
     * @return $this
     */
    public function setTimeActivity($timeActivity)
    {
        $this->container['timeActivity'] = $timeActivity;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


