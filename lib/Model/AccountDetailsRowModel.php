<?php
/**
 * AccountDetailsRowModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * AccountDetailsRowModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AccountDetailsRowModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AccountDetailsRow';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'account' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'batchNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'beginingBalance' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'branch' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'creditAmount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'currencyBeginingBalance' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'currencyCreditAmount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'currencyDebitAmount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'currencyEndingBalance' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'currencyID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'debitAmount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'description' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'endingBalance' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'includedinReclassHistory' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'inventoryID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'lineNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\IntValueModel',
        'module' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'period' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'reclassBatchNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'referenceNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'selected' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'subaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'transactionDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'vendorOrCustomer' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'account' => null,
        'batchNbr' => null,
        'beginingBalance' => null,
        'branch' => null,
        'creditAmount' => null,
        'currencyBeginingBalance' => null,
        'currencyCreditAmount' => null,
        'currencyDebitAmount' => null,
        'currencyEndingBalance' => null,
        'currencyID' => null,
        'debitAmount' => null,
        'description' => null,
        'endingBalance' => null,
        'includedinReclassHistory' => null,
        'inventoryID' => null,
        'lineNbr' => null,
        'module' => null,
        'period' => null,
        'reclassBatchNbr' => null,
        'referenceNbr' => null,
        'selected' => null,
        'subaccount' => null,
        'transactionDate' => null,
        'vendorOrCustomer' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account' => 'Account',
        'batchNbr' => 'BatchNbr',
        'beginingBalance' => 'BeginingBalance',
        'branch' => 'Branch',
        'creditAmount' => 'CreditAmount',
        'currencyBeginingBalance' => 'CurrencyBeginingBalance',
        'currencyCreditAmount' => 'CurrencyCreditAmount',
        'currencyDebitAmount' => 'CurrencyDebitAmount',
        'currencyEndingBalance' => 'CurrencyEndingBalance',
        'currencyID' => 'CurrencyID',
        'debitAmount' => 'DebitAmount',
        'description' => 'Description',
        'endingBalance' => 'EndingBalance',
        'includedinReclassHistory' => 'IncludedinReclassHistory',
        'inventoryID' => 'InventoryID',
        'lineNbr' => 'LineNbr',
        'module' => 'Module',
        'period' => 'Period',
        'reclassBatchNbr' => 'ReclassBatchNbr',
        'referenceNbr' => 'ReferenceNbr',
        'selected' => 'Selected',
        'subaccount' => 'Subaccount',
        'transactionDate' => 'TransactionDate',
        'vendorOrCustomer' => 'VendorOrCustomer'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account' => 'setAccount',
        'batchNbr' => 'setBatchNbr',
        'beginingBalance' => 'setBeginingBalance',
        'branch' => 'setBranch',
        'creditAmount' => 'setCreditAmount',
        'currencyBeginingBalance' => 'setCurrencyBeginingBalance',
        'currencyCreditAmount' => 'setCurrencyCreditAmount',
        'currencyDebitAmount' => 'setCurrencyDebitAmount',
        'currencyEndingBalance' => 'setCurrencyEndingBalance',
        'currencyID' => 'setCurrencyID',
        'debitAmount' => 'setDebitAmount',
        'description' => 'setDescription',
        'endingBalance' => 'setEndingBalance',
        'includedinReclassHistory' => 'setIncludedinReclassHistory',
        'inventoryID' => 'setInventoryID',
        'lineNbr' => 'setLineNbr',
        'module' => 'setModule',
        'period' => 'setPeriod',
        'reclassBatchNbr' => 'setReclassBatchNbr',
        'referenceNbr' => 'setReferenceNbr',
        'selected' => 'setSelected',
        'subaccount' => 'setSubaccount',
        'transactionDate' => 'setTransactionDate',
        'vendorOrCustomer' => 'setVendorOrCustomer'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account' => 'getAccount',
        'batchNbr' => 'getBatchNbr',
        'beginingBalance' => 'getBeginingBalance',
        'branch' => 'getBranch',
        'creditAmount' => 'getCreditAmount',
        'currencyBeginingBalance' => 'getCurrencyBeginingBalance',
        'currencyCreditAmount' => 'getCurrencyCreditAmount',
        'currencyDebitAmount' => 'getCurrencyDebitAmount',
        'currencyEndingBalance' => 'getCurrencyEndingBalance',
        'currencyID' => 'getCurrencyID',
        'debitAmount' => 'getDebitAmount',
        'description' => 'getDescription',
        'endingBalance' => 'getEndingBalance',
        'includedinReclassHistory' => 'getIncludedinReclassHistory',
        'inventoryID' => 'getInventoryID',
        'lineNbr' => 'getLineNbr',
        'module' => 'getModule',
        'period' => 'getPeriod',
        'reclassBatchNbr' => 'getReclassBatchNbr',
        'referenceNbr' => 'getReferenceNbr',
        'selected' => 'getSelected',
        'subaccount' => 'getSubaccount',
        'transactionDate' => 'getTransactionDate',
        'vendorOrCustomer' => 'getVendorOrCustomer'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['account'] = isset($data['account']) ? $data['account'] : null;
        $this->container['batchNbr'] = isset($data['batchNbr']) ? $data['batchNbr'] : null;
        $this->container['beginingBalance'] = isset($data['beginingBalance']) ? $data['beginingBalance'] : null;
        $this->container['branch'] = isset($data['branch']) ? $data['branch'] : null;
        $this->container['creditAmount'] = isset($data['creditAmount']) ? $data['creditAmount'] : null;
        $this->container['currencyBeginingBalance'] = isset($data['currencyBeginingBalance']) ? $data['currencyBeginingBalance'] : null;
        $this->container['currencyCreditAmount'] = isset($data['currencyCreditAmount']) ? $data['currencyCreditAmount'] : null;
        $this->container['currencyDebitAmount'] = isset($data['currencyDebitAmount']) ? $data['currencyDebitAmount'] : null;
        $this->container['currencyEndingBalance'] = isset($data['currencyEndingBalance']) ? $data['currencyEndingBalance'] : null;
        $this->container['currencyID'] = isset($data['currencyID']) ? $data['currencyID'] : null;
        $this->container['debitAmount'] = isset($data['debitAmount']) ? $data['debitAmount'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['endingBalance'] = isset($data['endingBalance']) ? $data['endingBalance'] : null;
        $this->container['includedinReclassHistory'] = isset($data['includedinReclassHistory']) ? $data['includedinReclassHistory'] : null;
        $this->container['inventoryID'] = isset($data['inventoryID']) ? $data['inventoryID'] : null;
        $this->container['lineNbr'] = isset($data['lineNbr']) ? $data['lineNbr'] : null;
        $this->container['module'] = isset($data['module']) ? $data['module'] : null;
        $this->container['period'] = isset($data['period']) ? $data['period'] : null;
        $this->container['reclassBatchNbr'] = isset($data['reclassBatchNbr']) ? $data['reclassBatchNbr'] : null;
        $this->container['referenceNbr'] = isset($data['referenceNbr']) ? $data['referenceNbr'] : null;
        $this->container['selected'] = isset($data['selected']) ? $data['selected'] : null;
        $this->container['subaccount'] = isset($data['subaccount']) ? $data['subaccount'] : null;
        $this->container['transactionDate'] = isset($data['transactionDate']) ? $data['transactionDate'] : null;
        $this->container['vendorOrCustomer'] = isset($data['vendorOrCustomer']) ? $data['vendorOrCustomer'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $account account
     *
     * @return $this
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets batchNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getBatchNbr()
    {
        return $this->container['batchNbr'];
    }

    /**
     * Sets batchNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $batchNbr batchNbr
     *
     * @return $this
     */
    public function setBatchNbr($batchNbr)
    {
        $this->container['batchNbr'] = $batchNbr;

        return $this;
    }

    /**
     * Gets beginingBalance
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getBeginingBalance()
    {
        return $this->container['beginingBalance'];
    }

    /**
     * Sets beginingBalance
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $beginingBalance beginingBalance
     *
     * @return $this
     */
    public function setBeginingBalance($beginingBalance)
    {
        $this->container['beginingBalance'] = $beginingBalance;

        return $this;
    }

    /**
     * Gets branch
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getBranch()
    {
        return $this->container['branch'];
    }

    /**
     * Sets branch
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $branch branch
     *
     * @return $this
     */
    public function setBranch($branch)
    {
        $this->container['branch'] = $branch;

        return $this;
    }

    /**
     * Gets creditAmount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getCreditAmount()
    {
        return $this->container['creditAmount'];
    }

    /**
     * Sets creditAmount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $creditAmount creditAmount
     *
     * @return $this
     */
    public function setCreditAmount($creditAmount)
    {
        $this->container['creditAmount'] = $creditAmount;

        return $this;
    }

    /**
     * Gets currencyBeginingBalance
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getCurrencyBeginingBalance()
    {
        return $this->container['currencyBeginingBalance'];
    }

    /**
     * Sets currencyBeginingBalance
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $currencyBeginingBalance currencyBeginingBalance
     *
     * @return $this
     */
    public function setCurrencyBeginingBalance($currencyBeginingBalance)
    {
        $this->container['currencyBeginingBalance'] = $currencyBeginingBalance;

        return $this;
    }

    /**
     * Gets currencyCreditAmount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getCurrencyCreditAmount()
    {
        return $this->container['currencyCreditAmount'];
    }

    /**
     * Sets currencyCreditAmount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $currencyCreditAmount currencyCreditAmount
     *
     * @return $this
     */
    public function setCurrencyCreditAmount($currencyCreditAmount)
    {
        $this->container['currencyCreditAmount'] = $currencyCreditAmount;

        return $this;
    }

    /**
     * Gets currencyDebitAmount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getCurrencyDebitAmount()
    {
        return $this->container['currencyDebitAmount'];
    }

    /**
     * Sets currencyDebitAmount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $currencyDebitAmount currencyDebitAmount
     *
     * @return $this
     */
    public function setCurrencyDebitAmount($currencyDebitAmount)
    {
        $this->container['currencyDebitAmount'] = $currencyDebitAmount;

        return $this;
    }

    /**
     * Gets currencyEndingBalance
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getCurrencyEndingBalance()
    {
        return $this->container['currencyEndingBalance'];
    }

    /**
     * Sets currencyEndingBalance
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $currencyEndingBalance currencyEndingBalance
     *
     * @return $this
     */
    public function setCurrencyEndingBalance($currencyEndingBalance)
    {
        $this->container['currencyEndingBalance'] = $currencyEndingBalance;

        return $this;
    }

    /**
     * Gets currencyID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCurrencyID()
    {
        return $this->container['currencyID'];
    }

    /**
     * Sets currencyID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $currencyID currencyID
     *
     * @return $this
     */
    public function setCurrencyID($currencyID)
    {
        $this->container['currencyID'] = $currencyID;

        return $this;
    }

    /**
     * Gets debitAmount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getDebitAmount()
    {
        return $this->container['debitAmount'];
    }

    /**
     * Sets debitAmount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $debitAmount debitAmount
     *
     * @return $this
     */
    public function setDebitAmount($debitAmount)
    {
        $this->container['debitAmount'] = $debitAmount;

        return $this;
    }

    /**
     * Gets description
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets endingBalance
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getEndingBalance()
    {
        return $this->container['endingBalance'];
    }

    /**
     * Sets endingBalance
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $endingBalance endingBalance
     *
     * @return $this
     */
    public function setEndingBalance($endingBalance)
    {
        $this->container['endingBalance'] = $endingBalance;

        return $this;
    }

    /**
     * Gets includedinReclassHistory
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getIncludedinReclassHistory()
    {
        return $this->container['includedinReclassHistory'];
    }

    /**
     * Sets includedinReclassHistory
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $includedinReclassHistory includedinReclassHistory
     *
     * @return $this
     */
    public function setIncludedinReclassHistory($includedinReclassHistory)
    {
        $this->container['includedinReclassHistory'] = $includedinReclassHistory;

        return $this;
    }

    /**
     * Gets inventoryID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getInventoryID()
    {
        return $this->container['inventoryID'];
    }

    /**
     * Sets inventoryID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $inventoryID inventoryID
     *
     * @return $this
     */
    public function setInventoryID($inventoryID)
    {
        $this->container['inventoryID'] = $inventoryID;

        return $this;
    }

    /**
     * Gets lineNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel
     */
    public function getLineNbr()
    {
        return $this->container['lineNbr'];
    }

    /**
     * Sets lineNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel $lineNbr lineNbr
     *
     * @return $this
     */
    public function setLineNbr($lineNbr)
    {
        $this->container['lineNbr'] = $lineNbr;

        return $this;
    }

    /**
     * Gets module
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getModule()
    {
        return $this->container['module'];
    }

    /**
     * Sets module
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $module module
     *
     * @return $this
     */
    public function setModule($module)
    {
        $this->container['module'] = $module;

        return $this;
    }

    /**
     * Gets period
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPeriod()
    {
        return $this->container['period'];
    }

    /**
     * Sets period
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $period period
     *
     * @return $this
     */
    public function setPeriod($period)
    {
        $this->container['period'] = $period;

        return $this;
    }

    /**
     * Gets reclassBatchNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getReclassBatchNbr()
    {
        return $this->container['reclassBatchNbr'];
    }

    /**
     * Sets reclassBatchNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $reclassBatchNbr reclassBatchNbr
     *
     * @return $this
     */
    public function setReclassBatchNbr($reclassBatchNbr)
    {
        $this->container['reclassBatchNbr'] = $reclassBatchNbr;

        return $this;
    }

    /**
     * Gets referenceNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getReferenceNbr()
    {
        return $this->container['referenceNbr'];
    }

    /**
     * Sets referenceNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $referenceNbr referenceNbr
     *
     * @return $this
     */
    public function setReferenceNbr($referenceNbr)
    {
        $this->container['referenceNbr'] = $referenceNbr;

        return $this;
    }

    /**
     * Gets selected
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getSelected()
    {
        return $this->container['selected'];
    }

    /**
     * Sets selected
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $selected selected
     *
     * @return $this
     */
    public function setSelected($selected)
    {
        $this->container['selected'] = $selected;

        return $this;
    }

    /**
     * Gets subaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getSubaccount()
    {
        return $this->container['subaccount'];
    }

    /**
     * Sets subaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $subaccount subaccount
     *
     * @return $this
     */
    public function setSubaccount($subaccount)
    {
        $this->container['subaccount'] = $subaccount;

        return $this;
    }

    /**
     * Gets transactionDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getTransactionDate()
    {
        return $this->container['transactionDate'];
    }

    /**
     * Sets transactionDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $transactionDate transactionDate
     *
     * @return $this
     */
    public function setTransactionDate($transactionDate)
    {
        $this->container['transactionDate'] = $transactionDate;

        return $this;
    }

    /**
     * Gets vendorOrCustomer
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getVendorOrCustomer()
    {
        return $this->container['vendorOrCustomer'];
    }

    /**
     * Sets vendorOrCustomer
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $vendorOrCustomer vendorOrCustomer
     *
     * @return $this
     */
    public function setVendorOrCustomer($vendorOrCustomer)
    {
        $this->container['vendorOrCustomer'] = $vendorOrCustomer;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


