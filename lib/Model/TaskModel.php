<?php
/**
 * TaskModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * TaskModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TaskModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Task';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'body' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'category' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'completedAt' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'completionPercentage' => '\Hut6\CranaplusAcumaticaSdk\Model\IntValueModel',
        'dueDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'internal' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'noteID' => '\Hut6\CranaplusAcumaticaSdk\Model\GuidValueModel',
        'owner' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'parent' => '\Hut6\CranaplusAcumaticaSdk\Model\GuidValueModel',
        'parentSummary' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'priority' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'relatedActivities' => '\Hut6\CranaplusAcumaticaSdk\Model\TaskRelatedActivityModel[]',
        'relatedEntityDescription' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'relatedTasks' => '\Hut6\CranaplusAcumaticaSdk\Model\TaskRelatedTaskModel[]',
        'reminder' => '\Hut6\CranaplusAcumaticaSdk\Model\ReminderDetailModel',
        'startDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'status' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'summary' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'timeActivity' => '\Hut6\CranaplusAcumaticaSdk\Model\TaskTimeActivityModel',
        'workgroupID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'body' => null,
        'category' => null,
        'completedAt' => null,
        'completionPercentage' => null,
        'dueDate' => null,
        'internal' => null,
        'noteID' => null,
        'owner' => null,
        'parent' => null,
        'parentSummary' => null,
        'priority' => null,
        'relatedActivities' => null,
        'relatedEntityDescription' => null,
        'relatedTasks' => null,
        'reminder' => null,
        'startDate' => null,
        'status' => null,
        'summary' => null,
        'timeActivity' => null,
        'workgroupID' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'body' => 'Body',
        'category' => 'Category',
        'completedAt' => 'CompletedAt',
        'completionPercentage' => 'CompletionPercentage',
        'dueDate' => 'DueDate',
        'internal' => 'Internal',
        'noteID' => 'NoteID',
        'owner' => 'Owner',
        'parent' => 'Parent',
        'parentSummary' => 'ParentSummary',
        'priority' => 'Priority',
        'relatedActivities' => 'RelatedActivities',
        'relatedEntityDescription' => 'RelatedEntityDescription',
        'relatedTasks' => 'RelatedTasks',
        'reminder' => 'Reminder',
        'startDate' => 'StartDate',
        'status' => 'Status',
        'summary' => 'Summary',
        'timeActivity' => 'TimeActivity',
        'workgroupID' => 'WorkgroupID'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'body' => 'setBody',
        'category' => 'setCategory',
        'completedAt' => 'setCompletedAt',
        'completionPercentage' => 'setCompletionPercentage',
        'dueDate' => 'setDueDate',
        'internal' => 'setInternal',
        'noteID' => 'setNoteID',
        'owner' => 'setOwner',
        'parent' => 'setParent',
        'parentSummary' => 'setParentSummary',
        'priority' => 'setPriority',
        'relatedActivities' => 'setRelatedActivities',
        'relatedEntityDescription' => 'setRelatedEntityDescription',
        'relatedTasks' => 'setRelatedTasks',
        'reminder' => 'setReminder',
        'startDate' => 'setStartDate',
        'status' => 'setStatus',
        'summary' => 'setSummary',
        'timeActivity' => 'setTimeActivity',
        'workgroupID' => 'setWorkgroupID'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'body' => 'getBody',
        'category' => 'getCategory',
        'completedAt' => 'getCompletedAt',
        'completionPercentage' => 'getCompletionPercentage',
        'dueDate' => 'getDueDate',
        'internal' => 'getInternal',
        'noteID' => 'getNoteID',
        'owner' => 'getOwner',
        'parent' => 'getParent',
        'parentSummary' => 'getParentSummary',
        'priority' => 'getPriority',
        'relatedActivities' => 'getRelatedActivities',
        'relatedEntityDescription' => 'getRelatedEntityDescription',
        'relatedTasks' => 'getRelatedTasks',
        'reminder' => 'getReminder',
        'startDate' => 'getStartDate',
        'status' => 'getStatus',
        'summary' => 'getSummary',
        'timeActivity' => 'getTimeActivity',
        'workgroupID' => 'getWorkgroupID'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['body'] = isset($data['body']) ? $data['body'] : null;
        $this->container['category'] = isset($data['category']) ? $data['category'] : null;
        $this->container['completedAt'] = isset($data['completedAt']) ? $data['completedAt'] : null;
        $this->container['completionPercentage'] = isset($data['completionPercentage']) ? $data['completionPercentage'] : null;
        $this->container['dueDate'] = isset($data['dueDate']) ? $data['dueDate'] : null;
        $this->container['internal'] = isset($data['internal']) ? $data['internal'] : null;
        $this->container['noteID'] = isset($data['noteID']) ? $data['noteID'] : null;
        $this->container['owner'] = isset($data['owner']) ? $data['owner'] : null;
        $this->container['parent'] = isset($data['parent']) ? $data['parent'] : null;
        $this->container['parentSummary'] = isset($data['parentSummary']) ? $data['parentSummary'] : null;
        $this->container['priority'] = isset($data['priority']) ? $data['priority'] : null;
        $this->container['relatedActivities'] = isset($data['relatedActivities']) ? $data['relatedActivities'] : null;
        $this->container['relatedEntityDescription'] = isset($data['relatedEntityDescription']) ? $data['relatedEntityDescription'] : null;
        $this->container['relatedTasks'] = isset($data['relatedTasks']) ? $data['relatedTasks'] : null;
        $this->container['reminder'] = isset($data['reminder']) ? $data['reminder'] : null;
        $this->container['startDate'] = isset($data['startDate']) ? $data['startDate'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['summary'] = isset($data['summary']) ? $data['summary'] : null;
        $this->container['timeActivity'] = isset($data['timeActivity']) ? $data['timeActivity'] : null;
        $this->container['workgroupID'] = isset($data['workgroupID']) ? $data['workgroupID'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets body
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getBody()
    {
        return $this->container['body'];
    }

    /**
     * Sets body
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $body body
     *
     * @return $this
     */
    public function setBody($body)
    {
        $this->container['body'] = $body;

        return $this;
    }

    /**
     * Gets category
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCategory()
    {
        return $this->container['category'];
    }

    /**
     * Sets category
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $category category
     *
     * @return $this
     */
    public function setCategory($category)
    {
        $this->container['category'] = $category;

        return $this;
    }

    /**
     * Gets completedAt
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getCompletedAt()
    {
        return $this->container['completedAt'];
    }

    /**
     * Sets completedAt
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $completedAt completedAt
     *
     * @return $this
     */
    public function setCompletedAt($completedAt)
    {
        $this->container['completedAt'] = $completedAt;

        return $this;
    }

    /**
     * Gets completionPercentage
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel
     */
    public function getCompletionPercentage()
    {
        return $this->container['completionPercentage'];
    }

    /**
     * Sets completionPercentage
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel $completionPercentage completionPercentage
     *
     * @return $this
     */
    public function setCompletionPercentage($completionPercentage)
    {
        $this->container['completionPercentage'] = $completionPercentage;

        return $this;
    }

    /**
     * Gets dueDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getDueDate()
    {
        return $this->container['dueDate'];
    }

    /**
     * Sets dueDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $dueDate dueDate
     *
     * @return $this
     */
    public function setDueDate($dueDate)
    {
        $this->container['dueDate'] = $dueDate;

        return $this;
    }

    /**
     * Gets internal
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getInternal()
    {
        return $this->container['internal'];
    }

    /**
     * Sets internal
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $internal internal
     *
     * @return $this
     */
    public function setInternal($internal)
    {
        $this->container['internal'] = $internal;

        return $this;
    }

    /**
     * Gets noteID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\GuidValueModel
     */
    public function getNoteID()
    {
        return $this->container['noteID'];
    }

    /**
     * Sets noteID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\GuidValueModel $noteID noteID
     *
     * @return $this
     */
    public function setNoteID($noteID)
    {
        $this->container['noteID'] = $noteID;

        return $this;
    }

    /**
     * Gets owner
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getOwner()
    {
        return $this->container['owner'];
    }

    /**
     * Sets owner
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $owner owner
     *
     * @return $this
     */
    public function setOwner($owner)
    {
        $this->container['owner'] = $owner;

        return $this;
    }

    /**
     * Gets parent
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\GuidValueModel
     */
    public function getParent()
    {
        return $this->container['parent'];
    }

    /**
     * Sets parent
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\GuidValueModel $parent parent
     *
     * @return $this
     */
    public function setParent($parent)
    {
        $this->container['parent'] = $parent;

        return $this;
    }

    /**
     * Gets parentSummary
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getParentSummary()
    {
        return $this->container['parentSummary'];
    }

    /**
     * Sets parentSummary
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $parentSummary parentSummary
     *
     * @return $this
     */
    public function setParentSummary($parentSummary)
    {
        $this->container['parentSummary'] = $parentSummary;

        return $this;
    }

    /**
     * Gets priority
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPriority()
    {
        return $this->container['priority'];
    }

    /**
     * Sets priority
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $priority priority
     *
     * @return $this
     */
    public function setPriority($priority)
    {
        $this->container['priority'] = $priority;

        return $this;
    }

    /**
     * Gets relatedActivities
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\TaskRelatedActivityModel[]
     */
    public function getRelatedActivities()
    {
        return $this->container['relatedActivities'];
    }

    /**
     * Sets relatedActivities
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\TaskRelatedActivityModel[] $relatedActivities relatedActivities
     *
     * @return $this
     */
    public function setRelatedActivities($relatedActivities)
    {
        $this->container['relatedActivities'] = $relatedActivities;

        return $this;
    }

    /**
     * Gets relatedEntityDescription
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getRelatedEntityDescription()
    {
        return $this->container['relatedEntityDescription'];
    }

    /**
     * Sets relatedEntityDescription
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $relatedEntityDescription relatedEntityDescription
     *
     * @return $this
     */
    public function setRelatedEntityDescription($relatedEntityDescription)
    {
        $this->container['relatedEntityDescription'] = $relatedEntityDescription;

        return $this;
    }

    /**
     * Gets relatedTasks
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\TaskRelatedTaskModel[]
     */
    public function getRelatedTasks()
    {
        return $this->container['relatedTasks'];
    }

    /**
     * Sets relatedTasks
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\TaskRelatedTaskModel[] $relatedTasks relatedTasks
     *
     * @return $this
     */
    public function setRelatedTasks($relatedTasks)
    {
        $this->container['relatedTasks'] = $relatedTasks;

        return $this;
    }

    /**
     * Gets reminder
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\ReminderDetailModel
     */
    public function getReminder()
    {
        return $this->container['reminder'];
    }

    /**
     * Sets reminder
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\ReminderDetailModel $reminder reminder
     *
     * @return $this
     */
    public function setReminder($reminder)
    {
        $this->container['reminder'] = $reminder;

        return $this;
    }

    /**
     * Gets startDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getStartDate()
    {
        return $this->container['startDate'];
    }

    /**
     * Sets startDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $startDate startDate
     *
     * @return $this
     */
    public function setStartDate($startDate)
    {
        $this->container['startDate'] = $startDate;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets summary
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getSummary()
    {
        return $this->container['summary'];
    }

    /**
     * Sets summary
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $summary summary
     *
     * @return $this
     */
    public function setSummary($summary)
    {
        $this->container['summary'] = $summary;

        return $this;
    }

    /**
     * Gets timeActivity
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\TaskTimeActivityModel
     */
    public function getTimeActivity()
    {
        return $this->container['timeActivity'];
    }

    /**
     * Sets timeActivity
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\TaskTimeActivityModel $timeActivity timeActivity
     *
     * @return $this
     */
    public function setTimeActivity($timeActivity)
    {
        $this->container['timeActivity'] = $timeActivity;

        return $this;
    }

    /**
     * Gets workgroupID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getWorkgroupID()
    {
        return $this->container['workgroupID'];
    }

    /**
     * Sets workgroupID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $workgroupID workgroupID
     *
     * @return $this
     */
    public function setWorkgroupID($workgroupID)
    {
        $this->container['workgroupID'] = $workgroupID;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


