<?php
/**
 * CreditVerificationRulesModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.12
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;

use \ArrayAccess;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * CreditVerificationRulesModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CreditVerificationRulesModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CreditVerificationRules';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'rowNumber' => 'int',
        'note' => 'string',
        'custom' => 'map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]',
        'files' => '\Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]',
        'creditDaysPastDue' => '\Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel',
        'creditLimit' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'creditVerification' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'firstDueDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'openOrdersBalance' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'remainingCreditLimit' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'unreleasedBalance' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'uuid',
        'rowNumber' => 'int64',
        'note' => null,
        'custom' => null,
        'files' => null,
        'creditDaysPastDue' => null,
        'creditLimit' => null,
        'creditVerification' => null,
        'firstDueDate' => null,
        'openOrdersBalance' => null,
        'remainingCreditLimit' => null,
        'unreleasedBalance' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'rowNumber' => 'rowNumber',
        'note' => 'note',
        'custom' => 'custom',
        'files' => 'files',
        'creditDaysPastDue' => 'CreditDaysPastDue',
        'creditLimit' => 'CreditLimit',
        'creditVerification' => 'CreditVerification',
        'firstDueDate' => 'FirstDueDate',
        'openOrdersBalance' => 'OpenOrdersBalance',
        'remainingCreditLimit' => 'RemainingCreditLimit',
        'unreleasedBalance' => 'UnreleasedBalance'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'rowNumber' => 'setRowNumber',
        'note' => 'setNote',
        'custom' => 'setCustom',
        'files' => 'setFiles',
        'creditDaysPastDue' => 'setCreditDaysPastDue',
        'creditLimit' => 'setCreditLimit',
        'creditVerification' => 'setCreditVerification',
        'firstDueDate' => 'setFirstDueDate',
        'openOrdersBalance' => 'setOpenOrdersBalance',
        'remainingCreditLimit' => 'setRemainingCreditLimit',
        'unreleasedBalance' => 'setUnreleasedBalance'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'rowNumber' => 'getRowNumber',
        'note' => 'getNote',
        'custom' => 'getCustom',
        'files' => 'getFiles',
        'creditDaysPastDue' => 'getCreditDaysPastDue',
        'creditLimit' => 'getCreditLimit',
        'creditVerification' => 'getCreditVerification',
        'firstDueDate' => 'getFirstDueDate',
        'openOrdersBalance' => 'getOpenOrdersBalance',
        'remainingCreditLimit' => 'getRemainingCreditLimit',
        'unreleasedBalance' => 'getUnreleasedBalance'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['rowNumber'] = isset($data['rowNumber']) ? $data['rowNumber'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['custom'] = isset($data['custom']) ? $data['custom'] : null;
        $this->container['files'] = isset($data['files']) ? $data['files'] : null;
        $this->container['creditDaysPastDue'] = isset($data['creditDaysPastDue']) ? $data['creditDaysPastDue'] : null;
        $this->container['creditLimit'] = isset($data['creditLimit']) ? $data['creditLimit'] : null;
        $this->container['creditVerification'] = isset($data['creditVerification']) ? $data['creditVerification'] : null;
        $this->container['firstDueDate'] = isset($data['firstDueDate']) ? $data['firstDueDate'] : null;
        $this->container['openOrdersBalance'] = isset($data['openOrdersBalance']) ? $data['openOrdersBalance'] : null;
        $this->container['remainingCreditLimit'] = isset($data['remainingCreditLimit']) ? $data['remainingCreditLimit'] : null;
        $this->container['unreleasedBalance'] = isset($data['unreleasedBalance']) ? $data['unreleasedBalance'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets rowNumber
     *
     * @return int
     */
    public function getRowNumber()
    {
        return $this->container['rowNumber'];
    }

    /**
     * Sets rowNumber
     *
     * @param int $rowNumber rowNumber
     *
     * @return $this
     */
    public function setRowNumber($rowNumber)
    {
        $this->container['rowNumber'] = $rowNumber;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note note
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets custom
     *
     * @return map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]
     */
    public function getCustom()
    {
        return $this->container['custom'];
    }

    /**
     * Sets custom
     *
     * @param map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]] $custom custom
     *
     * @return $this
     */
    public function setCustom($custom)
    {
        $this->container['custom'] = $custom;

        return $this;
    }

    /**
     * Gets files
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]
     */
    public function getFiles()
    {
        return $this->container['files'];
    }

    /**
     * Sets files
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[] $files files
     *
     * @return $this
     */
    public function setFiles($files)
    {
        $this->container['files'] = $files;

        return $this;
    }

    /**
     * Gets creditDaysPastDue
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel
     */
    public function getCreditDaysPastDue()
    {
        return $this->container['creditDaysPastDue'];
    }

    /**
     * Sets creditDaysPastDue
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel $creditDaysPastDue creditDaysPastDue
     *
     * @return $this
     */
    public function setCreditDaysPastDue($creditDaysPastDue)
    {
        $this->container['creditDaysPastDue'] = $creditDaysPastDue;

        return $this;
    }

    /**
     * Gets creditLimit
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getCreditLimit()
    {
        return $this->container['creditLimit'];
    }

    /**
     * Sets creditLimit
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $creditLimit creditLimit
     *
     * @return $this
     */
    public function setCreditLimit($creditLimit)
    {
        $this->container['creditLimit'] = $creditLimit;

        return $this;
    }

    /**
     * Gets creditVerification
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCreditVerification()
    {
        return $this->container['creditVerification'];
    }

    /**
     * Sets creditVerification
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $creditVerification creditVerification
     *
     * @return $this
     */
    public function setCreditVerification($creditVerification)
    {
        $this->container['creditVerification'] = $creditVerification;

        return $this;
    }

    /**
     * Gets firstDueDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getFirstDueDate()
    {
        return $this->container['firstDueDate'];
    }

    /**
     * Sets firstDueDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $firstDueDate firstDueDate
     *
     * @return $this
     */
    public function setFirstDueDate($firstDueDate)
    {
        $this->container['firstDueDate'] = $firstDueDate;

        return $this;
    }

    /**
     * Gets openOrdersBalance
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getOpenOrdersBalance()
    {
        return $this->container['openOrdersBalance'];
    }

    /**
     * Sets openOrdersBalance
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $openOrdersBalance openOrdersBalance
     *
     * @return $this
     */
    public function setOpenOrdersBalance($openOrdersBalance)
    {
        $this->container['openOrdersBalance'] = $openOrdersBalance;

        return $this;
    }

    /**
     * Gets remainingCreditLimit
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getRemainingCreditLimit()
    {
        return $this->container['remainingCreditLimit'];
    }

    /**
     * Sets remainingCreditLimit
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $remainingCreditLimit remainingCreditLimit
     *
     * @return $this
     */
    public function setRemainingCreditLimit($remainingCreditLimit)
    {
        $this->container['remainingCreditLimit'] = $remainingCreditLimit;

        return $this;
    }

    /**
     * Gets unreleasedBalance
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getUnreleasedBalance()
    {
        return $this->container['unreleasedBalance'];
    }

    /**
     * Sets unreleasedBalance
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $unreleasedBalance unreleasedBalance
     *
     * @return $this
     */
    public function setUnreleasedBalance($unreleasedBalance)
    {
        $this->container['unreleasedBalance'] = $unreleasedBalance;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


