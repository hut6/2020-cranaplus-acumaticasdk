<?php
/**
 * InvoiceModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.22
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * InvoiceModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InvoiceModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Invoice';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'amount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'applicationsCreditMemo' => '\Hut6\CranaplusAcumaticaSdk\Model\InvoiceApplicationsCreditMemoModel[]',
        'applicationsDefault' => '\Hut6\CranaplusAcumaticaSdk\Model\InvoiceApplicationsDefaultModel[]',
        'balance' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'billingPrinted' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'createdDateTime' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'customer' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'customerOrder' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'date' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'description' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'details' => '\Hut6\CranaplusAcumaticaSdk\Model\InvoiceDetailModel[]',
        'dueDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'hold' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'lastModifiedDateTime' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'linkARAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'linkBranch' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'locationID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'postPeriod' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'project' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'referenceNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'status' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'taxDetails' => '\Hut6\CranaplusAcumaticaSdk\Model\InvoiceTaxDetailModel[]',
        'taxTotal' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'terms' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'type' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'amount' => null,
        'applicationsCreditMemo' => null,
        'applicationsDefault' => null,
        'balance' => null,
        'billingPrinted' => null,
        'createdDateTime' => null,
        'customer' => null,
        'customerOrder' => null,
        'date' => null,
        'description' => null,
        'details' => null,
        'dueDate' => null,
        'hold' => null,
        'lastModifiedDateTime' => null,
        'linkARAccount' => null,
        'linkBranch' => null,
        'locationID' => null,
        'postPeriod' => null,
        'project' => null,
        'referenceNbr' => null,
        'status' => null,
        'taxDetails' => null,
        'taxTotal' => null,
        'terms' => null,
        'type' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'amount' => 'Amount',
        'applicationsCreditMemo' => 'ApplicationsCreditMemo',
        'applicationsDefault' => 'ApplicationsDefault',
        'balance' => 'Balance',
        'billingPrinted' => 'BillingPrinted',
        'createdDateTime' => 'CreatedDateTime',
        'customer' => 'Customer',
        'customerOrder' => 'CustomerOrder',
        'date' => 'Date',
        'description' => 'Description',
        'details' => 'Details',
        'dueDate' => 'DueDate',
        'hold' => 'Hold',
        'lastModifiedDateTime' => 'LastModifiedDateTime',
        'linkARAccount' => 'LinkARAccount',
        'linkBranch' => 'LinkBranch',
        'locationID' => 'LocationID',
        'postPeriod' => 'PostPeriod',
        'project' => 'Project',
        'referenceNbr' => 'ReferenceNbr',
        'status' => 'Status',
        'taxDetails' => 'TaxDetails',
        'taxTotal' => 'TaxTotal',
        'terms' => 'Terms',
        'type' => 'Type'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'amount' => 'setAmount',
        'applicationsCreditMemo' => 'setApplicationsCreditMemo',
        'applicationsDefault' => 'setApplicationsDefault',
        'balance' => 'setBalance',
        'billingPrinted' => 'setBillingPrinted',
        'createdDateTime' => 'setCreatedDateTime',
        'customer' => 'setCustomer',
        'customerOrder' => 'setCustomerOrder',
        'date' => 'setDate',
        'description' => 'setDescription',
        'details' => 'setDetails',
        'dueDate' => 'setDueDate',
        'hold' => 'setHold',
        'lastModifiedDateTime' => 'setLastModifiedDateTime',
        'linkARAccount' => 'setLinkARAccount',
        'linkBranch' => 'setLinkBranch',
        'locationID' => 'setLocationID',
        'postPeriod' => 'setPostPeriod',
        'project' => 'setProject',
        'referenceNbr' => 'setReferenceNbr',
        'status' => 'setStatus',
        'taxDetails' => 'setTaxDetails',
        'taxTotal' => 'setTaxTotal',
        'terms' => 'setTerms',
        'type' => 'setType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'amount' => 'getAmount',
        'applicationsCreditMemo' => 'getApplicationsCreditMemo',
        'applicationsDefault' => 'getApplicationsDefault',
        'balance' => 'getBalance',
        'billingPrinted' => 'getBillingPrinted',
        'createdDateTime' => 'getCreatedDateTime',
        'customer' => 'getCustomer',
        'customerOrder' => 'getCustomerOrder',
        'date' => 'getDate',
        'description' => 'getDescription',
        'details' => 'getDetails',
        'dueDate' => 'getDueDate',
        'hold' => 'getHold',
        'lastModifiedDateTime' => 'getLastModifiedDateTime',
        'linkARAccount' => 'getLinkARAccount',
        'linkBranch' => 'getLinkBranch',
        'locationID' => 'getLocationID',
        'postPeriod' => 'getPostPeriod',
        'project' => 'getProject',
        'referenceNbr' => 'getReferenceNbr',
        'status' => 'getStatus',
        'taxDetails' => 'getTaxDetails',
        'taxTotal' => 'getTaxTotal',
        'terms' => 'getTerms',
        'type' => 'getType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['amount'] = isset($data['amount']) ? $data['amount'] : null;
        $this->container['applicationsCreditMemo'] = isset($data['applicationsCreditMemo']) ? $data['applicationsCreditMemo'] : null;
        $this->container['applicationsDefault'] = isset($data['applicationsDefault']) ? $data['applicationsDefault'] : null;
        $this->container['balance'] = isset($data['balance']) ? $data['balance'] : null;
        $this->container['billingPrinted'] = isset($data['billingPrinted']) ? $data['billingPrinted'] : null;
        $this->container['createdDateTime'] = isset($data['createdDateTime']) ? $data['createdDateTime'] : null;
        $this->container['customer'] = isset($data['customer']) ? $data['customer'] : null;
        $this->container['customerOrder'] = isset($data['customerOrder']) ? $data['customerOrder'] : null;
        $this->container['date'] = isset($data['date']) ? $data['date'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['details'] = isset($data['details']) ? $data['details'] : null;
        $this->container['dueDate'] = isset($data['dueDate']) ? $data['dueDate'] : null;
        $this->container['hold'] = isset($data['hold']) ? $data['hold'] : null;
        $this->container['lastModifiedDateTime'] = isset($data['lastModifiedDateTime']) ? $data['lastModifiedDateTime'] : null;
        $this->container['linkARAccount'] = isset($data['linkARAccount']) ? $data['linkARAccount'] : null;
        $this->container['linkBranch'] = isset($data['linkBranch']) ? $data['linkBranch'] : null;
        $this->container['locationID'] = isset($data['locationID']) ? $data['locationID'] : null;
        $this->container['postPeriod'] = isset($data['postPeriod']) ? $data['postPeriod'] : null;
        $this->container['project'] = isset($data['project']) ? $data['project'] : null;
        $this->container['referenceNbr'] = isset($data['referenceNbr']) ? $data['referenceNbr'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['taxDetails'] = isset($data['taxDetails']) ? $data['taxDetails'] : null;
        $this->container['taxTotal'] = isset($data['taxTotal']) ? $data['taxTotal'] : null;
        $this->container['terms'] = isset($data['terms']) ? $data['terms'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets amount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $amount amount
     *
     * @return $this
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets applicationsCreditMemo
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\InvoiceApplicationsCreditMemoModel[]
     */
    public function getApplicationsCreditMemo()
    {
        return $this->container['applicationsCreditMemo'];
    }

    /**
     * Sets applicationsCreditMemo
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\InvoiceApplicationsCreditMemoModel[] $applicationsCreditMemo applicationsCreditMemo
     *
     * @return $this
     */
    public function setApplicationsCreditMemo($applicationsCreditMemo)
    {
        $this->container['applicationsCreditMemo'] = $applicationsCreditMemo;

        return $this;
    }

    /**
     * Gets applicationsDefault
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\InvoiceApplicationsDefaultModel[]
     */
    public function getApplicationsDefault()
    {
        return $this->container['applicationsDefault'];
    }

    /**
     * Sets applicationsDefault
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\InvoiceApplicationsDefaultModel[] $applicationsDefault applicationsDefault
     *
     * @return $this
     */
    public function setApplicationsDefault($applicationsDefault)
    {
        $this->container['applicationsDefault'] = $applicationsDefault;

        return $this;
    }

    /**
     * Gets balance
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getBalance()
    {
        return $this->container['balance'];
    }

    /**
     * Sets balance
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $balance balance
     *
     * @return $this
     */
    public function setBalance($balance)
    {
        $this->container['balance'] = $balance;

        return $this;
    }

    /**
     * Gets billingPrinted
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getBillingPrinted()
    {
        return $this->container['billingPrinted'];
    }

    /**
     * Sets billingPrinted
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $billingPrinted billingPrinted
     *
     * @return $this
     */
    public function setBillingPrinted($billingPrinted)
    {
        $this->container['billingPrinted'] = $billingPrinted;

        return $this;
    }

    /**
     * Gets createdDateTime
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getCreatedDateTime()
    {
        return $this->container['createdDateTime'];
    }

    /**
     * Sets createdDateTime
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $createdDateTime createdDateTime
     *
     * @return $this
     */
    public function setCreatedDateTime($createdDateTime)
    {
        $this->container['createdDateTime'] = $createdDateTime;

        return $this;
    }

    /**
     * Gets customer
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCustomer()
    {
        return $this->container['customer'];
    }

    /**
     * Sets customer
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $customer customer
     *
     * @return $this
     */
    public function setCustomer($customer)
    {
        $this->container['customer'] = $customer;

        return $this;
    }

    /**
     * Gets customerOrder
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCustomerOrder()
    {
        return $this->container['customerOrder'];
    }

    /**
     * Sets customerOrder
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $customerOrder customerOrder
     *
     * @return $this
     */
    public function setCustomerOrder($customerOrder)
    {
        $this->container['customerOrder'] = $customerOrder;

        return $this;
    }

    /**
     * Gets date
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getDate()
    {
        return $this->container['date'];
    }

    /**
     * Sets date
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $date date
     *
     * @return $this
     */
    public function setDate($date)
    {
        $this->container['date'] = $date;

        return $this;
    }

    /**
     * Gets description
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets details
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\InvoiceDetailModel[]
     */
    public function getDetails()
    {
        return $this->container['details'];
    }

    /**
     * Sets details
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\InvoiceDetailModel[] $details details
     *
     * @return $this
     */
    public function setDetails($details)
    {
        $this->container['details'] = $details;

        return $this;
    }

    /**
     * Gets dueDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getDueDate()
    {
        return $this->container['dueDate'];
    }

    /**
     * Sets dueDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $dueDate dueDate
     *
     * @return $this
     */
    public function setDueDate($dueDate)
    {
        $this->container['dueDate'] = $dueDate;

        return $this;
    }

    /**
     * Gets hold
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getHold()
    {
        return $this->container['hold'];
    }

    /**
     * Sets hold
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $hold hold
     *
     * @return $this
     */
    public function setHold($hold)
    {
        $this->container['hold'] = $hold;

        return $this;
    }

    /**
     * Gets lastModifiedDateTime
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getLastModifiedDateTime()
    {
        return $this->container['lastModifiedDateTime'];
    }

    /**
     * Sets lastModifiedDateTime
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $lastModifiedDateTime lastModifiedDateTime
     *
     * @return $this
     */
    public function setLastModifiedDateTime($lastModifiedDateTime)
    {
        $this->container['lastModifiedDateTime'] = $lastModifiedDateTime;

        return $this;
    }

    /**
     * Gets linkARAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLinkARAccount()
    {
        return $this->container['linkARAccount'];
    }

    /**
     * Sets linkARAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $linkARAccount linkARAccount
     *
     * @return $this
     */
    public function setLinkARAccount($linkARAccount)
    {
        $this->container['linkARAccount'] = $linkARAccount;

        return $this;
    }

    /**
     * Gets linkBranch
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLinkBranch()
    {
        return $this->container['linkBranch'];
    }

    /**
     * Sets linkBranch
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $linkBranch linkBranch
     *
     * @return $this
     */
    public function setLinkBranch($linkBranch)
    {
        $this->container['linkBranch'] = $linkBranch;

        return $this;
    }

    /**
     * Gets locationID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLocationID()
    {
        return $this->container['locationID'];
    }

    /**
     * Sets locationID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $locationID locationID
     *
     * @return $this
     */
    public function setLocationID($locationID)
    {
        $this->container['locationID'] = $locationID;

        return $this;
    }

    /**
     * Gets postPeriod
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPostPeriod()
    {
        return $this->container['postPeriod'];
    }

    /**
     * Sets postPeriod
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $postPeriod postPeriod
     *
     * @return $this
     */
    public function setPostPeriod($postPeriod)
    {
        $this->container['postPeriod'] = $postPeriod;

        return $this;
    }

    /**
     * Gets project
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getProject()
    {
        return $this->container['project'];
    }

    /**
     * Sets project
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $project project
     *
     * @return $this
     */
    public function setProject($project)
    {
        $this->container['project'] = $project;

        return $this;
    }

    /**
     * Gets referenceNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getReferenceNbr()
    {
        return $this->container['referenceNbr'];
    }

    /**
     * Sets referenceNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $referenceNbr referenceNbr
     *
     * @return $this
     */
    public function setReferenceNbr($referenceNbr)
    {
        $this->container['referenceNbr'] = $referenceNbr;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets taxDetails
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\InvoiceTaxDetailModel[]
     */
    public function getTaxDetails()
    {
        return $this->container['taxDetails'];
    }

    /**
     * Sets taxDetails
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\InvoiceTaxDetailModel[] $taxDetails taxDetails
     *
     * @return $this
     */
    public function setTaxDetails($taxDetails)
    {
        $this->container['taxDetails'] = $taxDetails;

        return $this;
    }

    /**
     * Gets taxTotal
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getTaxTotal()
    {
        return $this->container['taxTotal'];
    }

    /**
     * Sets taxTotal
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $taxTotal taxTotal
     *
     * @return $this
     */
    public function setTaxTotal($taxTotal)
    {
        $this->container['taxTotal'] = $taxTotal;

        return $this;
    }

    /**
     * Gets terms
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTerms()
    {
        return $this->container['terms'];
    }

    /**
     * Sets terms
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $terms terms
     *
     * @return $this
     */
    public function setTerms($terms)
    {
        $this->container['terms'] = $terms;

        return $this;
    }

    /**
     * Gets type
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


