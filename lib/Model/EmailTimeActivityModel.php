<?php
/**
 * EmailTimeActivityModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.22
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * EmailTimeActivityModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EmailTimeActivityModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'EmailTimeActivity';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'approver' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'billable' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'billableOvertime' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'billableTime' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'earningType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'overtime' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'project' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'projectTask' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'released' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'status' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'timeSpent' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'trackTime' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'approver' => null,
        'billable' => null,
        'billableOvertime' => null,
        'billableTime' => null,
        'earningType' => null,
        'overtime' => null,
        'project' => null,
        'projectTask' => null,
        'released' => null,
        'status' => null,
        'timeSpent' => null,
        'trackTime' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'approver' => 'Approver',
        'billable' => 'Billable',
        'billableOvertime' => 'BillableOvertime',
        'billableTime' => 'BillableTime',
        'earningType' => 'EarningType',
        'overtime' => 'Overtime',
        'project' => 'Project',
        'projectTask' => 'ProjectTask',
        'released' => 'Released',
        'status' => 'Status',
        'timeSpent' => 'TimeSpent',
        'trackTime' => 'TrackTime'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'approver' => 'setApprover',
        'billable' => 'setBillable',
        'billableOvertime' => 'setBillableOvertime',
        'billableTime' => 'setBillableTime',
        'earningType' => 'setEarningType',
        'overtime' => 'setOvertime',
        'project' => 'setProject',
        'projectTask' => 'setProjectTask',
        'released' => 'setReleased',
        'status' => 'setStatus',
        'timeSpent' => 'setTimeSpent',
        'trackTime' => 'setTrackTime'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'approver' => 'getApprover',
        'billable' => 'getBillable',
        'billableOvertime' => 'getBillableOvertime',
        'billableTime' => 'getBillableTime',
        'earningType' => 'getEarningType',
        'overtime' => 'getOvertime',
        'project' => 'getProject',
        'projectTask' => 'getProjectTask',
        'released' => 'getReleased',
        'status' => 'getStatus',
        'timeSpent' => 'getTimeSpent',
        'trackTime' => 'getTrackTime'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['approver'] = isset($data['approver']) ? $data['approver'] : null;
        $this->container['billable'] = isset($data['billable']) ? $data['billable'] : null;
        $this->container['billableOvertime'] = isset($data['billableOvertime']) ? $data['billableOvertime'] : null;
        $this->container['billableTime'] = isset($data['billableTime']) ? $data['billableTime'] : null;
        $this->container['earningType'] = isset($data['earningType']) ? $data['earningType'] : null;
        $this->container['overtime'] = isset($data['overtime']) ? $data['overtime'] : null;
        $this->container['project'] = isset($data['project']) ? $data['project'] : null;
        $this->container['projectTask'] = isset($data['projectTask']) ? $data['projectTask'] : null;
        $this->container['released'] = isset($data['released']) ? $data['released'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['timeSpent'] = isset($data['timeSpent']) ? $data['timeSpent'] : null;
        $this->container['trackTime'] = isset($data['trackTime']) ? $data['trackTime'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets approver
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getApprover()
    {
        return $this->container['approver'];
    }

    /**
     * Sets approver
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $approver approver
     *
     * @return $this
     */
    public function setApprover($approver)
    {
        $this->container['approver'] = $approver;

        return $this;
    }

    /**
     * Gets billable
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getBillable()
    {
        return $this->container['billable'];
    }

    /**
     * Sets billable
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $billable billable
     *
     * @return $this
     */
    public function setBillable($billable)
    {
        $this->container['billable'] = $billable;

        return $this;
    }

    /**
     * Gets billableOvertime
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getBillableOvertime()
    {
        return $this->container['billableOvertime'];
    }

    /**
     * Sets billableOvertime
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $billableOvertime billableOvertime
     *
     * @return $this
     */
    public function setBillableOvertime($billableOvertime)
    {
        $this->container['billableOvertime'] = $billableOvertime;

        return $this;
    }

    /**
     * Gets billableTime
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getBillableTime()
    {
        return $this->container['billableTime'];
    }

    /**
     * Sets billableTime
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $billableTime billableTime
     *
     * @return $this
     */
    public function setBillableTime($billableTime)
    {
        $this->container['billableTime'] = $billableTime;

        return $this;
    }

    /**
     * Gets earningType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getEarningType()
    {
        return $this->container['earningType'];
    }

    /**
     * Sets earningType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $earningType earningType
     *
     * @return $this
     */
    public function setEarningType($earningType)
    {
        $this->container['earningType'] = $earningType;

        return $this;
    }

    /**
     * Gets overtime
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getOvertime()
    {
        return $this->container['overtime'];
    }

    /**
     * Sets overtime
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $overtime overtime
     *
     * @return $this
     */
    public function setOvertime($overtime)
    {
        $this->container['overtime'] = $overtime;

        return $this;
    }

    /**
     * Gets project
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getProject()
    {
        return $this->container['project'];
    }

    /**
     * Sets project
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $project project
     *
     * @return $this
     */
    public function setProject($project)
    {
        $this->container['project'] = $project;

        return $this;
    }

    /**
     * Gets projectTask
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getProjectTask()
    {
        return $this->container['projectTask'];
    }

    /**
     * Sets projectTask
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $projectTask projectTask
     *
     * @return $this
     */
    public function setProjectTask($projectTask)
    {
        $this->container['projectTask'] = $projectTask;

        return $this;
    }

    /**
     * Gets released
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getReleased()
    {
        return $this->container['released'];
    }

    /**
     * Sets released
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $released released
     *
     * @return $this
     */
    public function setReleased($released)
    {
        $this->container['released'] = $released;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets timeSpent
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTimeSpent()
    {
        return $this->container['timeSpent'];
    }

    /**
     * Sets timeSpent
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $timeSpent timeSpent
     *
     * @return $this
     */
    public function setTimeSpent($timeSpent)
    {
        $this->container['timeSpent'] = $timeSpent;

        return $this;
    }

    /**
     * Gets trackTime
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getTrackTime()
    {
        return $this->container['trackTime'];
    }

    /**
     * Sets trackTime
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $trackTime trackTime
     *
     * @return $this
     */
    public function setTrackTime($trackTime)
    {
        $this->container['trackTime'] = $trackTime;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


