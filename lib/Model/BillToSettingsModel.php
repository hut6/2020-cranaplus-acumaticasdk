<?php
/**
 * BillToSettingsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.22
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * BillToSettingsModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class BillToSettingsModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'BillToSettings';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'billToAddress' => '\Hut6\CranaplusAcumaticaSdk\Model\AddressModel',
        'billToAddressOverride' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'billToContact' => '\Hut6\CranaplusAcumaticaSdk\Model\DocContactModel',
        'billToContactOverride' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'billToAddress' => null,
        'billToAddressOverride' => null,
        'billToContact' => null,
        'billToContactOverride' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'billToAddress' => 'BillToAddress',
        'billToAddressOverride' => 'BillToAddressOverride',
        'billToContact' => 'BillToContact',
        'billToContactOverride' => 'BillToContactOverride'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'billToAddress' => 'setBillToAddress',
        'billToAddressOverride' => 'setBillToAddressOverride',
        'billToContact' => 'setBillToContact',
        'billToContactOverride' => 'setBillToContactOverride'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'billToAddress' => 'getBillToAddress',
        'billToAddressOverride' => 'getBillToAddressOverride',
        'billToContact' => 'getBillToContact',
        'billToContactOverride' => 'getBillToContactOverride'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['billToAddress'] = isset($data['billToAddress']) ? $data['billToAddress'] : null;
        $this->container['billToAddressOverride'] = isset($data['billToAddressOverride']) ? $data['billToAddressOverride'] : null;
        $this->container['billToContact'] = isset($data['billToContact']) ? $data['billToContact'] : null;
        $this->container['billToContactOverride'] = isset($data['billToContactOverride']) ? $data['billToContactOverride'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets billToAddress
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\AddressModel
     */
    public function getBillToAddress()
    {
        return $this->container['billToAddress'];
    }

    /**
     * Sets billToAddress
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\AddressModel $billToAddress billToAddress
     *
     * @return $this
     */
    public function setBillToAddress($billToAddress)
    {
        $this->container['billToAddress'] = $billToAddress;

        return $this;
    }

    /**
     * Gets billToAddressOverride
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getBillToAddressOverride()
    {
        return $this->container['billToAddressOverride'];
    }

    /**
     * Sets billToAddressOverride
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $billToAddressOverride billToAddressOverride
     *
     * @return $this
     */
    public function setBillToAddressOverride($billToAddressOverride)
    {
        $this->container['billToAddressOverride'] = $billToAddressOverride;

        return $this;
    }

    /**
     * Gets billToContact
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DocContactModel
     */
    public function getBillToContact()
    {
        return $this->container['billToContact'];
    }

    /**
     * Sets billToContact
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DocContactModel $billToContact billToContact
     *
     * @return $this
     */
    public function setBillToContact($billToContact)
    {
        $this->container['billToContact'] = $billToContact;

        return $this;
    }

    /**
     * Gets billToContactOverride
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getBillToContactOverride()
    {
        return $this->container['billToContactOverride'];
    }

    /**
     * Sets billToContactOverride
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $billToContactOverride billToContactOverride
     *
     * @return $this
     */
    public function setBillToContactOverride($billToContactOverride)
    {
        $this->container['billToContactOverride'] = $billToContactOverride;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


