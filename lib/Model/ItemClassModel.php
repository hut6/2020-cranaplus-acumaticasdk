<?php
/**
 * ItemClassModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Default/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.12
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;

use \ArrayAccess;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * ItemClassModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ItemClassModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ItemClass';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'rowNumber' => 'int',
        'note' => 'string',
        'custom' => 'map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]',
        'files' => '\Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]',
        'attributes' => '\Hut6\CranaplusAcumaticaSdk\Model\ItemClassAtrributeModel[]',
        'availabilityCalculationRule' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'baseUOM' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'classID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'defaultWarehouseID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'description' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'itemType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'lastModifiedDateTime' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'lotSerialClass' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'postingClass' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'priceClass' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'purchaseUOM' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'salesUOM' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'stockItem' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'taxCategoryID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'valuationMethod' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'uuid',
        'rowNumber' => 'int64',
        'note' => null,
        'custom' => null,
        'files' => null,
        'attributes' => null,
        'availabilityCalculationRule' => null,
        'baseUOM' => null,
        'classID' => null,
        'defaultWarehouseID' => null,
        'description' => null,
        'itemType' => null,
        'lastModifiedDateTime' => null,
        'lotSerialClass' => null,
        'postingClass' => null,
        'priceClass' => null,
        'purchaseUOM' => null,
        'salesUOM' => null,
        'stockItem' => null,
        'taxCategoryID' => null,
        'valuationMethod' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'rowNumber' => 'rowNumber',
        'note' => 'note',
        'custom' => 'custom',
        'files' => 'files',
        'attributes' => 'Attributes',
        'availabilityCalculationRule' => 'AvailabilityCalculationRule',
        'baseUOM' => 'BaseUOM',
        'classID' => 'ClassID',
        'defaultWarehouseID' => 'DefaultWarehouseID',
        'description' => 'Description',
        'itemType' => 'ItemType',
        'lastModifiedDateTime' => 'LastModifiedDateTime',
        'lotSerialClass' => 'LotSerialClass',
        'postingClass' => 'PostingClass',
        'priceClass' => 'PriceClass',
        'purchaseUOM' => 'PurchaseUOM',
        'salesUOM' => 'SalesUOM',
        'stockItem' => 'StockItem',
        'taxCategoryID' => 'TaxCategoryID',
        'valuationMethod' => 'ValuationMethod'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'rowNumber' => 'setRowNumber',
        'note' => 'setNote',
        'custom' => 'setCustom',
        'files' => 'setFiles',
        'attributes' => 'setAttributes',
        'availabilityCalculationRule' => 'setAvailabilityCalculationRule',
        'baseUOM' => 'setBaseUOM',
        'classID' => 'setClassID',
        'defaultWarehouseID' => 'setDefaultWarehouseID',
        'description' => 'setDescription',
        'itemType' => 'setItemType',
        'lastModifiedDateTime' => 'setLastModifiedDateTime',
        'lotSerialClass' => 'setLotSerialClass',
        'postingClass' => 'setPostingClass',
        'priceClass' => 'setPriceClass',
        'purchaseUOM' => 'setPurchaseUOM',
        'salesUOM' => 'setSalesUOM',
        'stockItem' => 'setStockItem',
        'taxCategoryID' => 'setTaxCategoryID',
        'valuationMethod' => 'setValuationMethod'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'rowNumber' => 'getRowNumber',
        'note' => 'getNote',
        'custom' => 'getCustom',
        'files' => 'getFiles',
        'attributes' => 'getAttributes',
        'availabilityCalculationRule' => 'getAvailabilityCalculationRule',
        'baseUOM' => 'getBaseUOM',
        'classID' => 'getClassID',
        'defaultWarehouseID' => 'getDefaultWarehouseID',
        'description' => 'getDescription',
        'itemType' => 'getItemType',
        'lastModifiedDateTime' => 'getLastModifiedDateTime',
        'lotSerialClass' => 'getLotSerialClass',
        'postingClass' => 'getPostingClass',
        'priceClass' => 'getPriceClass',
        'purchaseUOM' => 'getPurchaseUOM',
        'salesUOM' => 'getSalesUOM',
        'stockItem' => 'getStockItem',
        'taxCategoryID' => 'getTaxCategoryID',
        'valuationMethod' => 'getValuationMethod'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['rowNumber'] = isset($data['rowNumber']) ? $data['rowNumber'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['custom'] = isset($data['custom']) ? $data['custom'] : null;
        $this->container['files'] = isset($data['files']) ? $data['files'] : null;
        $this->container['attributes'] = isset($data['attributes']) ? $data['attributes'] : null;
        $this->container['availabilityCalculationRule'] = isset($data['availabilityCalculationRule']) ? $data['availabilityCalculationRule'] : null;
        $this->container['baseUOM'] = isset($data['baseUOM']) ? $data['baseUOM'] : null;
        $this->container['classID'] = isset($data['classID']) ? $data['classID'] : null;
        $this->container['defaultWarehouseID'] = isset($data['defaultWarehouseID']) ? $data['defaultWarehouseID'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['itemType'] = isset($data['itemType']) ? $data['itemType'] : null;
        $this->container['lastModifiedDateTime'] = isset($data['lastModifiedDateTime']) ? $data['lastModifiedDateTime'] : null;
        $this->container['lotSerialClass'] = isset($data['lotSerialClass']) ? $data['lotSerialClass'] : null;
        $this->container['postingClass'] = isset($data['postingClass']) ? $data['postingClass'] : null;
        $this->container['priceClass'] = isset($data['priceClass']) ? $data['priceClass'] : null;
        $this->container['purchaseUOM'] = isset($data['purchaseUOM']) ? $data['purchaseUOM'] : null;
        $this->container['salesUOM'] = isset($data['salesUOM']) ? $data['salesUOM'] : null;
        $this->container['stockItem'] = isset($data['stockItem']) ? $data['stockItem'] : null;
        $this->container['taxCategoryID'] = isset($data['taxCategoryID']) ? $data['taxCategoryID'] : null;
        $this->container['valuationMethod'] = isset($data['valuationMethod']) ? $data['valuationMethod'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets rowNumber
     *
     * @return int
     */
    public function getRowNumber()
    {
        return $this->container['rowNumber'];
    }

    /**
     * Sets rowNumber
     *
     * @param int $rowNumber rowNumber
     *
     * @return $this
     */
    public function setRowNumber($rowNumber)
    {
        $this->container['rowNumber'] = $rowNumber;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note note
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets custom
     *
     * @return map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]
     */
    public function getCustom()
    {
        return $this->container['custom'];
    }

    /**
     * Sets custom
     *
     * @param map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]] $custom custom
     *
     * @return $this
     */
    public function setCustom($custom)
    {
        $this->container['custom'] = $custom;

        return $this;
    }

    /**
     * Gets files
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]
     */
    public function getFiles()
    {
        return $this->container['files'];
    }

    /**
     * Sets files
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[] $files files
     *
     * @return $this
     */
    public function setFiles($files)
    {
        $this->container['files'] = $files;

        return $this;
    }

    /**
     * Gets attributes
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\ItemClassAtrributeModel[]
     */
    public function getAttributes()
    {
        return $this->container['attributes'];
    }

    /**
     * Sets attributes
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\ItemClassAtrributeModel[] $attributes attributes
     *
     * @return $this
     */
    public function setAttributes($attributes)
    {
        $this->container['attributes'] = $attributes;

        return $this;
    }

    /**
     * Gets availabilityCalculationRule
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getAvailabilityCalculationRule()
    {
        return $this->container['availabilityCalculationRule'];
    }

    /**
     * Sets availabilityCalculationRule
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $availabilityCalculationRule availabilityCalculationRule
     *
     * @return $this
     */
    public function setAvailabilityCalculationRule($availabilityCalculationRule)
    {
        $this->container['availabilityCalculationRule'] = $availabilityCalculationRule;

        return $this;
    }

    /**
     * Gets baseUOM
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getBaseUOM()
    {
        return $this->container['baseUOM'];
    }

    /**
     * Sets baseUOM
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $baseUOM baseUOM
     *
     * @return $this
     */
    public function setBaseUOM($baseUOM)
    {
        $this->container['baseUOM'] = $baseUOM;

        return $this;
    }

    /**
     * Gets classID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getClassID()
    {
        return $this->container['classID'];
    }

    /**
     * Sets classID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $classID classID
     *
     * @return $this
     */
    public function setClassID($classID)
    {
        $this->container['classID'] = $classID;

        return $this;
    }

    /**
     * Gets defaultWarehouseID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDefaultWarehouseID()
    {
        return $this->container['defaultWarehouseID'];
    }

    /**
     * Sets defaultWarehouseID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $defaultWarehouseID defaultWarehouseID
     *
     * @return $this
     */
    public function setDefaultWarehouseID($defaultWarehouseID)
    {
        $this->container['defaultWarehouseID'] = $defaultWarehouseID;

        return $this;
    }

    /**
     * Gets description
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets itemType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getItemType()
    {
        return $this->container['itemType'];
    }

    /**
     * Sets itemType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $itemType itemType
     *
     * @return $this
     */
    public function setItemType($itemType)
    {
        $this->container['itemType'] = $itemType;

        return $this;
    }

    /**
     * Gets lastModifiedDateTime
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getLastModifiedDateTime()
    {
        return $this->container['lastModifiedDateTime'];
    }

    /**
     * Sets lastModifiedDateTime
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $lastModifiedDateTime lastModifiedDateTime
     *
     * @return $this
     */
    public function setLastModifiedDateTime($lastModifiedDateTime)
    {
        $this->container['lastModifiedDateTime'] = $lastModifiedDateTime;

        return $this;
    }

    /**
     * Gets lotSerialClass
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLotSerialClass()
    {
        return $this->container['lotSerialClass'];
    }

    /**
     * Sets lotSerialClass
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $lotSerialClass lotSerialClass
     *
     * @return $this
     */
    public function setLotSerialClass($lotSerialClass)
    {
        $this->container['lotSerialClass'] = $lotSerialClass;

        return $this;
    }

    /**
     * Gets postingClass
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPostingClass()
    {
        return $this->container['postingClass'];
    }

    /**
     * Sets postingClass
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $postingClass postingClass
     *
     * @return $this
     */
    public function setPostingClass($postingClass)
    {
        $this->container['postingClass'] = $postingClass;

        return $this;
    }

    /**
     * Gets priceClass
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPriceClass()
    {
        return $this->container['priceClass'];
    }

    /**
     * Sets priceClass
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $priceClass priceClass
     *
     * @return $this
     */
    public function setPriceClass($priceClass)
    {
        $this->container['priceClass'] = $priceClass;

        return $this;
    }

    /**
     * Gets purchaseUOM
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPurchaseUOM()
    {
        return $this->container['purchaseUOM'];
    }

    /**
     * Sets purchaseUOM
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $purchaseUOM purchaseUOM
     *
     * @return $this
     */
    public function setPurchaseUOM($purchaseUOM)
    {
        $this->container['purchaseUOM'] = $purchaseUOM;

        return $this;
    }

    /**
     * Gets salesUOM
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getSalesUOM()
    {
        return $this->container['salesUOM'];
    }

    /**
     * Sets salesUOM
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $salesUOM salesUOM
     *
     * @return $this
     */
    public function setSalesUOM($salesUOM)
    {
        $this->container['salesUOM'] = $salesUOM;

        return $this;
    }

    /**
     * Gets stockItem
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getStockItem()
    {
        return $this->container['stockItem'];
    }

    /**
     * Sets stockItem
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $stockItem stockItem
     *
     * @return $this
     */
    public function setStockItem($stockItem)
    {
        $this->container['stockItem'] = $stockItem;

        return $this;
    }

    /**
     * Gets taxCategoryID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxCategoryID()
    {
        return $this->container['taxCategoryID'];
    }

    /**
     * Sets taxCategoryID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxCategoryID taxCategoryID
     *
     * @return $this
     */
    public function setTaxCategoryID($taxCategoryID)
    {
        $this->container['taxCategoryID'] = $taxCategoryID;

        return $this;
    }

    /**
     * Gets valuationMethod
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getValuationMethod()
    {
        return $this->container['valuationMethod'];
    }

    /**
     * Sets valuationMethod
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $valuationMethod valuationMethod
     *
     * @return $this
     */
    public function setValuationMethod($valuationMethod)
    {
        $this->container['valuationMethod'] = $valuationMethod;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


