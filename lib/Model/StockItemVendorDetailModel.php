<?php
/**
 * StockItemVendorDetailModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.22
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * StockItemVendorDetailModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class StockItemVendorDetailModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'StockItemVendorDetail';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'active' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'addLeadTimeDays' => '\Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel',
        'currencyID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'default' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'eOQ' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'lastVendorPrice' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'leadTimeDays' => '\Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel',
        'location' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'lotSize' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'maxOrderQty' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'minOrderFrequencyInDays' => '\Hut6\CranaplusAcumaticaSdk\Model\IntValueModel',
        'minOrderQty' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'override' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'purchaseUnit' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'recordID' => '\Hut6\CranaplusAcumaticaSdk\Model\IntValueModel',
        'subitem' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'vendorID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'vendorName' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'warehouse' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'active' => null,
        'addLeadTimeDays' => null,
        'currencyID' => null,
        'default' => null,
        'eOQ' => null,
        'lastVendorPrice' => null,
        'leadTimeDays' => null,
        'location' => null,
        'lotSize' => null,
        'maxOrderQty' => null,
        'minOrderFrequencyInDays' => null,
        'minOrderQty' => null,
        'override' => null,
        'purchaseUnit' => null,
        'recordID' => null,
        'subitem' => null,
        'vendorID' => null,
        'vendorName' => null,
        'warehouse' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'active' => 'Active',
        'addLeadTimeDays' => 'AddLeadTimeDays',
        'currencyID' => 'CurrencyID',
        'default' => 'Default',
        'eOQ' => 'EOQ',
        'lastVendorPrice' => 'LastVendorPrice',
        'leadTimeDays' => 'LeadTimeDays',
        'location' => 'Location',
        'lotSize' => 'LotSize',
        'maxOrderQty' => 'MaxOrderQty',
        'minOrderFrequencyInDays' => 'MinOrderFrequencyInDays',
        'minOrderQty' => 'MinOrderQty',
        'override' => 'Override',
        'purchaseUnit' => 'PurchaseUnit',
        'recordID' => 'RecordID',
        'subitem' => 'Subitem',
        'vendorID' => 'VendorID',
        'vendorName' => 'VendorName',
        'warehouse' => 'Warehouse'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'active' => 'setActive',
        'addLeadTimeDays' => 'setAddLeadTimeDays',
        'currencyID' => 'setCurrencyID',
        'default' => 'setDefault',
        'eOQ' => 'setEOQ',
        'lastVendorPrice' => 'setLastVendorPrice',
        'leadTimeDays' => 'setLeadTimeDays',
        'location' => 'setLocation',
        'lotSize' => 'setLotSize',
        'maxOrderQty' => 'setMaxOrderQty',
        'minOrderFrequencyInDays' => 'setMinOrderFrequencyInDays',
        'minOrderQty' => 'setMinOrderQty',
        'override' => 'setOverride',
        'purchaseUnit' => 'setPurchaseUnit',
        'recordID' => 'setRecordID',
        'subitem' => 'setSubitem',
        'vendorID' => 'setVendorID',
        'vendorName' => 'setVendorName',
        'warehouse' => 'setWarehouse'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'active' => 'getActive',
        'addLeadTimeDays' => 'getAddLeadTimeDays',
        'currencyID' => 'getCurrencyID',
        'default' => 'getDefault',
        'eOQ' => 'getEOQ',
        'lastVendorPrice' => 'getLastVendorPrice',
        'leadTimeDays' => 'getLeadTimeDays',
        'location' => 'getLocation',
        'lotSize' => 'getLotSize',
        'maxOrderQty' => 'getMaxOrderQty',
        'minOrderFrequencyInDays' => 'getMinOrderFrequencyInDays',
        'minOrderQty' => 'getMinOrderQty',
        'override' => 'getOverride',
        'purchaseUnit' => 'getPurchaseUnit',
        'recordID' => 'getRecordID',
        'subitem' => 'getSubitem',
        'vendorID' => 'getVendorID',
        'vendorName' => 'getVendorName',
        'warehouse' => 'getWarehouse'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['active'] = isset($data['active']) ? $data['active'] : null;
        $this->container['addLeadTimeDays'] = isset($data['addLeadTimeDays']) ? $data['addLeadTimeDays'] : null;
        $this->container['currencyID'] = isset($data['currencyID']) ? $data['currencyID'] : null;
        $this->container['default'] = isset($data['default']) ? $data['default'] : null;
        $this->container['eOQ'] = isset($data['eOQ']) ? $data['eOQ'] : null;
        $this->container['lastVendorPrice'] = isset($data['lastVendorPrice']) ? $data['lastVendorPrice'] : null;
        $this->container['leadTimeDays'] = isset($data['leadTimeDays']) ? $data['leadTimeDays'] : null;
        $this->container['location'] = isset($data['location']) ? $data['location'] : null;
        $this->container['lotSize'] = isset($data['lotSize']) ? $data['lotSize'] : null;
        $this->container['maxOrderQty'] = isset($data['maxOrderQty']) ? $data['maxOrderQty'] : null;
        $this->container['minOrderFrequencyInDays'] = isset($data['minOrderFrequencyInDays']) ? $data['minOrderFrequencyInDays'] : null;
        $this->container['minOrderQty'] = isset($data['minOrderQty']) ? $data['minOrderQty'] : null;
        $this->container['override'] = isset($data['override']) ? $data['override'] : null;
        $this->container['purchaseUnit'] = isset($data['purchaseUnit']) ? $data['purchaseUnit'] : null;
        $this->container['recordID'] = isset($data['recordID']) ? $data['recordID'] : null;
        $this->container['subitem'] = isset($data['subitem']) ? $data['subitem'] : null;
        $this->container['vendorID'] = isset($data['vendorID']) ? $data['vendorID'] : null;
        $this->container['vendorName'] = isset($data['vendorName']) ? $data['vendorName'] : null;
        $this->container['warehouse'] = isset($data['warehouse']) ? $data['warehouse'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets active
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $active active
     *
     * @return $this
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets addLeadTimeDays
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel
     */
    public function getAddLeadTimeDays()
    {
        return $this->container['addLeadTimeDays'];
    }

    /**
     * Sets addLeadTimeDays
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel $addLeadTimeDays addLeadTimeDays
     *
     * @return $this
     */
    public function setAddLeadTimeDays($addLeadTimeDays)
    {
        $this->container['addLeadTimeDays'] = $addLeadTimeDays;

        return $this;
    }

    /**
     * Gets currencyID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCurrencyID()
    {
        return $this->container['currencyID'];
    }

    /**
     * Sets currencyID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $currencyID currencyID
     *
     * @return $this
     */
    public function setCurrencyID($currencyID)
    {
        $this->container['currencyID'] = $currencyID;

        return $this;
    }

    /**
     * Gets default
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getDefault()
    {
        return $this->container['default'];
    }

    /**
     * Sets default
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $default default
     *
     * @return $this
     */
    public function setDefault($default)
    {
        $this->container['default'] = $default;

        return $this;
    }

    /**
     * Gets eOQ
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getEOQ()
    {
        return $this->container['eOQ'];
    }

    /**
     * Sets eOQ
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $eOQ eOQ
     *
     * @return $this
     */
    public function setEOQ($eOQ)
    {
        $this->container['eOQ'] = $eOQ;

        return $this;
    }

    /**
     * Gets lastVendorPrice
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getLastVendorPrice()
    {
        return $this->container['lastVendorPrice'];
    }

    /**
     * Sets lastVendorPrice
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $lastVendorPrice lastVendorPrice
     *
     * @return $this
     */
    public function setLastVendorPrice($lastVendorPrice)
    {
        $this->container['lastVendorPrice'] = $lastVendorPrice;

        return $this;
    }

    /**
     * Gets leadTimeDays
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel
     */
    public function getLeadTimeDays()
    {
        return $this->container['leadTimeDays'];
    }

    /**
     * Sets leadTimeDays
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel $leadTimeDays leadTimeDays
     *
     * @return $this
     */
    public function setLeadTimeDays($leadTimeDays)
    {
        $this->container['leadTimeDays'] = $leadTimeDays;

        return $this;
    }

    /**
     * Gets location
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $location location
     *
     * @return $this
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets lotSize
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getLotSize()
    {
        return $this->container['lotSize'];
    }

    /**
     * Sets lotSize
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $lotSize lotSize
     *
     * @return $this
     */
    public function setLotSize($lotSize)
    {
        $this->container['lotSize'] = $lotSize;

        return $this;
    }

    /**
     * Gets maxOrderQty
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getMaxOrderQty()
    {
        return $this->container['maxOrderQty'];
    }

    /**
     * Sets maxOrderQty
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $maxOrderQty maxOrderQty
     *
     * @return $this
     */
    public function setMaxOrderQty($maxOrderQty)
    {
        $this->container['maxOrderQty'] = $maxOrderQty;

        return $this;
    }

    /**
     * Gets minOrderFrequencyInDays
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel
     */
    public function getMinOrderFrequencyInDays()
    {
        return $this->container['minOrderFrequencyInDays'];
    }

    /**
     * Sets minOrderFrequencyInDays
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel $minOrderFrequencyInDays minOrderFrequencyInDays
     *
     * @return $this
     */
    public function setMinOrderFrequencyInDays($minOrderFrequencyInDays)
    {
        $this->container['minOrderFrequencyInDays'] = $minOrderFrequencyInDays;

        return $this;
    }

    /**
     * Gets minOrderQty
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getMinOrderQty()
    {
        return $this->container['minOrderQty'];
    }

    /**
     * Sets minOrderQty
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $minOrderQty minOrderQty
     *
     * @return $this
     */
    public function setMinOrderQty($minOrderQty)
    {
        $this->container['minOrderQty'] = $minOrderQty;

        return $this;
    }

    /**
     * Gets override
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getOverride()
    {
        return $this->container['override'];
    }

    /**
     * Sets override
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $override override
     *
     * @return $this
     */
    public function setOverride($override)
    {
        $this->container['override'] = $override;

        return $this;
    }

    /**
     * Gets purchaseUnit
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPurchaseUnit()
    {
        return $this->container['purchaseUnit'];
    }

    /**
     * Sets purchaseUnit
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $purchaseUnit purchaseUnit
     *
     * @return $this
     */
    public function setPurchaseUnit($purchaseUnit)
    {
        $this->container['purchaseUnit'] = $purchaseUnit;

        return $this;
    }

    /**
     * Gets recordID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel
     */
    public function getRecordID()
    {
        return $this->container['recordID'];
    }

    /**
     * Sets recordID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel $recordID recordID
     *
     * @return $this
     */
    public function setRecordID($recordID)
    {
        $this->container['recordID'] = $recordID;

        return $this;
    }

    /**
     * Gets subitem
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getSubitem()
    {
        return $this->container['subitem'];
    }

    /**
     * Sets subitem
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $subitem subitem
     *
     * @return $this
     */
    public function setSubitem($subitem)
    {
        $this->container['subitem'] = $subitem;

        return $this;
    }

    /**
     * Gets vendorID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getVendorID()
    {
        return $this->container['vendorID'];
    }

    /**
     * Sets vendorID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $vendorID vendorID
     *
     * @return $this
     */
    public function setVendorID($vendorID)
    {
        $this->container['vendorID'] = $vendorID;

        return $this;
    }

    /**
     * Gets vendorName
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getVendorName()
    {
        return $this->container['vendorName'];
    }

    /**
     * Sets vendorName
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $vendorName vendorName
     *
     * @return $this
     */
    public function setVendorName($vendorName)
    {
        $this->container['vendorName'] = $vendorName;

        return $this;
    }

    /**
     * Gets warehouse
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getWarehouse()
    {
        return $this->container['warehouse'];
    }

    /**
     * Sets warehouse
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $warehouse warehouse
     *
     * @return $this
     */
    public function setWarehouse($warehouse)
    {
        $this->container['warehouse'] = $warehouse;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


