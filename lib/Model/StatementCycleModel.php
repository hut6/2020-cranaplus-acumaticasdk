<?php
/**
 * StatementCycleModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Default/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.12
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;

use \ArrayAccess;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * StatementCycleModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class StatementCycleModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'StatementCycle';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'rowNumber' => 'int',
        'note' => 'string',
        'custom' => 'map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]',
        'files' => '\Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]',
        'agingPeriod1EndDay' => '\Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel',
        'agingPeriod1Message' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'agingPeriod2EndDay' => '\Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel',
        'agingPeriod2Message' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'agingPeriod3EndDay' => '\Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel',
        'agingPeriod3Message' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'agingPeriod4Message' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'applyOverdueCharges' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'createdDateTime' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'cycleID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'dayOfMonth' => '\Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel',
        'dayOfMonth1' => '\Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel',
        'description' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'lastModifiedDateTime' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'lastStatementDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'overdueChargeID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'prepareOn' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'requireOverdueChargesCalculationBeforeStatement' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'requirePaymentApplicationBeforeStatementProcessing' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'uuid',
        'rowNumber' => 'int64',
        'note' => null,
        'custom' => null,
        'files' => null,
        'agingPeriod1EndDay' => null,
        'agingPeriod1Message' => null,
        'agingPeriod2EndDay' => null,
        'agingPeriod2Message' => null,
        'agingPeriod3EndDay' => null,
        'agingPeriod3Message' => null,
        'agingPeriod4Message' => null,
        'applyOverdueCharges' => null,
        'createdDateTime' => null,
        'cycleID' => null,
        'dayOfMonth' => null,
        'dayOfMonth1' => null,
        'description' => null,
        'lastModifiedDateTime' => null,
        'lastStatementDate' => null,
        'overdueChargeID' => null,
        'prepareOn' => null,
        'requireOverdueChargesCalculationBeforeStatement' => null,
        'requirePaymentApplicationBeforeStatementProcessing' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'rowNumber' => 'rowNumber',
        'note' => 'note',
        'custom' => 'custom',
        'files' => 'files',
        'agingPeriod1EndDay' => 'AgingPeriod1EndDay',
        'agingPeriod1Message' => 'AgingPeriod1Message',
        'agingPeriod2EndDay' => 'AgingPeriod2EndDay',
        'agingPeriod2Message' => 'AgingPeriod2Message',
        'agingPeriod3EndDay' => 'AgingPeriod3EndDay',
        'agingPeriod3Message' => 'AgingPeriod3Message',
        'agingPeriod4Message' => 'AgingPeriod4Message',
        'applyOverdueCharges' => 'ApplyOverdueCharges',
        'createdDateTime' => 'CreatedDateTime',
        'cycleID' => 'CycleID',
        'dayOfMonth' => 'DayOfMonth',
        'dayOfMonth1' => 'DayOfMonth1',
        'description' => 'Description',
        'lastModifiedDateTime' => 'LastModifiedDateTime',
        'lastStatementDate' => 'LastStatementDate',
        'overdueChargeID' => 'OverdueChargeID',
        'prepareOn' => 'PrepareOn',
        'requireOverdueChargesCalculationBeforeStatement' => 'RequireOverdueChargesCalculationBeforeStatement',
        'requirePaymentApplicationBeforeStatementProcessing' => 'RequirePaymentApplicationBeforeStatementProcessing'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'rowNumber' => 'setRowNumber',
        'note' => 'setNote',
        'custom' => 'setCustom',
        'files' => 'setFiles',
        'agingPeriod1EndDay' => 'setAgingPeriod1EndDay',
        'agingPeriod1Message' => 'setAgingPeriod1Message',
        'agingPeriod2EndDay' => 'setAgingPeriod2EndDay',
        'agingPeriod2Message' => 'setAgingPeriod2Message',
        'agingPeriod3EndDay' => 'setAgingPeriod3EndDay',
        'agingPeriod3Message' => 'setAgingPeriod3Message',
        'agingPeriod4Message' => 'setAgingPeriod4Message',
        'applyOverdueCharges' => 'setApplyOverdueCharges',
        'createdDateTime' => 'setCreatedDateTime',
        'cycleID' => 'setCycleID',
        'dayOfMonth' => 'setDayOfMonth',
        'dayOfMonth1' => 'setDayOfMonth1',
        'description' => 'setDescription',
        'lastModifiedDateTime' => 'setLastModifiedDateTime',
        'lastStatementDate' => 'setLastStatementDate',
        'overdueChargeID' => 'setOverdueChargeID',
        'prepareOn' => 'setPrepareOn',
        'requireOverdueChargesCalculationBeforeStatement' => 'setRequireOverdueChargesCalculationBeforeStatement',
        'requirePaymentApplicationBeforeStatementProcessing' => 'setRequirePaymentApplicationBeforeStatementProcessing'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'rowNumber' => 'getRowNumber',
        'note' => 'getNote',
        'custom' => 'getCustom',
        'files' => 'getFiles',
        'agingPeriod1EndDay' => 'getAgingPeriod1EndDay',
        'agingPeriod1Message' => 'getAgingPeriod1Message',
        'agingPeriod2EndDay' => 'getAgingPeriod2EndDay',
        'agingPeriod2Message' => 'getAgingPeriod2Message',
        'agingPeriod3EndDay' => 'getAgingPeriod3EndDay',
        'agingPeriod3Message' => 'getAgingPeriod3Message',
        'agingPeriod4Message' => 'getAgingPeriod4Message',
        'applyOverdueCharges' => 'getApplyOverdueCharges',
        'createdDateTime' => 'getCreatedDateTime',
        'cycleID' => 'getCycleID',
        'dayOfMonth' => 'getDayOfMonth',
        'dayOfMonth1' => 'getDayOfMonth1',
        'description' => 'getDescription',
        'lastModifiedDateTime' => 'getLastModifiedDateTime',
        'lastStatementDate' => 'getLastStatementDate',
        'overdueChargeID' => 'getOverdueChargeID',
        'prepareOn' => 'getPrepareOn',
        'requireOverdueChargesCalculationBeforeStatement' => 'getRequireOverdueChargesCalculationBeforeStatement',
        'requirePaymentApplicationBeforeStatementProcessing' => 'getRequirePaymentApplicationBeforeStatementProcessing'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['rowNumber'] = isset($data['rowNumber']) ? $data['rowNumber'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['custom'] = isset($data['custom']) ? $data['custom'] : null;
        $this->container['files'] = isset($data['files']) ? $data['files'] : null;
        $this->container['agingPeriod1EndDay'] = isset($data['agingPeriod1EndDay']) ? $data['agingPeriod1EndDay'] : null;
        $this->container['agingPeriod1Message'] = isset($data['agingPeriod1Message']) ? $data['agingPeriod1Message'] : null;
        $this->container['agingPeriod2EndDay'] = isset($data['agingPeriod2EndDay']) ? $data['agingPeriod2EndDay'] : null;
        $this->container['agingPeriod2Message'] = isset($data['agingPeriod2Message']) ? $data['agingPeriod2Message'] : null;
        $this->container['agingPeriod3EndDay'] = isset($data['agingPeriod3EndDay']) ? $data['agingPeriod3EndDay'] : null;
        $this->container['agingPeriod3Message'] = isset($data['agingPeriod3Message']) ? $data['agingPeriod3Message'] : null;
        $this->container['agingPeriod4Message'] = isset($data['agingPeriod4Message']) ? $data['agingPeriod4Message'] : null;
        $this->container['applyOverdueCharges'] = isset($data['applyOverdueCharges']) ? $data['applyOverdueCharges'] : null;
        $this->container['createdDateTime'] = isset($data['createdDateTime']) ? $data['createdDateTime'] : null;
        $this->container['cycleID'] = isset($data['cycleID']) ? $data['cycleID'] : null;
        $this->container['dayOfMonth'] = isset($data['dayOfMonth']) ? $data['dayOfMonth'] : null;
        $this->container['dayOfMonth1'] = isset($data['dayOfMonth1']) ? $data['dayOfMonth1'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['lastModifiedDateTime'] = isset($data['lastModifiedDateTime']) ? $data['lastModifiedDateTime'] : null;
        $this->container['lastStatementDate'] = isset($data['lastStatementDate']) ? $data['lastStatementDate'] : null;
        $this->container['overdueChargeID'] = isset($data['overdueChargeID']) ? $data['overdueChargeID'] : null;
        $this->container['prepareOn'] = isset($data['prepareOn']) ? $data['prepareOn'] : null;
        $this->container['requireOverdueChargesCalculationBeforeStatement'] = isset($data['requireOverdueChargesCalculationBeforeStatement']) ? $data['requireOverdueChargesCalculationBeforeStatement'] : null;
        $this->container['requirePaymentApplicationBeforeStatementProcessing'] = isset($data['requirePaymentApplicationBeforeStatementProcessing']) ? $data['requirePaymentApplicationBeforeStatementProcessing'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets rowNumber
     *
     * @return int
     */
    public function getRowNumber()
    {
        return $this->container['rowNumber'];
    }

    /**
     * Sets rowNumber
     *
     * @param int $rowNumber rowNumber
     *
     * @return $this
     */
    public function setRowNumber($rowNumber)
    {
        $this->container['rowNumber'] = $rowNumber;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note note
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets custom
     *
     * @return map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]
     */
    public function getCustom()
    {
        return $this->container['custom'];
    }

    /**
     * Sets custom
     *
     * @param map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]] $custom custom
     *
     * @return $this
     */
    public function setCustom($custom)
    {
        $this->container['custom'] = $custom;

        return $this;
    }

    /**
     * Gets files
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]
     */
    public function getFiles()
    {
        return $this->container['files'];
    }

    /**
     * Sets files
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[] $files files
     *
     * @return $this
     */
    public function setFiles($files)
    {
        $this->container['files'] = $files;

        return $this;
    }

    /**
     * Gets agingPeriod1EndDay
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel
     */
    public function getAgingPeriod1EndDay()
    {
        return $this->container['agingPeriod1EndDay'];
    }

    /**
     * Sets agingPeriod1EndDay
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel $agingPeriod1EndDay agingPeriod1EndDay
     *
     * @return $this
     */
    public function setAgingPeriod1EndDay($agingPeriod1EndDay)
    {
        $this->container['agingPeriod1EndDay'] = $agingPeriod1EndDay;

        return $this;
    }

    /**
     * Gets agingPeriod1Message
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getAgingPeriod1Message()
    {
        return $this->container['agingPeriod1Message'];
    }

    /**
     * Sets agingPeriod1Message
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $agingPeriod1Message agingPeriod1Message
     *
     * @return $this
     */
    public function setAgingPeriod1Message($agingPeriod1Message)
    {
        $this->container['agingPeriod1Message'] = $agingPeriod1Message;

        return $this;
    }

    /**
     * Gets agingPeriod2EndDay
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel
     */
    public function getAgingPeriod2EndDay()
    {
        return $this->container['agingPeriod2EndDay'];
    }

    /**
     * Sets agingPeriod2EndDay
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel $agingPeriod2EndDay agingPeriod2EndDay
     *
     * @return $this
     */
    public function setAgingPeriod2EndDay($agingPeriod2EndDay)
    {
        $this->container['agingPeriod2EndDay'] = $agingPeriod2EndDay;

        return $this;
    }

    /**
     * Gets agingPeriod2Message
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getAgingPeriod2Message()
    {
        return $this->container['agingPeriod2Message'];
    }

    /**
     * Sets agingPeriod2Message
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $agingPeriod2Message agingPeriod2Message
     *
     * @return $this
     */
    public function setAgingPeriod2Message($agingPeriod2Message)
    {
        $this->container['agingPeriod2Message'] = $agingPeriod2Message;

        return $this;
    }

    /**
     * Gets agingPeriod3EndDay
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel
     */
    public function getAgingPeriod3EndDay()
    {
        return $this->container['agingPeriod3EndDay'];
    }

    /**
     * Sets agingPeriod3EndDay
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel $agingPeriod3EndDay agingPeriod3EndDay
     *
     * @return $this
     */
    public function setAgingPeriod3EndDay($agingPeriod3EndDay)
    {
        $this->container['agingPeriod3EndDay'] = $agingPeriod3EndDay;

        return $this;
    }

    /**
     * Gets agingPeriod3Message
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getAgingPeriod3Message()
    {
        return $this->container['agingPeriod3Message'];
    }

    /**
     * Sets agingPeriod3Message
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $agingPeriod3Message agingPeriod3Message
     *
     * @return $this
     */
    public function setAgingPeriod3Message($agingPeriod3Message)
    {
        $this->container['agingPeriod3Message'] = $agingPeriod3Message;

        return $this;
    }

    /**
     * Gets agingPeriod4Message
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getAgingPeriod4Message()
    {
        return $this->container['agingPeriod4Message'];
    }

    /**
     * Sets agingPeriod4Message
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $agingPeriod4Message agingPeriod4Message
     *
     * @return $this
     */
    public function setAgingPeriod4Message($agingPeriod4Message)
    {
        $this->container['agingPeriod4Message'] = $agingPeriod4Message;

        return $this;
    }

    /**
     * Gets applyOverdueCharges
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getApplyOverdueCharges()
    {
        return $this->container['applyOverdueCharges'];
    }

    /**
     * Sets applyOverdueCharges
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $applyOverdueCharges applyOverdueCharges
     *
     * @return $this
     */
    public function setApplyOverdueCharges($applyOverdueCharges)
    {
        $this->container['applyOverdueCharges'] = $applyOverdueCharges;

        return $this;
    }

    /**
     * Gets createdDateTime
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getCreatedDateTime()
    {
        return $this->container['createdDateTime'];
    }

    /**
     * Sets createdDateTime
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $createdDateTime createdDateTime
     *
     * @return $this
     */
    public function setCreatedDateTime($createdDateTime)
    {
        $this->container['createdDateTime'] = $createdDateTime;

        return $this;
    }

    /**
     * Gets cycleID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCycleID()
    {
        return $this->container['cycleID'];
    }

    /**
     * Sets cycleID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $cycleID cycleID
     *
     * @return $this
     */
    public function setCycleID($cycleID)
    {
        $this->container['cycleID'] = $cycleID;

        return $this;
    }

    /**
     * Gets dayOfMonth
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel
     */
    public function getDayOfMonth()
    {
        return $this->container['dayOfMonth'];
    }

    /**
     * Sets dayOfMonth
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel $dayOfMonth dayOfMonth
     *
     * @return $this
     */
    public function setDayOfMonth($dayOfMonth)
    {
        $this->container['dayOfMonth'] = $dayOfMonth;

        return $this;
    }

    /**
     * Gets dayOfMonth1
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel
     */
    public function getDayOfMonth1()
    {
        return $this->container['dayOfMonth1'];
    }

    /**
     * Sets dayOfMonth1
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel $dayOfMonth1 dayOfMonth1
     *
     * @return $this
     */
    public function setDayOfMonth1($dayOfMonth1)
    {
        $this->container['dayOfMonth1'] = $dayOfMonth1;

        return $this;
    }

    /**
     * Gets description
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets lastModifiedDateTime
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getLastModifiedDateTime()
    {
        return $this->container['lastModifiedDateTime'];
    }

    /**
     * Sets lastModifiedDateTime
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $lastModifiedDateTime lastModifiedDateTime
     *
     * @return $this
     */
    public function setLastModifiedDateTime($lastModifiedDateTime)
    {
        $this->container['lastModifiedDateTime'] = $lastModifiedDateTime;

        return $this;
    }

    /**
     * Gets lastStatementDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getLastStatementDate()
    {
        return $this->container['lastStatementDate'];
    }

    /**
     * Sets lastStatementDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $lastStatementDate lastStatementDate
     *
     * @return $this
     */
    public function setLastStatementDate($lastStatementDate)
    {
        $this->container['lastStatementDate'] = $lastStatementDate;

        return $this;
    }

    /**
     * Gets overdueChargeID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getOverdueChargeID()
    {
        return $this->container['overdueChargeID'];
    }

    /**
     * Sets overdueChargeID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $overdueChargeID overdueChargeID
     *
     * @return $this
     */
    public function setOverdueChargeID($overdueChargeID)
    {
        $this->container['overdueChargeID'] = $overdueChargeID;

        return $this;
    }

    /**
     * Gets prepareOn
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPrepareOn()
    {
        return $this->container['prepareOn'];
    }

    /**
     * Sets prepareOn
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $prepareOn prepareOn
     *
     * @return $this
     */
    public function setPrepareOn($prepareOn)
    {
        $this->container['prepareOn'] = $prepareOn;

        return $this;
    }

    /**
     * Gets requireOverdueChargesCalculationBeforeStatement
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getRequireOverdueChargesCalculationBeforeStatement()
    {
        return $this->container['requireOverdueChargesCalculationBeforeStatement'];
    }

    /**
     * Sets requireOverdueChargesCalculationBeforeStatement
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $requireOverdueChargesCalculationBeforeStatement requireOverdueChargesCalculationBeforeStatement
     *
     * @return $this
     */
    public function setRequireOverdueChargesCalculationBeforeStatement($requireOverdueChargesCalculationBeforeStatement)
    {
        $this->container['requireOverdueChargesCalculationBeforeStatement'] = $requireOverdueChargesCalculationBeforeStatement;

        return $this;
    }

    /**
     * Gets requirePaymentApplicationBeforeStatementProcessing
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getRequirePaymentApplicationBeforeStatementProcessing()
    {
        return $this->container['requirePaymentApplicationBeforeStatementProcessing'];
    }

    /**
     * Sets requirePaymentApplicationBeforeStatementProcessing
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $requirePaymentApplicationBeforeStatementProcessing requirePaymentApplicationBeforeStatementProcessing
     *
     * @return $this
     */
    public function setRequirePaymentApplicationBeforeStatementProcessing($requirePaymentApplicationBeforeStatementProcessing)
    {
        $this->container['requirePaymentApplicationBeforeStatementProcessing'] = $requirePaymentApplicationBeforeStatementProcessing;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


