<?php
/**
 * StockItemModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * StockItemModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class StockItemModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'StockItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'aBCCode' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'attributes' => '\Hut6\CranaplusAcumaticaSdk\Model\AttributeValueModel[]',
        'autoIncrementalValue' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'averageCost' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'baseUOM' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'boxes' => '\Hut6\CranaplusAcumaticaSdk\Model\BoxStockItemModel[]',
        'categories' => '\Hut6\CranaplusAcumaticaSdk\Model\CategoryStockItemModel[]',
        'cOGSAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'cOGSSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'content' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'crossReferences' => '\Hut6\CranaplusAcumaticaSdk\Model\InventoryItemCrossReferenceModel[]',
        'currentStdCost' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'defaultIssueLocationID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'defaultPrice' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'defaultReceiptLocationID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'defaultSubitem' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'defaultWarehouseID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'deferralAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'deferralSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'description' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'dimensionVolume' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'dimensionWeight' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'discountAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'discountSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'imageUrl' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'inventoryAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'inventoryID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'inventorySubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'isAKit' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'itemClass' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'itemStatus' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'itemType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'landedCostVarianceAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'landedCostVarianceSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'lastCost' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'lastModified' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'lastStdCost' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'lotSerialClass' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'markup' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'maxCost' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'minCost' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'minMarkup' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'mSRP' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'packagingOption' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'packSeparately' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'pendingStdCost' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'pOAccrualAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'pOAccrualSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'postingClass' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'priceClass' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'priceManager' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'priceWorkgroup' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'productManager' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'productWorkgroup' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'purchasePriceVarianceAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'purchasePriceVarianceSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'purchaseUOM' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'reasonCodeSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'replenishmentParameters' => '\Hut6\CranaplusAcumaticaSdk\Model\ReplenishmentParameterStockItemModel[]',
        'salesAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'salesSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'salesUOM' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'standardCostRevaluationAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'standardCostRevaluationSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'standardCostVarianceAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'standardCostVarianceSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'subItems' => '\Hut6\CranaplusAcumaticaSdk\Model\SubItemStockItemModel[]',
        'subjectToCommission' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'taxCategory' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'uOMConversions' => '\Hut6\CranaplusAcumaticaSdk\Model\InventoryItemUOMConversionModel[]',
        'useOnEntry' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'valuationMethod' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'vendorDetails' => '\Hut6\CranaplusAcumaticaSdk\Model\StockItemVendorDetailModel[]',
        'volumeUOM' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'warehouseDetails' => '\Hut6\CranaplusAcumaticaSdk\Model\StockItemWarehouseDetailModel[]',
        'weightUOM' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'aBCCode' => null,
        'attributes' => null,
        'autoIncrementalValue' => null,
        'averageCost' => null,
        'baseUOM' => null,
        'boxes' => null,
        'categories' => null,
        'cOGSAccount' => null,
        'cOGSSubaccount' => null,
        'content' => null,
        'crossReferences' => null,
        'currentStdCost' => null,
        'defaultIssueLocationID' => null,
        'defaultPrice' => null,
        'defaultReceiptLocationID' => null,
        'defaultSubitem' => null,
        'defaultWarehouseID' => null,
        'deferralAccount' => null,
        'deferralSubaccount' => null,
        'description' => null,
        'dimensionVolume' => null,
        'dimensionWeight' => null,
        'discountAccount' => null,
        'discountSubaccount' => null,
        'imageUrl' => null,
        'inventoryAccount' => null,
        'inventoryID' => null,
        'inventorySubaccount' => null,
        'isAKit' => null,
        'itemClass' => null,
        'itemStatus' => null,
        'itemType' => null,
        'landedCostVarianceAccount' => null,
        'landedCostVarianceSubaccount' => null,
        'lastCost' => null,
        'lastModified' => null,
        'lastStdCost' => null,
        'lotSerialClass' => null,
        'markup' => null,
        'maxCost' => null,
        'minCost' => null,
        'minMarkup' => null,
        'mSRP' => null,
        'packagingOption' => null,
        'packSeparately' => null,
        'pendingStdCost' => null,
        'pOAccrualAccount' => null,
        'pOAccrualSubaccount' => null,
        'postingClass' => null,
        'priceClass' => null,
        'priceManager' => null,
        'priceWorkgroup' => null,
        'productManager' => null,
        'productWorkgroup' => null,
        'purchasePriceVarianceAccount' => null,
        'purchasePriceVarianceSubaccount' => null,
        'purchaseUOM' => null,
        'reasonCodeSubaccount' => null,
        'replenishmentParameters' => null,
        'salesAccount' => null,
        'salesSubaccount' => null,
        'salesUOM' => null,
        'standardCostRevaluationAccount' => null,
        'standardCostRevaluationSubaccount' => null,
        'standardCostVarianceAccount' => null,
        'standardCostVarianceSubaccount' => null,
        'subItems' => null,
        'subjectToCommission' => null,
        'taxCategory' => null,
        'uOMConversions' => null,
        'useOnEntry' => null,
        'valuationMethod' => null,
        'vendorDetails' => null,
        'volumeUOM' => null,
        'warehouseDetails' => null,
        'weightUOM' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'aBCCode' => 'ABCCode',
        'attributes' => 'Attributes',
        'autoIncrementalValue' => 'AutoIncrementalValue',
        'averageCost' => 'AverageCost',
        'baseUOM' => 'BaseUOM',
        'boxes' => 'Boxes',
        'categories' => 'Categories',
        'cOGSAccount' => 'COGSAccount',
        'cOGSSubaccount' => 'COGSSubaccount',
        'content' => 'Content',
        'crossReferences' => 'CrossReferences',
        'currentStdCost' => 'CurrentStdCost',
        'defaultIssueLocationID' => 'DefaultIssueLocationID',
        'defaultPrice' => 'DefaultPrice',
        'defaultReceiptLocationID' => 'DefaultReceiptLocationID',
        'defaultSubitem' => 'DefaultSubitem',
        'defaultWarehouseID' => 'DefaultWarehouseID',
        'deferralAccount' => 'DeferralAccount',
        'deferralSubaccount' => 'DeferralSubaccount',
        'description' => 'Description',
        'dimensionVolume' => 'DimensionVolume',
        'dimensionWeight' => 'DimensionWeight',
        'discountAccount' => 'DiscountAccount',
        'discountSubaccount' => 'DiscountSubaccount',
        'imageUrl' => 'ImageUrl',
        'inventoryAccount' => 'InventoryAccount',
        'inventoryID' => 'InventoryID',
        'inventorySubaccount' => 'InventorySubaccount',
        'isAKit' => 'IsAKit',
        'itemClass' => 'ItemClass',
        'itemStatus' => 'ItemStatus',
        'itemType' => 'ItemType',
        'landedCostVarianceAccount' => 'LandedCostVarianceAccount',
        'landedCostVarianceSubaccount' => 'LandedCostVarianceSubaccount',
        'lastCost' => 'LastCost',
        'lastModified' => 'LastModified',
        'lastStdCost' => 'LastStdCost',
        'lotSerialClass' => 'LotSerialClass',
        'markup' => 'Markup',
        'maxCost' => 'MaxCost',
        'minCost' => 'MinCost',
        'minMarkup' => 'MinMarkup',
        'mSRP' => 'MSRP',
        'packagingOption' => 'PackagingOption',
        'packSeparately' => 'PackSeparately',
        'pendingStdCost' => 'PendingStdCost',
        'pOAccrualAccount' => 'POAccrualAccount',
        'pOAccrualSubaccount' => 'POAccrualSubaccount',
        'postingClass' => 'PostingClass',
        'priceClass' => 'PriceClass',
        'priceManager' => 'PriceManager',
        'priceWorkgroup' => 'PriceWorkgroup',
        'productManager' => 'ProductManager',
        'productWorkgroup' => 'ProductWorkgroup',
        'purchasePriceVarianceAccount' => 'PurchasePriceVarianceAccount',
        'purchasePriceVarianceSubaccount' => 'PurchasePriceVarianceSubaccount',
        'purchaseUOM' => 'PurchaseUOM',
        'reasonCodeSubaccount' => 'ReasonCodeSubaccount',
        'replenishmentParameters' => 'ReplenishmentParameters',
        'salesAccount' => 'SalesAccount',
        'salesSubaccount' => 'SalesSubaccount',
        'salesUOM' => 'SalesUOM',
        'standardCostRevaluationAccount' => 'StandardCostRevaluationAccount',
        'standardCostRevaluationSubaccount' => 'StandardCostRevaluationSubaccount',
        'standardCostVarianceAccount' => 'StandardCostVarianceAccount',
        'standardCostVarianceSubaccount' => 'StandardCostVarianceSubaccount',
        'subItems' => 'SubItems',
        'subjectToCommission' => 'SubjectToCommission',
        'taxCategory' => 'TaxCategory',
        'uOMConversions' => 'UOMConversions',
        'useOnEntry' => 'UseOnEntry',
        'valuationMethod' => 'ValuationMethod',
        'vendorDetails' => 'VendorDetails',
        'volumeUOM' => 'VolumeUOM',
        'warehouseDetails' => 'WarehouseDetails',
        'weightUOM' => 'WeightUOM'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'aBCCode' => 'setABCCode',
        'attributes' => 'setAttributes',
        'autoIncrementalValue' => 'setAutoIncrementalValue',
        'averageCost' => 'setAverageCost',
        'baseUOM' => 'setBaseUOM',
        'boxes' => 'setBoxes',
        'categories' => 'setCategories',
        'cOGSAccount' => 'setCOGSAccount',
        'cOGSSubaccount' => 'setCOGSSubaccount',
        'content' => 'setContent',
        'crossReferences' => 'setCrossReferences',
        'currentStdCost' => 'setCurrentStdCost',
        'defaultIssueLocationID' => 'setDefaultIssueLocationID',
        'defaultPrice' => 'setDefaultPrice',
        'defaultReceiptLocationID' => 'setDefaultReceiptLocationID',
        'defaultSubitem' => 'setDefaultSubitem',
        'defaultWarehouseID' => 'setDefaultWarehouseID',
        'deferralAccount' => 'setDeferralAccount',
        'deferralSubaccount' => 'setDeferralSubaccount',
        'description' => 'setDescription',
        'dimensionVolume' => 'setDimensionVolume',
        'dimensionWeight' => 'setDimensionWeight',
        'discountAccount' => 'setDiscountAccount',
        'discountSubaccount' => 'setDiscountSubaccount',
        'imageUrl' => 'setImageUrl',
        'inventoryAccount' => 'setInventoryAccount',
        'inventoryID' => 'setInventoryID',
        'inventorySubaccount' => 'setInventorySubaccount',
        'isAKit' => 'setIsAKit',
        'itemClass' => 'setItemClass',
        'itemStatus' => 'setItemStatus',
        'itemType' => 'setItemType',
        'landedCostVarianceAccount' => 'setLandedCostVarianceAccount',
        'landedCostVarianceSubaccount' => 'setLandedCostVarianceSubaccount',
        'lastCost' => 'setLastCost',
        'lastModified' => 'setLastModified',
        'lastStdCost' => 'setLastStdCost',
        'lotSerialClass' => 'setLotSerialClass',
        'markup' => 'setMarkup',
        'maxCost' => 'setMaxCost',
        'minCost' => 'setMinCost',
        'minMarkup' => 'setMinMarkup',
        'mSRP' => 'setMSRP',
        'packagingOption' => 'setPackagingOption',
        'packSeparately' => 'setPackSeparately',
        'pendingStdCost' => 'setPendingStdCost',
        'pOAccrualAccount' => 'setPOAccrualAccount',
        'pOAccrualSubaccount' => 'setPOAccrualSubaccount',
        'postingClass' => 'setPostingClass',
        'priceClass' => 'setPriceClass',
        'priceManager' => 'setPriceManager',
        'priceWorkgroup' => 'setPriceWorkgroup',
        'productManager' => 'setProductManager',
        'productWorkgroup' => 'setProductWorkgroup',
        'purchasePriceVarianceAccount' => 'setPurchasePriceVarianceAccount',
        'purchasePriceVarianceSubaccount' => 'setPurchasePriceVarianceSubaccount',
        'purchaseUOM' => 'setPurchaseUOM',
        'reasonCodeSubaccount' => 'setReasonCodeSubaccount',
        'replenishmentParameters' => 'setReplenishmentParameters',
        'salesAccount' => 'setSalesAccount',
        'salesSubaccount' => 'setSalesSubaccount',
        'salesUOM' => 'setSalesUOM',
        'standardCostRevaluationAccount' => 'setStandardCostRevaluationAccount',
        'standardCostRevaluationSubaccount' => 'setStandardCostRevaluationSubaccount',
        'standardCostVarianceAccount' => 'setStandardCostVarianceAccount',
        'standardCostVarianceSubaccount' => 'setStandardCostVarianceSubaccount',
        'subItems' => 'setSubItems',
        'subjectToCommission' => 'setSubjectToCommission',
        'taxCategory' => 'setTaxCategory',
        'uOMConversions' => 'setUOMConversions',
        'useOnEntry' => 'setUseOnEntry',
        'valuationMethod' => 'setValuationMethod',
        'vendorDetails' => 'setVendorDetails',
        'volumeUOM' => 'setVolumeUOM',
        'warehouseDetails' => 'setWarehouseDetails',
        'weightUOM' => 'setWeightUOM'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'aBCCode' => 'getABCCode',
        'attributes' => 'getAttributes',
        'autoIncrementalValue' => 'getAutoIncrementalValue',
        'averageCost' => 'getAverageCost',
        'baseUOM' => 'getBaseUOM',
        'boxes' => 'getBoxes',
        'categories' => 'getCategories',
        'cOGSAccount' => 'getCOGSAccount',
        'cOGSSubaccount' => 'getCOGSSubaccount',
        'content' => 'getContent',
        'crossReferences' => 'getCrossReferences',
        'currentStdCost' => 'getCurrentStdCost',
        'defaultIssueLocationID' => 'getDefaultIssueLocationID',
        'defaultPrice' => 'getDefaultPrice',
        'defaultReceiptLocationID' => 'getDefaultReceiptLocationID',
        'defaultSubitem' => 'getDefaultSubitem',
        'defaultWarehouseID' => 'getDefaultWarehouseID',
        'deferralAccount' => 'getDeferralAccount',
        'deferralSubaccount' => 'getDeferralSubaccount',
        'description' => 'getDescription',
        'dimensionVolume' => 'getDimensionVolume',
        'dimensionWeight' => 'getDimensionWeight',
        'discountAccount' => 'getDiscountAccount',
        'discountSubaccount' => 'getDiscountSubaccount',
        'imageUrl' => 'getImageUrl',
        'inventoryAccount' => 'getInventoryAccount',
        'inventoryID' => 'getInventoryID',
        'inventorySubaccount' => 'getInventorySubaccount',
        'isAKit' => 'getIsAKit',
        'itemClass' => 'getItemClass',
        'itemStatus' => 'getItemStatus',
        'itemType' => 'getItemType',
        'landedCostVarianceAccount' => 'getLandedCostVarianceAccount',
        'landedCostVarianceSubaccount' => 'getLandedCostVarianceSubaccount',
        'lastCost' => 'getLastCost',
        'lastModified' => 'getLastModified',
        'lastStdCost' => 'getLastStdCost',
        'lotSerialClass' => 'getLotSerialClass',
        'markup' => 'getMarkup',
        'maxCost' => 'getMaxCost',
        'minCost' => 'getMinCost',
        'minMarkup' => 'getMinMarkup',
        'mSRP' => 'getMSRP',
        'packagingOption' => 'getPackagingOption',
        'packSeparately' => 'getPackSeparately',
        'pendingStdCost' => 'getPendingStdCost',
        'pOAccrualAccount' => 'getPOAccrualAccount',
        'pOAccrualSubaccount' => 'getPOAccrualSubaccount',
        'postingClass' => 'getPostingClass',
        'priceClass' => 'getPriceClass',
        'priceManager' => 'getPriceManager',
        'priceWorkgroup' => 'getPriceWorkgroup',
        'productManager' => 'getProductManager',
        'productWorkgroup' => 'getProductWorkgroup',
        'purchasePriceVarianceAccount' => 'getPurchasePriceVarianceAccount',
        'purchasePriceVarianceSubaccount' => 'getPurchasePriceVarianceSubaccount',
        'purchaseUOM' => 'getPurchaseUOM',
        'reasonCodeSubaccount' => 'getReasonCodeSubaccount',
        'replenishmentParameters' => 'getReplenishmentParameters',
        'salesAccount' => 'getSalesAccount',
        'salesSubaccount' => 'getSalesSubaccount',
        'salesUOM' => 'getSalesUOM',
        'standardCostRevaluationAccount' => 'getStandardCostRevaluationAccount',
        'standardCostRevaluationSubaccount' => 'getStandardCostRevaluationSubaccount',
        'standardCostVarianceAccount' => 'getStandardCostVarianceAccount',
        'standardCostVarianceSubaccount' => 'getStandardCostVarianceSubaccount',
        'subItems' => 'getSubItems',
        'subjectToCommission' => 'getSubjectToCommission',
        'taxCategory' => 'getTaxCategory',
        'uOMConversions' => 'getUOMConversions',
        'useOnEntry' => 'getUseOnEntry',
        'valuationMethod' => 'getValuationMethod',
        'vendorDetails' => 'getVendorDetails',
        'volumeUOM' => 'getVolumeUOM',
        'warehouseDetails' => 'getWarehouseDetails',
        'weightUOM' => 'getWeightUOM'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['aBCCode'] = isset($data['aBCCode']) ? $data['aBCCode'] : null;
        $this->container['attributes'] = isset($data['attributes']) ? $data['attributes'] : null;
        $this->container['autoIncrementalValue'] = isset($data['autoIncrementalValue']) ? $data['autoIncrementalValue'] : null;
        $this->container['averageCost'] = isset($data['averageCost']) ? $data['averageCost'] : null;
        $this->container['baseUOM'] = isset($data['baseUOM']) ? $data['baseUOM'] : null;
        $this->container['boxes'] = isset($data['boxes']) ? $data['boxes'] : null;
        $this->container['categories'] = isset($data['categories']) ? $data['categories'] : null;
        $this->container['cOGSAccount'] = isset($data['cOGSAccount']) ? $data['cOGSAccount'] : null;
        $this->container['cOGSSubaccount'] = isset($data['cOGSSubaccount']) ? $data['cOGSSubaccount'] : null;
        $this->container['content'] = isset($data['content']) ? $data['content'] : null;
        $this->container['crossReferences'] = isset($data['crossReferences']) ? $data['crossReferences'] : null;
        $this->container['currentStdCost'] = isset($data['currentStdCost']) ? $data['currentStdCost'] : null;
        $this->container['defaultIssueLocationID'] = isset($data['defaultIssueLocationID']) ? $data['defaultIssueLocationID'] : null;
        $this->container['defaultPrice'] = isset($data['defaultPrice']) ? $data['defaultPrice'] : null;
        $this->container['defaultReceiptLocationID'] = isset($data['defaultReceiptLocationID']) ? $data['defaultReceiptLocationID'] : null;
        $this->container['defaultSubitem'] = isset($data['defaultSubitem']) ? $data['defaultSubitem'] : null;
        $this->container['defaultWarehouseID'] = isset($data['defaultWarehouseID']) ? $data['defaultWarehouseID'] : null;
        $this->container['deferralAccount'] = isset($data['deferralAccount']) ? $data['deferralAccount'] : null;
        $this->container['deferralSubaccount'] = isset($data['deferralSubaccount']) ? $data['deferralSubaccount'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['dimensionVolume'] = isset($data['dimensionVolume']) ? $data['dimensionVolume'] : null;
        $this->container['dimensionWeight'] = isset($data['dimensionWeight']) ? $data['dimensionWeight'] : null;
        $this->container['discountAccount'] = isset($data['discountAccount']) ? $data['discountAccount'] : null;
        $this->container['discountSubaccount'] = isset($data['discountSubaccount']) ? $data['discountSubaccount'] : null;
        $this->container['imageUrl'] = isset($data['imageUrl']) ? $data['imageUrl'] : null;
        $this->container['inventoryAccount'] = isset($data['inventoryAccount']) ? $data['inventoryAccount'] : null;
        $this->container['inventoryID'] = isset($data['inventoryID']) ? $data['inventoryID'] : null;
        $this->container['inventorySubaccount'] = isset($data['inventorySubaccount']) ? $data['inventorySubaccount'] : null;
        $this->container['isAKit'] = isset($data['isAKit']) ? $data['isAKit'] : null;
        $this->container['itemClass'] = isset($data['itemClass']) ? $data['itemClass'] : null;
        $this->container['itemStatus'] = isset($data['itemStatus']) ? $data['itemStatus'] : null;
        $this->container['itemType'] = isset($data['itemType']) ? $data['itemType'] : null;
        $this->container['landedCostVarianceAccount'] = isset($data['landedCostVarianceAccount']) ? $data['landedCostVarianceAccount'] : null;
        $this->container['landedCostVarianceSubaccount'] = isset($data['landedCostVarianceSubaccount']) ? $data['landedCostVarianceSubaccount'] : null;
        $this->container['lastCost'] = isset($data['lastCost']) ? $data['lastCost'] : null;
        $this->container['lastModified'] = isset($data['lastModified']) ? $data['lastModified'] : null;
        $this->container['lastStdCost'] = isset($data['lastStdCost']) ? $data['lastStdCost'] : null;
        $this->container['lotSerialClass'] = isset($data['lotSerialClass']) ? $data['lotSerialClass'] : null;
        $this->container['markup'] = isset($data['markup']) ? $data['markup'] : null;
        $this->container['maxCost'] = isset($data['maxCost']) ? $data['maxCost'] : null;
        $this->container['minCost'] = isset($data['minCost']) ? $data['minCost'] : null;
        $this->container['minMarkup'] = isset($data['minMarkup']) ? $data['minMarkup'] : null;
        $this->container['mSRP'] = isset($data['mSRP']) ? $data['mSRP'] : null;
        $this->container['packagingOption'] = isset($data['packagingOption']) ? $data['packagingOption'] : null;
        $this->container['packSeparately'] = isset($data['packSeparately']) ? $data['packSeparately'] : null;
        $this->container['pendingStdCost'] = isset($data['pendingStdCost']) ? $data['pendingStdCost'] : null;
        $this->container['pOAccrualAccount'] = isset($data['pOAccrualAccount']) ? $data['pOAccrualAccount'] : null;
        $this->container['pOAccrualSubaccount'] = isset($data['pOAccrualSubaccount']) ? $data['pOAccrualSubaccount'] : null;
        $this->container['postingClass'] = isset($data['postingClass']) ? $data['postingClass'] : null;
        $this->container['priceClass'] = isset($data['priceClass']) ? $data['priceClass'] : null;
        $this->container['priceManager'] = isset($data['priceManager']) ? $data['priceManager'] : null;
        $this->container['priceWorkgroup'] = isset($data['priceWorkgroup']) ? $data['priceWorkgroup'] : null;
        $this->container['productManager'] = isset($data['productManager']) ? $data['productManager'] : null;
        $this->container['productWorkgroup'] = isset($data['productWorkgroup']) ? $data['productWorkgroup'] : null;
        $this->container['purchasePriceVarianceAccount'] = isset($data['purchasePriceVarianceAccount']) ? $data['purchasePriceVarianceAccount'] : null;
        $this->container['purchasePriceVarianceSubaccount'] = isset($data['purchasePriceVarianceSubaccount']) ? $data['purchasePriceVarianceSubaccount'] : null;
        $this->container['purchaseUOM'] = isset($data['purchaseUOM']) ? $data['purchaseUOM'] : null;
        $this->container['reasonCodeSubaccount'] = isset($data['reasonCodeSubaccount']) ? $data['reasonCodeSubaccount'] : null;
        $this->container['replenishmentParameters'] = isset($data['replenishmentParameters']) ? $data['replenishmentParameters'] : null;
        $this->container['salesAccount'] = isset($data['salesAccount']) ? $data['salesAccount'] : null;
        $this->container['salesSubaccount'] = isset($data['salesSubaccount']) ? $data['salesSubaccount'] : null;
        $this->container['salesUOM'] = isset($data['salesUOM']) ? $data['salesUOM'] : null;
        $this->container['standardCostRevaluationAccount'] = isset($data['standardCostRevaluationAccount']) ? $data['standardCostRevaluationAccount'] : null;
        $this->container['standardCostRevaluationSubaccount'] = isset($data['standardCostRevaluationSubaccount']) ? $data['standardCostRevaluationSubaccount'] : null;
        $this->container['standardCostVarianceAccount'] = isset($data['standardCostVarianceAccount']) ? $data['standardCostVarianceAccount'] : null;
        $this->container['standardCostVarianceSubaccount'] = isset($data['standardCostVarianceSubaccount']) ? $data['standardCostVarianceSubaccount'] : null;
        $this->container['subItems'] = isset($data['subItems']) ? $data['subItems'] : null;
        $this->container['subjectToCommission'] = isset($data['subjectToCommission']) ? $data['subjectToCommission'] : null;
        $this->container['taxCategory'] = isset($data['taxCategory']) ? $data['taxCategory'] : null;
        $this->container['uOMConversions'] = isset($data['uOMConversions']) ? $data['uOMConversions'] : null;
        $this->container['useOnEntry'] = isset($data['useOnEntry']) ? $data['useOnEntry'] : null;
        $this->container['valuationMethod'] = isset($data['valuationMethod']) ? $data['valuationMethod'] : null;
        $this->container['vendorDetails'] = isset($data['vendorDetails']) ? $data['vendorDetails'] : null;
        $this->container['volumeUOM'] = isset($data['volumeUOM']) ? $data['volumeUOM'] : null;
        $this->container['warehouseDetails'] = isset($data['warehouseDetails']) ? $data['warehouseDetails'] : null;
        $this->container['weightUOM'] = isset($data['weightUOM']) ? $data['weightUOM'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets aBCCode
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getABCCode()
    {
        return $this->container['aBCCode'];
    }

    /**
     * Sets aBCCode
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $aBCCode aBCCode
     *
     * @return $this
     */
    public function setABCCode($aBCCode)
    {
        $this->container['aBCCode'] = $aBCCode;

        return $this;
    }

    /**
     * Gets attributes
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\AttributeValueModel[]
     */
    public function getAttributes()
    {
        return $this->container['attributes'];
    }

    /**
     * Sets attributes
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\AttributeValueModel[] $attributes attributes
     *
     * @return $this
     */
    public function setAttributes($attributes)
    {
        $this->container['attributes'] = $attributes;

        return $this;
    }

    /**
     * Gets autoIncrementalValue
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getAutoIncrementalValue()
    {
        return $this->container['autoIncrementalValue'];
    }

    /**
     * Sets autoIncrementalValue
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $autoIncrementalValue autoIncrementalValue
     *
     * @return $this
     */
    public function setAutoIncrementalValue($autoIncrementalValue)
    {
        $this->container['autoIncrementalValue'] = $autoIncrementalValue;

        return $this;
    }

    /**
     * Gets averageCost
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getAverageCost()
    {
        return $this->container['averageCost'];
    }

    /**
     * Sets averageCost
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $averageCost averageCost
     *
     * @return $this
     */
    public function setAverageCost($averageCost)
    {
        $this->container['averageCost'] = $averageCost;

        return $this;
    }

    /**
     * Gets baseUOM
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getBaseUOM()
    {
        return $this->container['baseUOM'];
    }

    /**
     * Sets baseUOM
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $baseUOM baseUOM
     *
     * @return $this
     */
    public function setBaseUOM($baseUOM)
    {
        $this->container['baseUOM'] = $baseUOM;

        return $this;
    }

    /**
     * Gets boxes
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BoxStockItemModel[]
     */
    public function getBoxes()
    {
        return $this->container['boxes'];
    }

    /**
     * Sets boxes
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BoxStockItemModel[] $boxes boxes
     *
     * @return $this
     */
    public function setBoxes($boxes)
    {
        $this->container['boxes'] = $boxes;

        return $this;
    }

    /**
     * Gets categories
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\CategoryStockItemModel[]
     */
    public function getCategories()
    {
        return $this->container['categories'];
    }

    /**
     * Sets categories
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\CategoryStockItemModel[] $categories categories
     *
     * @return $this
     */
    public function setCategories($categories)
    {
        $this->container['categories'] = $categories;

        return $this;
    }

    /**
     * Gets cOGSAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCOGSAccount()
    {
        return $this->container['cOGSAccount'];
    }

    /**
     * Sets cOGSAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $cOGSAccount cOGSAccount
     *
     * @return $this
     */
    public function setCOGSAccount($cOGSAccount)
    {
        $this->container['cOGSAccount'] = $cOGSAccount;

        return $this;
    }

    /**
     * Gets cOGSSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCOGSSubaccount()
    {
        return $this->container['cOGSSubaccount'];
    }

    /**
     * Sets cOGSSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $cOGSSubaccount cOGSSubaccount
     *
     * @return $this
     */
    public function setCOGSSubaccount($cOGSSubaccount)
    {
        $this->container['cOGSSubaccount'] = $cOGSSubaccount;

        return $this;
    }

    /**
     * Gets content
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getContent()
    {
        return $this->container['content'];
    }

    /**
     * Sets content
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $content content
     *
     * @return $this
     */
    public function setContent($content)
    {
        $this->container['content'] = $content;

        return $this;
    }

    /**
     * Gets crossReferences
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\InventoryItemCrossReferenceModel[]
     */
    public function getCrossReferences()
    {
        return $this->container['crossReferences'];
    }

    /**
     * Sets crossReferences
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\InventoryItemCrossReferenceModel[] $crossReferences crossReferences
     *
     * @return $this
     */
    public function setCrossReferences($crossReferences)
    {
        $this->container['crossReferences'] = $crossReferences;

        return $this;
    }

    /**
     * Gets currentStdCost
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getCurrentStdCost()
    {
        return $this->container['currentStdCost'];
    }

    /**
     * Sets currentStdCost
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $currentStdCost currentStdCost
     *
     * @return $this
     */
    public function setCurrentStdCost($currentStdCost)
    {
        $this->container['currentStdCost'] = $currentStdCost;

        return $this;
    }

    /**
     * Gets defaultIssueLocationID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDefaultIssueLocationID()
    {
        return $this->container['defaultIssueLocationID'];
    }

    /**
     * Sets defaultIssueLocationID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $defaultIssueLocationID defaultIssueLocationID
     *
     * @return $this
     */
    public function setDefaultIssueLocationID($defaultIssueLocationID)
    {
        $this->container['defaultIssueLocationID'] = $defaultIssueLocationID;

        return $this;
    }

    /**
     * Gets defaultPrice
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getDefaultPrice()
    {
        return $this->container['defaultPrice'];
    }

    /**
     * Sets defaultPrice
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $defaultPrice defaultPrice
     *
     * @return $this
     */
    public function setDefaultPrice($defaultPrice)
    {
        $this->container['defaultPrice'] = $defaultPrice;

        return $this;
    }

    /**
     * Gets defaultReceiptLocationID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDefaultReceiptLocationID()
    {
        return $this->container['defaultReceiptLocationID'];
    }

    /**
     * Sets defaultReceiptLocationID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $defaultReceiptLocationID defaultReceiptLocationID
     *
     * @return $this
     */
    public function setDefaultReceiptLocationID($defaultReceiptLocationID)
    {
        $this->container['defaultReceiptLocationID'] = $defaultReceiptLocationID;

        return $this;
    }

    /**
     * Gets defaultSubitem
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDefaultSubitem()
    {
        return $this->container['defaultSubitem'];
    }

    /**
     * Sets defaultSubitem
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $defaultSubitem defaultSubitem
     *
     * @return $this
     */
    public function setDefaultSubitem($defaultSubitem)
    {
        $this->container['defaultSubitem'] = $defaultSubitem;

        return $this;
    }

    /**
     * Gets defaultWarehouseID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDefaultWarehouseID()
    {
        return $this->container['defaultWarehouseID'];
    }

    /**
     * Sets defaultWarehouseID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $defaultWarehouseID defaultWarehouseID
     *
     * @return $this
     */
    public function setDefaultWarehouseID($defaultWarehouseID)
    {
        $this->container['defaultWarehouseID'] = $defaultWarehouseID;

        return $this;
    }

    /**
     * Gets deferralAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDeferralAccount()
    {
        return $this->container['deferralAccount'];
    }

    /**
     * Sets deferralAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $deferralAccount deferralAccount
     *
     * @return $this
     */
    public function setDeferralAccount($deferralAccount)
    {
        $this->container['deferralAccount'] = $deferralAccount;

        return $this;
    }

    /**
     * Gets deferralSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDeferralSubaccount()
    {
        return $this->container['deferralSubaccount'];
    }

    /**
     * Sets deferralSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $deferralSubaccount deferralSubaccount
     *
     * @return $this
     */
    public function setDeferralSubaccount($deferralSubaccount)
    {
        $this->container['deferralSubaccount'] = $deferralSubaccount;

        return $this;
    }

    /**
     * Gets description
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets dimensionVolume
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getDimensionVolume()
    {
        return $this->container['dimensionVolume'];
    }

    /**
     * Sets dimensionVolume
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $dimensionVolume dimensionVolume
     *
     * @return $this
     */
    public function setDimensionVolume($dimensionVolume)
    {
        $this->container['dimensionVolume'] = $dimensionVolume;

        return $this;
    }

    /**
     * Gets dimensionWeight
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getDimensionWeight()
    {
        return $this->container['dimensionWeight'];
    }

    /**
     * Sets dimensionWeight
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $dimensionWeight dimensionWeight
     *
     * @return $this
     */
    public function setDimensionWeight($dimensionWeight)
    {
        $this->container['dimensionWeight'] = $dimensionWeight;

        return $this;
    }

    /**
     * Gets discountAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDiscountAccount()
    {
        return $this->container['discountAccount'];
    }

    /**
     * Sets discountAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $discountAccount discountAccount
     *
     * @return $this
     */
    public function setDiscountAccount($discountAccount)
    {
        $this->container['discountAccount'] = $discountAccount;

        return $this;
    }

    /**
     * Gets discountSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDiscountSubaccount()
    {
        return $this->container['discountSubaccount'];
    }

    /**
     * Sets discountSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $discountSubaccount discountSubaccount
     *
     * @return $this
     */
    public function setDiscountSubaccount($discountSubaccount)
    {
        $this->container['discountSubaccount'] = $discountSubaccount;

        return $this;
    }

    /**
     * Gets imageUrl
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getImageUrl()
    {
        return $this->container['imageUrl'];
    }

    /**
     * Sets imageUrl
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $imageUrl imageUrl
     *
     * @return $this
     */
    public function setImageUrl($imageUrl)
    {
        $this->container['imageUrl'] = $imageUrl;

        return $this;
    }

    /**
     * Gets inventoryAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getInventoryAccount()
    {
        return $this->container['inventoryAccount'];
    }

    /**
     * Sets inventoryAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $inventoryAccount inventoryAccount
     *
     * @return $this
     */
    public function setInventoryAccount($inventoryAccount)
    {
        $this->container['inventoryAccount'] = $inventoryAccount;

        return $this;
    }

    /**
     * Gets inventoryID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getInventoryID()
    {
        return $this->container['inventoryID'];
    }

    /**
     * Sets inventoryID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $inventoryID inventoryID
     *
     * @return $this
     */
    public function setInventoryID($inventoryID)
    {
        $this->container['inventoryID'] = $inventoryID;

        return $this;
    }

    /**
     * Gets inventorySubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getInventorySubaccount()
    {
        return $this->container['inventorySubaccount'];
    }

    /**
     * Sets inventorySubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $inventorySubaccount inventorySubaccount
     *
     * @return $this
     */
    public function setInventorySubaccount($inventorySubaccount)
    {
        $this->container['inventorySubaccount'] = $inventorySubaccount;

        return $this;
    }

    /**
     * Gets isAKit
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getIsAKit()
    {
        return $this->container['isAKit'];
    }

    /**
     * Sets isAKit
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $isAKit isAKit
     *
     * @return $this
     */
    public function setIsAKit($isAKit)
    {
        $this->container['isAKit'] = $isAKit;

        return $this;
    }

    /**
     * Gets itemClass
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getItemClass()
    {
        return $this->container['itemClass'];
    }

    /**
     * Sets itemClass
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $itemClass itemClass
     *
     * @return $this
     */
    public function setItemClass($itemClass)
    {
        $this->container['itemClass'] = $itemClass;

        return $this;
    }

    /**
     * Gets itemStatus
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getItemStatus()
    {
        return $this->container['itemStatus'];
    }

    /**
     * Sets itemStatus
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $itemStatus itemStatus
     *
     * @return $this
     */
    public function setItemStatus($itemStatus)
    {
        $this->container['itemStatus'] = $itemStatus;

        return $this;
    }

    /**
     * Gets itemType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getItemType()
    {
        return $this->container['itemType'];
    }

    /**
     * Sets itemType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $itemType itemType
     *
     * @return $this
     */
    public function setItemType($itemType)
    {
        $this->container['itemType'] = $itemType;

        return $this;
    }

    /**
     * Gets landedCostVarianceAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLandedCostVarianceAccount()
    {
        return $this->container['landedCostVarianceAccount'];
    }

    /**
     * Sets landedCostVarianceAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $landedCostVarianceAccount landedCostVarianceAccount
     *
     * @return $this
     */
    public function setLandedCostVarianceAccount($landedCostVarianceAccount)
    {
        $this->container['landedCostVarianceAccount'] = $landedCostVarianceAccount;

        return $this;
    }

    /**
     * Gets landedCostVarianceSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLandedCostVarianceSubaccount()
    {
        return $this->container['landedCostVarianceSubaccount'];
    }

    /**
     * Sets landedCostVarianceSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $landedCostVarianceSubaccount landedCostVarianceSubaccount
     *
     * @return $this
     */
    public function setLandedCostVarianceSubaccount($landedCostVarianceSubaccount)
    {
        $this->container['landedCostVarianceSubaccount'] = $landedCostVarianceSubaccount;

        return $this;
    }

    /**
     * Gets lastCost
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getLastCost()
    {
        return $this->container['lastCost'];
    }

    /**
     * Sets lastCost
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $lastCost lastCost
     *
     * @return $this
     */
    public function setLastCost($lastCost)
    {
        $this->container['lastCost'] = $lastCost;

        return $this;
    }

    /**
     * Gets lastModified
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getLastModified()
    {
        return $this->container['lastModified'];
    }

    /**
     * Sets lastModified
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $lastModified lastModified
     *
     * @return $this
     */
    public function setLastModified($lastModified)
    {
        $this->container['lastModified'] = $lastModified;

        return $this;
    }

    /**
     * Gets lastStdCost
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getLastStdCost()
    {
        return $this->container['lastStdCost'];
    }

    /**
     * Sets lastStdCost
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $lastStdCost lastStdCost
     *
     * @return $this
     */
    public function setLastStdCost($lastStdCost)
    {
        $this->container['lastStdCost'] = $lastStdCost;

        return $this;
    }

    /**
     * Gets lotSerialClass
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLotSerialClass()
    {
        return $this->container['lotSerialClass'];
    }

    /**
     * Sets lotSerialClass
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $lotSerialClass lotSerialClass
     *
     * @return $this
     */
    public function setLotSerialClass($lotSerialClass)
    {
        $this->container['lotSerialClass'] = $lotSerialClass;

        return $this;
    }

    /**
     * Gets markup
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getMarkup()
    {
        return $this->container['markup'];
    }

    /**
     * Sets markup
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $markup markup
     *
     * @return $this
     */
    public function setMarkup($markup)
    {
        $this->container['markup'] = $markup;

        return $this;
    }

    /**
     * Gets maxCost
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getMaxCost()
    {
        return $this->container['maxCost'];
    }

    /**
     * Sets maxCost
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $maxCost maxCost
     *
     * @return $this
     */
    public function setMaxCost($maxCost)
    {
        $this->container['maxCost'] = $maxCost;

        return $this;
    }

    /**
     * Gets minCost
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getMinCost()
    {
        return $this->container['minCost'];
    }

    /**
     * Sets minCost
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $minCost minCost
     *
     * @return $this
     */
    public function setMinCost($minCost)
    {
        $this->container['minCost'] = $minCost;

        return $this;
    }

    /**
     * Gets minMarkup
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getMinMarkup()
    {
        return $this->container['minMarkup'];
    }

    /**
     * Sets minMarkup
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $minMarkup minMarkup
     *
     * @return $this
     */
    public function setMinMarkup($minMarkup)
    {
        $this->container['minMarkup'] = $minMarkup;

        return $this;
    }

    /**
     * Gets mSRP
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getMSRP()
    {
        return $this->container['mSRP'];
    }

    /**
     * Sets mSRP
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $mSRP mSRP
     *
     * @return $this
     */
    public function setMSRP($mSRP)
    {
        $this->container['mSRP'] = $mSRP;

        return $this;
    }

    /**
     * Gets packagingOption
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPackagingOption()
    {
        return $this->container['packagingOption'];
    }

    /**
     * Sets packagingOption
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $packagingOption packagingOption
     *
     * @return $this
     */
    public function setPackagingOption($packagingOption)
    {
        $this->container['packagingOption'] = $packagingOption;

        return $this;
    }

    /**
     * Gets packSeparately
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getPackSeparately()
    {
        return $this->container['packSeparately'];
    }

    /**
     * Sets packSeparately
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $packSeparately packSeparately
     *
     * @return $this
     */
    public function setPackSeparately($packSeparately)
    {
        $this->container['packSeparately'] = $packSeparately;

        return $this;
    }

    /**
     * Gets pendingStdCost
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getPendingStdCost()
    {
        return $this->container['pendingStdCost'];
    }

    /**
     * Sets pendingStdCost
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $pendingStdCost pendingStdCost
     *
     * @return $this
     */
    public function setPendingStdCost($pendingStdCost)
    {
        $this->container['pendingStdCost'] = $pendingStdCost;

        return $this;
    }

    /**
     * Gets pOAccrualAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPOAccrualAccount()
    {
        return $this->container['pOAccrualAccount'];
    }

    /**
     * Sets pOAccrualAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $pOAccrualAccount pOAccrualAccount
     *
     * @return $this
     */
    public function setPOAccrualAccount($pOAccrualAccount)
    {
        $this->container['pOAccrualAccount'] = $pOAccrualAccount;

        return $this;
    }

    /**
     * Gets pOAccrualSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPOAccrualSubaccount()
    {
        return $this->container['pOAccrualSubaccount'];
    }

    /**
     * Sets pOAccrualSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $pOAccrualSubaccount pOAccrualSubaccount
     *
     * @return $this
     */
    public function setPOAccrualSubaccount($pOAccrualSubaccount)
    {
        $this->container['pOAccrualSubaccount'] = $pOAccrualSubaccount;

        return $this;
    }

    /**
     * Gets postingClass
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPostingClass()
    {
        return $this->container['postingClass'];
    }

    /**
     * Sets postingClass
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $postingClass postingClass
     *
     * @return $this
     */
    public function setPostingClass($postingClass)
    {
        $this->container['postingClass'] = $postingClass;

        return $this;
    }

    /**
     * Gets priceClass
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPriceClass()
    {
        return $this->container['priceClass'];
    }

    /**
     * Sets priceClass
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $priceClass priceClass
     *
     * @return $this
     */
    public function setPriceClass($priceClass)
    {
        $this->container['priceClass'] = $priceClass;

        return $this;
    }

    /**
     * Gets priceManager
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPriceManager()
    {
        return $this->container['priceManager'];
    }

    /**
     * Sets priceManager
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $priceManager priceManager
     *
     * @return $this
     */
    public function setPriceManager($priceManager)
    {
        $this->container['priceManager'] = $priceManager;

        return $this;
    }

    /**
     * Gets priceWorkgroup
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPriceWorkgroup()
    {
        return $this->container['priceWorkgroup'];
    }

    /**
     * Sets priceWorkgroup
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $priceWorkgroup priceWorkgroup
     *
     * @return $this
     */
    public function setPriceWorkgroup($priceWorkgroup)
    {
        $this->container['priceWorkgroup'] = $priceWorkgroup;

        return $this;
    }

    /**
     * Gets productManager
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getProductManager()
    {
        return $this->container['productManager'];
    }

    /**
     * Sets productManager
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $productManager productManager
     *
     * @return $this
     */
    public function setProductManager($productManager)
    {
        $this->container['productManager'] = $productManager;

        return $this;
    }

    /**
     * Gets productWorkgroup
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getProductWorkgroup()
    {
        return $this->container['productWorkgroup'];
    }

    /**
     * Sets productWorkgroup
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $productWorkgroup productWorkgroup
     *
     * @return $this
     */
    public function setProductWorkgroup($productWorkgroup)
    {
        $this->container['productWorkgroup'] = $productWorkgroup;

        return $this;
    }

    /**
     * Gets purchasePriceVarianceAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPurchasePriceVarianceAccount()
    {
        return $this->container['purchasePriceVarianceAccount'];
    }

    /**
     * Sets purchasePriceVarianceAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $purchasePriceVarianceAccount purchasePriceVarianceAccount
     *
     * @return $this
     */
    public function setPurchasePriceVarianceAccount($purchasePriceVarianceAccount)
    {
        $this->container['purchasePriceVarianceAccount'] = $purchasePriceVarianceAccount;

        return $this;
    }

    /**
     * Gets purchasePriceVarianceSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPurchasePriceVarianceSubaccount()
    {
        return $this->container['purchasePriceVarianceSubaccount'];
    }

    /**
     * Sets purchasePriceVarianceSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $purchasePriceVarianceSubaccount purchasePriceVarianceSubaccount
     *
     * @return $this
     */
    public function setPurchasePriceVarianceSubaccount($purchasePriceVarianceSubaccount)
    {
        $this->container['purchasePriceVarianceSubaccount'] = $purchasePriceVarianceSubaccount;

        return $this;
    }

    /**
     * Gets purchaseUOM
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPurchaseUOM()
    {
        return $this->container['purchaseUOM'];
    }

    /**
     * Sets purchaseUOM
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $purchaseUOM purchaseUOM
     *
     * @return $this
     */
    public function setPurchaseUOM($purchaseUOM)
    {
        $this->container['purchaseUOM'] = $purchaseUOM;

        return $this;
    }

    /**
     * Gets reasonCodeSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getReasonCodeSubaccount()
    {
        return $this->container['reasonCodeSubaccount'];
    }

    /**
     * Sets reasonCodeSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $reasonCodeSubaccount reasonCodeSubaccount
     *
     * @return $this
     */
    public function setReasonCodeSubaccount($reasonCodeSubaccount)
    {
        $this->container['reasonCodeSubaccount'] = $reasonCodeSubaccount;

        return $this;
    }

    /**
     * Gets replenishmentParameters
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\ReplenishmentParameterStockItemModel[]
     */
    public function getReplenishmentParameters()
    {
        return $this->container['replenishmentParameters'];
    }

    /**
     * Sets replenishmentParameters
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\ReplenishmentParameterStockItemModel[] $replenishmentParameters replenishmentParameters
     *
     * @return $this
     */
    public function setReplenishmentParameters($replenishmentParameters)
    {
        $this->container['replenishmentParameters'] = $replenishmentParameters;

        return $this;
    }

    /**
     * Gets salesAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getSalesAccount()
    {
        return $this->container['salesAccount'];
    }

    /**
     * Sets salesAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $salesAccount salesAccount
     *
     * @return $this
     */
    public function setSalesAccount($salesAccount)
    {
        $this->container['salesAccount'] = $salesAccount;

        return $this;
    }

    /**
     * Gets salesSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getSalesSubaccount()
    {
        return $this->container['salesSubaccount'];
    }

    /**
     * Sets salesSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $salesSubaccount salesSubaccount
     *
     * @return $this
     */
    public function setSalesSubaccount($salesSubaccount)
    {
        $this->container['salesSubaccount'] = $salesSubaccount;

        return $this;
    }

    /**
     * Gets salesUOM
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getSalesUOM()
    {
        return $this->container['salesUOM'];
    }

    /**
     * Sets salesUOM
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $salesUOM salesUOM
     *
     * @return $this
     */
    public function setSalesUOM($salesUOM)
    {
        $this->container['salesUOM'] = $salesUOM;

        return $this;
    }

    /**
     * Gets standardCostRevaluationAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getStandardCostRevaluationAccount()
    {
        return $this->container['standardCostRevaluationAccount'];
    }

    /**
     * Sets standardCostRevaluationAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $standardCostRevaluationAccount standardCostRevaluationAccount
     *
     * @return $this
     */
    public function setStandardCostRevaluationAccount($standardCostRevaluationAccount)
    {
        $this->container['standardCostRevaluationAccount'] = $standardCostRevaluationAccount;

        return $this;
    }

    /**
     * Gets standardCostRevaluationSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getStandardCostRevaluationSubaccount()
    {
        return $this->container['standardCostRevaluationSubaccount'];
    }

    /**
     * Sets standardCostRevaluationSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $standardCostRevaluationSubaccount standardCostRevaluationSubaccount
     *
     * @return $this
     */
    public function setStandardCostRevaluationSubaccount($standardCostRevaluationSubaccount)
    {
        $this->container['standardCostRevaluationSubaccount'] = $standardCostRevaluationSubaccount;

        return $this;
    }

    /**
     * Gets standardCostVarianceAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getStandardCostVarianceAccount()
    {
        return $this->container['standardCostVarianceAccount'];
    }

    /**
     * Sets standardCostVarianceAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $standardCostVarianceAccount standardCostVarianceAccount
     *
     * @return $this
     */
    public function setStandardCostVarianceAccount($standardCostVarianceAccount)
    {
        $this->container['standardCostVarianceAccount'] = $standardCostVarianceAccount;

        return $this;
    }

    /**
     * Gets standardCostVarianceSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getStandardCostVarianceSubaccount()
    {
        return $this->container['standardCostVarianceSubaccount'];
    }

    /**
     * Sets standardCostVarianceSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $standardCostVarianceSubaccount standardCostVarianceSubaccount
     *
     * @return $this
     */
    public function setStandardCostVarianceSubaccount($standardCostVarianceSubaccount)
    {
        $this->container['standardCostVarianceSubaccount'] = $standardCostVarianceSubaccount;

        return $this;
    }

    /**
     * Gets subItems
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\SubItemStockItemModel[]
     */
    public function getSubItems()
    {
        return $this->container['subItems'];
    }

    /**
     * Sets subItems
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\SubItemStockItemModel[] $subItems subItems
     *
     * @return $this
     */
    public function setSubItems($subItems)
    {
        $this->container['subItems'] = $subItems;

        return $this;
    }

    /**
     * Gets subjectToCommission
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getSubjectToCommission()
    {
        return $this->container['subjectToCommission'];
    }

    /**
     * Sets subjectToCommission
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $subjectToCommission subjectToCommission
     *
     * @return $this
     */
    public function setSubjectToCommission($subjectToCommission)
    {
        $this->container['subjectToCommission'] = $subjectToCommission;

        return $this;
    }

    /**
     * Gets taxCategory
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxCategory()
    {
        return $this->container['taxCategory'];
    }

    /**
     * Sets taxCategory
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxCategory taxCategory
     *
     * @return $this
     */
    public function setTaxCategory($taxCategory)
    {
        $this->container['taxCategory'] = $taxCategory;

        return $this;
    }

    /**
     * Gets uOMConversions
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\InventoryItemUOMConversionModel[]
     */
    public function getUOMConversions()
    {
        return $this->container['uOMConversions'];
    }

    /**
     * Sets uOMConversions
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\InventoryItemUOMConversionModel[] $uOMConversions uOMConversions
     *
     * @return $this
     */
    public function setUOMConversions($uOMConversions)
    {
        $this->container['uOMConversions'] = $uOMConversions;

        return $this;
    }

    /**
     * Gets useOnEntry
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getUseOnEntry()
    {
        return $this->container['useOnEntry'];
    }

    /**
     * Sets useOnEntry
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $useOnEntry useOnEntry
     *
     * @return $this
     */
    public function setUseOnEntry($useOnEntry)
    {
        $this->container['useOnEntry'] = $useOnEntry;

        return $this;
    }

    /**
     * Gets valuationMethod
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getValuationMethod()
    {
        return $this->container['valuationMethod'];
    }

    /**
     * Sets valuationMethod
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $valuationMethod valuationMethod
     *
     * @return $this
     */
    public function setValuationMethod($valuationMethod)
    {
        $this->container['valuationMethod'] = $valuationMethod;

        return $this;
    }

    /**
     * Gets vendorDetails
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StockItemVendorDetailModel[]
     */
    public function getVendorDetails()
    {
        return $this->container['vendorDetails'];
    }

    /**
     * Sets vendorDetails
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StockItemVendorDetailModel[] $vendorDetails vendorDetails
     *
     * @return $this
     */
    public function setVendorDetails($vendorDetails)
    {
        $this->container['vendorDetails'] = $vendorDetails;

        return $this;
    }

    /**
     * Gets volumeUOM
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getVolumeUOM()
    {
        return $this->container['volumeUOM'];
    }

    /**
     * Sets volumeUOM
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $volumeUOM volumeUOM
     *
     * @return $this
     */
    public function setVolumeUOM($volumeUOM)
    {
        $this->container['volumeUOM'] = $volumeUOM;

        return $this;
    }

    /**
     * Gets warehouseDetails
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StockItemWarehouseDetailModel[]
     */
    public function getWarehouseDetails()
    {
        return $this->container['warehouseDetails'];
    }

    /**
     * Sets warehouseDetails
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StockItemWarehouseDetailModel[] $warehouseDetails warehouseDetails
     *
     * @return $this
     */
    public function setWarehouseDetails($warehouseDetails)
    {
        $this->container['warehouseDetails'] = $warehouseDetails;

        return $this;
    }

    /**
     * Gets weightUOM
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getWeightUOM()
    {
        return $this->container['weightUOM'];
    }

    /**
     * Sets weightUOM
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $weightUOM weightUOM
     *
     * @return $this
     */
    public function setWeightUOM($weightUOM)
    {
        $this->container['weightUOM'] = $weightUOM;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


