<?php
/**
 * OpportunityContactModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Default/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.12
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;

use \ArrayAccess;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * OpportunityContactModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class OpportunityContactModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'OpportunityContact';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'rowNumber' => 'int',
        'note' => 'string',
        'custom' => 'map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]',
        'files' => '\Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]',
        'companyName' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'email' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'fax' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'faxType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'firstName' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'lastName' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'phone1' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'phone1Type' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'phone2' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'phone2Type' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'phone3' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'phone3Type' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'position' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'title' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'webSite' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'attention' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'uuid',
        'rowNumber' => 'int64',
        'note' => null,
        'custom' => null,
        'files' => null,
        'companyName' => null,
        'email' => null,
        'fax' => null,
        'faxType' => null,
        'firstName' => null,
        'lastName' => null,
        'phone1' => null,
        'phone1Type' => null,
        'phone2' => null,
        'phone2Type' => null,
        'phone3' => null,
        'phone3Type' => null,
        'position' => null,
        'title' => null,
        'webSite' => null,
        'attention' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'rowNumber' => 'rowNumber',
        'note' => 'note',
        'custom' => 'custom',
        'files' => 'files',
        'companyName' => 'CompanyName',
        'email' => 'Email',
        'fax' => 'Fax',
        'faxType' => 'FaxType',
        'firstName' => 'FirstName',
        'lastName' => 'LastName',
        'phone1' => 'Phone1',
        'phone1Type' => 'Phone1Type',
        'phone2' => 'Phone2',
        'phone2Type' => 'Phone2Type',
        'phone3' => 'Phone3',
        'phone3Type' => 'Phone3Type',
        'position' => 'Position',
        'title' => 'Title',
        'webSite' => 'WebSite',
        'attention' => 'Attention'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'rowNumber' => 'setRowNumber',
        'note' => 'setNote',
        'custom' => 'setCustom',
        'files' => 'setFiles',
        'companyName' => 'setCompanyName',
        'email' => 'setEmail',
        'fax' => 'setFax',
        'faxType' => 'setFaxType',
        'firstName' => 'setFirstName',
        'lastName' => 'setLastName',
        'phone1' => 'setPhone1',
        'phone1Type' => 'setPhone1Type',
        'phone2' => 'setPhone2',
        'phone2Type' => 'setPhone2Type',
        'phone3' => 'setPhone3',
        'phone3Type' => 'setPhone3Type',
        'position' => 'setPosition',
        'title' => 'setTitle',
        'webSite' => 'setWebSite',
        'attention' => 'setAttention'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'rowNumber' => 'getRowNumber',
        'note' => 'getNote',
        'custom' => 'getCustom',
        'files' => 'getFiles',
        'companyName' => 'getCompanyName',
        'email' => 'getEmail',
        'fax' => 'getFax',
        'faxType' => 'getFaxType',
        'firstName' => 'getFirstName',
        'lastName' => 'getLastName',
        'phone1' => 'getPhone1',
        'phone1Type' => 'getPhone1Type',
        'phone2' => 'getPhone2',
        'phone2Type' => 'getPhone2Type',
        'phone3' => 'getPhone3',
        'phone3Type' => 'getPhone3Type',
        'position' => 'getPosition',
        'title' => 'getTitle',
        'webSite' => 'getWebSite',
        'attention' => 'getAttention'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['rowNumber'] = isset($data['rowNumber']) ? $data['rowNumber'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['custom'] = isset($data['custom']) ? $data['custom'] : null;
        $this->container['files'] = isset($data['files']) ? $data['files'] : null;
        $this->container['companyName'] = isset($data['companyName']) ? $data['companyName'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['fax'] = isset($data['fax']) ? $data['fax'] : null;
        $this->container['faxType'] = isset($data['faxType']) ? $data['faxType'] : null;
        $this->container['firstName'] = isset($data['firstName']) ? $data['firstName'] : null;
        $this->container['lastName'] = isset($data['lastName']) ? $data['lastName'] : null;
        $this->container['phone1'] = isset($data['phone1']) ? $data['phone1'] : null;
        $this->container['phone1Type'] = isset($data['phone1Type']) ? $data['phone1Type'] : null;
        $this->container['phone2'] = isset($data['phone2']) ? $data['phone2'] : null;
        $this->container['phone2Type'] = isset($data['phone2Type']) ? $data['phone2Type'] : null;
        $this->container['phone3'] = isset($data['phone3']) ? $data['phone3'] : null;
        $this->container['phone3Type'] = isset($data['phone3Type']) ? $data['phone3Type'] : null;
        $this->container['position'] = isset($data['position']) ? $data['position'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['webSite'] = isset($data['webSite']) ? $data['webSite'] : null;
        $this->container['attention'] = isset($data['attention']) ? $data['attention'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets rowNumber
     *
     * @return int
     */
    public function getRowNumber()
    {
        return $this->container['rowNumber'];
    }

    /**
     * Sets rowNumber
     *
     * @param int $rowNumber rowNumber
     *
     * @return $this
     */
    public function setRowNumber($rowNumber)
    {
        $this->container['rowNumber'] = $rowNumber;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note note
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets custom
     *
     * @return map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]
     */
    public function getCustom()
    {
        return $this->container['custom'];
    }

    /**
     * Sets custom
     *
     * @param map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]] $custom custom
     *
     * @return $this
     */
    public function setCustom($custom)
    {
        $this->container['custom'] = $custom;

        return $this;
    }

    /**
     * Gets files
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]
     */
    public function getFiles()
    {
        return $this->container['files'];
    }

    /**
     * Sets files
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[] $files files
     *
     * @return $this
     */
    public function setFiles($files)
    {
        $this->container['files'] = $files;

        return $this;
    }

    /**
     * Gets companyName
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCompanyName()
    {
        return $this->container['companyName'];
    }

    /**
     * Sets companyName
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $companyName companyName
     *
     * @return $this
     */
    public function setCompanyName($companyName)
    {
        $this->container['companyName'] = $companyName;

        return $this;
    }

    /**
     * Gets email
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $email email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets fax
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getFax()
    {
        return $this->container['fax'];
    }

    /**
     * Sets fax
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $fax fax
     *
     * @return $this
     */
    public function setFax($fax)
    {
        $this->container['fax'] = $fax;

        return $this;
    }

    /**
     * Gets faxType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getFaxType()
    {
        return $this->container['faxType'];
    }

    /**
     * Sets faxType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $faxType faxType
     *
     * @return $this
     */
    public function setFaxType($faxType)
    {
        $this->container['faxType'] = $faxType;

        return $this;
    }

    /**
     * Gets firstName
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getFirstName()
    {
        return $this->container['firstName'];
    }

    /**
     * Sets firstName
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $firstName firstName
     *
     * @return $this
     */
    public function setFirstName($firstName)
    {
        $this->container['firstName'] = $firstName;

        return $this;
    }

    /**
     * Gets lastName
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLastName()
    {
        return $this->container['lastName'];
    }

    /**
     * Sets lastName
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $lastName lastName
     *
     * @return $this
     */
    public function setLastName($lastName)
    {
        $this->container['lastName'] = $lastName;

        return $this;
    }

    /**
     * Gets phone1
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPhone1()
    {
        return $this->container['phone1'];
    }

    /**
     * Sets phone1
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $phone1 phone1
     *
     * @return $this
     */
    public function setPhone1($phone1)
    {
        $this->container['phone1'] = $phone1;

        return $this;
    }

    /**
     * Gets phone1Type
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPhone1Type()
    {
        return $this->container['phone1Type'];
    }

    /**
     * Sets phone1Type
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $phone1Type phone1Type
     *
     * @return $this
     */
    public function setPhone1Type($phone1Type)
    {
        $this->container['phone1Type'] = $phone1Type;

        return $this;
    }

    /**
     * Gets phone2
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPhone2()
    {
        return $this->container['phone2'];
    }

    /**
     * Sets phone2
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $phone2 phone2
     *
     * @return $this
     */
    public function setPhone2($phone2)
    {
        $this->container['phone2'] = $phone2;

        return $this;
    }

    /**
     * Gets phone2Type
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPhone2Type()
    {
        return $this->container['phone2Type'];
    }

    /**
     * Sets phone2Type
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $phone2Type phone2Type
     *
     * @return $this
     */
    public function setPhone2Type($phone2Type)
    {
        $this->container['phone2Type'] = $phone2Type;

        return $this;
    }

    /**
     * Gets phone3
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPhone3()
    {
        return $this->container['phone3'];
    }

    /**
     * Sets phone3
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $phone3 phone3
     *
     * @return $this
     */
    public function setPhone3($phone3)
    {
        $this->container['phone3'] = $phone3;

        return $this;
    }

    /**
     * Gets phone3Type
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPhone3Type()
    {
        return $this->container['phone3Type'];
    }

    /**
     * Sets phone3Type
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $phone3Type phone3Type
     *
     * @return $this
     */
    public function setPhone3Type($phone3Type)
    {
        $this->container['phone3Type'] = $phone3Type;

        return $this;
    }

    /**
     * Gets position
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPosition()
    {
        return $this->container['position'];
    }

    /**
     * Sets position
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $position position
     *
     * @return $this
     */
    public function setPosition($position)
    {
        $this->container['position'] = $position;

        return $this;
    }

    /**
     * Gets title
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $title title
     *
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets webSite
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getWebSite()
    {
        return $this->container['webSite'];
    }

    /**
     * Sets webSite
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $webSite webSite
     *
     * @return $this
     */
    public function setWebSite($webSite)
    {
        $this->container['webSite'] = $webSite;

        return $this;
    }

    /**
     * Gets attention
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getAttention()
    {
        return $this->container['attention'];
    }

    /**
     * Sets attention
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $attention attention
     *
     * @return $this
     */
    public function setAttention($attention)
    {
        $this->container['attention'] = $attention;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


