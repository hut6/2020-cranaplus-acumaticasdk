<?php
/**
 * FinancialSettingsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.22
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * FinancialSettingsModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FinancialSettingsModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'FinancialSettings';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'billSeparately' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'branch' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'cashDiscountDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'customerTaxZone' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'dueDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'entityUsageType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'invoiceDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'invoiceNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'originalOrderNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'originalOrderType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'overrideTaxZone' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'owner' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'postPeriod' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'terms' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'billSeparately' => null,
        'branch' => null,
        'cashDiscountDate' => null,
        'customerTaxZone' => null,
        'dueDate' => null,
        'entityUsageType' => null,
        'invoiceDate' => null,
        'invoiceNbr' => null,
        'originalOrderNbr' => null,
        'originalOrderType' => null,
        'overrideTaxZone' => null,
        'owner' => null,
        'postPeriod' => null,
        'terms' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'billSeparately' => 'BillSeparately',
        'branch' => 'Branch',
        'cashDiscountDate' => 'CashDiscountDate',
        'customerTaxZone' => 'CustomerTaxZone',
        'dueDate' => 'DueDate',
        'entityUsageType' => 'EntityUsageType',
        'invoiceDate' => 'InvoiceDate',
        'invoiceNbr' => 'InvoiceNbr',
        'originalOrderNbr' => 'OriginalOrderNbr',
        'originalOrderType' => 'OriginalOrderType',
        'overrideTaxZone' => 'OverrideTaxZone',
        'owner' => 'Owner',
        'postPeriod' => 'PostPeriod',
        'terms' => 'Terms'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'billSeparately' => 'setBillSeparately',
        'branch' => 'setBranch',
        'cashDiscountDate' => 'setCashDiscountDate',
        'customerTaxZone' => 'setCustomerTaxZone',
        'dueDate' => 'setDueDate',
        'entityUsageType' => 'setEntityUsageType',
        'invoiceDate' => 'setInvoiceDate',
        'invoiceNbr' => 'setInvoiceNbr',
        'originalOrderNbr' => 'setOriginalOrderNbr',
        'originalOrderType' => 'setOriginalOrderType',
        'overrideTaxZone' => 'setOverrideTaxZone',
        'owner' => 'setOwner',
        'postPeriod' => 'setPostPeriod',
        'terms' => 'setTerms'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'billSeparately' => 'getBillSeparately',
        'branch' => 'getBranch',
        'cashDiscountDate' => 'getCashDiscountDate',
        'customerTaxZone' => 'getCustomerTaxZone',
        'dueDate' => 'getDueDate',
        'entityUsageType' => 'getEntityUsageType',
        'invoiceDate' => 'getInvoiceDate',
        'invoiceNbr' => 'getInvoiceNbr',
        'originalOrderNbr' => 'getOriginalOrderNbr',
        'originalOrderType' => 'getOriginalOrderType',
        'overrideTaxZone' => 'getOverrideTaxZone',
        'owner' => 'getOwner',
        'postPeriod' => 'getPostPeriod',
        'terms' => 'getTerms'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['billSeparately'] = isset($data['billSeparately']) ? $data['billSeparately'] : null;
        $this->container['branch'] = isset($data['branch']) ? $data['branch'] : null;
        $this->container['cashDiscountDate'] = isset($data['cashDiscountDate']) ? $data['cashDiscountDate'] : null;
        $this->container['customerTaxZone'] = isset($data['customerTaxZone']) ? $data['customerTaxZone'] : null;
        $this->container['dueDate'] = isset($data['dueDate']) ? $data['dueDate'] : null;
        $this->container['entityUsageType'] = isset($data['entityUsageType']) ? $data['entityUsageType'] : null;
        $this->container['invoiceDate'] = isset($data['invoiceDate']) ? $data['invoiceDate'] : null;
        $this->container['invoiceNbr'] = isset($data['invoiceNbr']) ? $data['invoiceNbr'] : null;
        $this->container['originalOrderNbr'] = isset($data['originalOrderNbr']) ? $data['originalOrderNbr'] : null;
        $this->container['originalOrderType'] = isset($data['originalOrderType']) ? $data['originalOrderType'] : null;
        $this->container['overrideTaxZone'] = isset($data['overrideTaxZone']) ? $data['overrideTaxZone'] : null;
        $this->container['owner'] = isset($data['owner']) ? $data['owner'] : null;
        $this->container['postPeriod'] = isset($data['postPeriod']) ? $data['postPeriod'] : null;
        $this->container['terms'] = isset($data['terms']) ? $data['terms'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets billSeparately
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getBillSeparately()
    {
        return $this->container['billSeparately'];
    }

    /**
     * Sets billSeparately
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $billSeparately billSeparately
     *
     * @return $this
     */
    public function setBillSeparately($billSeparately)
    {
        $this->container['billSeparately'] = $billSeparately;

        return $this;
    }

    /**
     * Gets branch
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getBranch()
    {
        return $this->container['branch'];
    }

    /**
     * Sets branch
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $branch branch
     *
     * @return $this
     */
    public function setBranch($branch)
    {
        $this->container['branch'] = $branch;

        return $this;
    }

    /**
     * Gets cashDiscountDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getCashDiscountDate()
    {
        return $this->container['cashDiscountDate'];
    }

    /**
     * Sets cashDiscountDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $cashDiscountDate cashDiscountDate
     *
     * @return $this
     */
    public function setCashDiscountDate($cashDiscountDate)
    {
        $this->container['cashDiscountDate'] = $cashDiscountDate;

        return $this;
    }

    /**
     * Gets customerTaxZone
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCustomerTaxZone()
    {
        return $this->container['customerTaxZone'];
    }

    /**
     * Sets customerTaxZone
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $customerTaxZone customerTaxZone
     *
     * @return $this
     */
    public function setCustomerTaxZone($customerTaxZone)
    {
        $this->container['customerTaxZone'] = $customerTaxZone;

        return $this;
    }

    /**
     * Gets dueDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getDueDate()
    {
        return $this->container['dueDate'];
    }

    /**
     * Sets dueDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $dueDate dueDate
     *
     * @return $this
     */
    public function setDueDate($dueDate)
    {
        $this->container['dueDate'] = $dueDate;

        return $this;
    }

    /**
     * Gets entityUsageType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getEntityUsageType()
    {
        return $this->container['entityUsageType'];
    }

    /**
     * Sets entityUsageType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $entityUsageType entityUsageType
     *
     * @return $this
     */
    public function setEntityUsageType($entityUsageType)
    {
        $this->container['entityUsageType'] = $entityUsageType;

        return $this;
    }

    /**
     * Gets invoiceDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getInvoiceDate()
    {
        return $this->container['invoiceDate'];
    }

    /**
     * Sets invoiceDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $invoiceDate invoiceDate
     *
     * @return $this
     */
    public function setInvoiceDate($invoiceDate)
    {
        $this->container['invoiceDate'] = $invoiceDate;

        return $this;
    }

    /**
     * Gets invoiceNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getInvoiceNbr()
    {
        return $this->container['invoiceNbr'];
    }

    /**
     * Sets invoiceNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $invoiceNbr invoiceNbr
     *
     * @return $this
     */
    public function setInvoiceNbr($invoiceNbr)
    {
        $this->container['invoiceNbr'] = $invoiceNbr;

        return $this;
    }

    /**
     * Gets originalOrderNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getOriginalOrderNbr()
    {
        return $this->container['originalOrderNbr'];
    }

    /**
     * Sets originalOrderNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $originalOrderNbr originalOrderNbr
     *
     * @return $this
     */
    public function setOriginalOrderNbr($originalOrderNbr)
    {
        $this->container['originalOrderNbr'] = $originalOrderNbr;

        return $this;
    }

    /**
     * Gets originalOrderType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getOriginalOrderType()
    {
        return $this->container['originalOrderType'];
    }

    /**
     * Sets originalOrderType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $originalOrderType originalOrderType
     *
     * @return $this
     */
    public function setOriginalOrderType($originalOrderType)
    {
        $this->container['originalOrderType'] = $originalOrderType;

        return $this;
    }

    /**
     * Gets overrideTaxZone
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getOverrideTaxZone()
    {
        return $this->container['overrideTaxZone'];
    }

    /**
     * Sets overrideTaxZone
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $overrideTaxZone overrideTaxZone
     *
     * @return $this
     */
    public function setOverrideTaxZone($overrideTaxZone)
    {
        $this->container['overrideTaxZone'] = $overrideTaxZone;

        return $this;
    }

    /**
     * Gets owner
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getOwner()
    {
        return $this->container['owner'];
    }

    /**
     * Sets owner
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $owner owner
     *
     * @return $this
     */
    public function setOwner($owner)
    {
        $this->container['owner'] = $owner;

        return $this;
    }

    /**
     * Gets postPeriod
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPostPeriod()
    {
        return $this->container['postPeriod'];
    }

    /**
     * Sets postPeriod
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $postPeriod postPeriod
     *
     * @return $this
     */
    public function setPostPeriod($postPeriod)
    {
        $this->container['postPeriod'] = $postPeriod;

        return $this;
    }

    /**
     * Gets terms
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTerms()
    {
        return $this->container['terms'];
    }

    /**
     * Sets terms
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $terms terms
     *
     * @return $this
     */
    public function setTerms($terms)
    {
        $this->container['terms'] = $terms;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


