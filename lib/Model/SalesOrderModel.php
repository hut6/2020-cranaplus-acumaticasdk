<?php
/**
 * SalesOrderModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.22
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * SalesOrderModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SalesOrderModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SalesOrder';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'approved' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'baseCurrencyID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'billToAddress' => '\Hut6\CranaplusAcumaticaSdk\Model\AddressModel',
        'billToAddressOverride' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'billToAddressValidated' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'billToContact' => '\Hut6\CranaplusAcumaticaSdk\Model\DocContactModel',
        'billToContactOverride' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'cashAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'commissions' => '\Hut6\CranaplusAcumaticaSdk\Model\CommissionsModel',
        'controlTotal' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'creditHold' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'currencyID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'currencyRate' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'currencyRateTypeID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'customerID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'customerOrder' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'date' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'description' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'destinationWarehouseID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'details' => '\Hut6\CranaplusAcumaticaSdk\Model\SalesOrderDetailModel[]',
        'discountDetails' => '\Hut6\CranaplusAcumaticaSdk\Model\SalesOrdersDiscountDetailsModel[]',
        'effectiveDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'externalRef' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'financialSettings' => '\Hut6\CranaplusAcumaticaSdk\Model\FinancialSettingsModel',
        'hold' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'isTaxValid' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'lastModified' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'locationID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'newCard' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'orderedQty' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'orderNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'orderTotal' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'orderType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'paymentCardIdentifier' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'paymentMethod' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'paymentRef' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'payments' => '\Hut6\CranaplusAcumaticaSdk\Model\PaymentsModel[]',
        'preAuthorizationNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'preAuthorizedAmount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'preferredWarehouseID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'project' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'reciprocalRate' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'requestedOn' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'shipments' => '\Hut6\CranaplusAcumaticaSdk\Model\SalesOrderShipmentModel[]',
        'shippingSettings' => '\Hut6\CranaplusAcumaticaSdk\Model\ShippingSettingsModel',
        'shipToAddress' => '\Hut6\CranaplusAcumaticaSdk\Model\AddressModel',
        'shipToAddressOverride' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'shipToAddressValidated' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'shipToContact' => '\Hut6\CranaplusAcumaticaSdk\Model\DocContactModel',
        'shipToContactOverride' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'shipVia' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'status' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'taxDetails' => '\Hut6\CranaplusAcumaticaSdk\Model\TaxDetailModel[]',
        'taxTotal' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'totals' => '\Hut6\CranaplusAcumaticaSdk\Model\TotalsModel',
        'vATExemptTotal' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'vATTaxableTotal' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'approved' => null,
        'baseCurrencyID' => null,
        'billToAddress' => null,
        'billToAddressOverride' => null,
        'billToAddressValidated' => null,
        'billToContact' => null,
        'billToContactOverride' => null,
        'cashAccount' => null,
        'commissions' => null,
        'controlTotal' => null,
        'creditHold' => null,
        'currencyID' => null,
        'currencyRate' => null,
        'currencyRateTypeID' => null,
        'customerID' => null,
        'customerOrder' => null,
        'date' => null,
        'description' => null,
        'destinationWarehouseID' => null,
        'details' => null,
        'discountDetails' => null,
        'effectiveDate' => null,
        'externalRef' => null,
        'financialSettings' => null,
        'hold' => null,
        'isTaxValid' => null,
        'lastModified' => null,
        'locationID' => null,
        'newCard' => null,
        'orderedQty' => null,
        'orderNbr' => null,
        'orderTotal' => null,
        'orderType' => null,
        'paymentCardIdentifier' => null,
        'paymentMethod' => null,
        'paymentRef' => null,
        'payments' => null,
        'preAuthorizationNbr' => null,
        'preAuthorizedAmount' => null,
        'preferredWarehouseID' => null,
        'project' => null,
        'reciprocalRate' => null,
        'requestedOn' => null,
        'shipments' => null,
        'shippingSettings' => null,
        'shipToAddress' => null,
        'shipToAddressOverride' => null,
        'shipToAddressValidated' => null,
        'shipToContact' => null,
        'shipToContactOverride' => null,
        'shipVia' => null,
        'status' => null,
        'taxDetails' => null,
        'taxTotal' => null,
        'totals' => null,
        'vATExemptTotal' => null,
        'vATTaxableTotal' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'approved' => 'Approved',
        'baseCurrencyID' => 'BaseCurrencyID',
        'billToAddress' => 'BillToAddress',
        'billToAddressOverride' => 'BillToAddressOverride',
        'billToAddressValidated' => 'BillToAddressValidated',
        'billToContact' => 'BillToContact',
        'billToContactOverride' => 'BillToContactOverride',
        'cashAccount' => 'CashAccount',
        'commissions' => 'Commissions',
        'controlTotal' => 'ControlTotal',
        'creditHold' => 'CreditHold',
        'currencyID' => 'CurrencyID',
        'currencyRate' => 'CurrencyRate',
        'currencyRateTypeID' => 'CurrencyRateTypeID',
        'customerID' => 'CustomerID',
        'customerOrder' => 'CustomerOrder',
        'date' => 'Date',
        'description' => 'Description',
        'destinationWarehouseID' => 'DestinationWarehouseID',
        'details' => 'Details',
        'discountDetails' => 'DiscountDetails',
        'effectiveDate' => 'EffectiveDate',
        'externalRef' => 'ExternalRef',
        'financialSettings' => 'FinancialSettings',
        'hold' => 'Hold',
        'isTaxValid' => 'IsTaxValid',
        'lastModified' => 'LastModified',
        'locationID' => 'LocationID',
        'newCard' => 'NewCard',
        'orderedQty' => 'OrderedQty',
        'orderNbr' => 'OrderNbr',
        'orderTotal' => 'OrderTotal',
        'orderType' => 'OrderType',
        'paymentCardIdentifier' => 'PaymentCardIdentifier',
        'paymentMethod' => 'PaymentMethod',
        'paymentRef' => 'PaymentRef',
        'payments' => 'Payments',
        'preAuthorizationNbr' => 'PreAuthorizationNbr',
        'preAuthorizedAmount' => 'PreAuthorizedAmount',
        'preferredWarehouseID' => 'PreferredWarehouseID',
        'project' => 'Project',
        'reciprocalRate' => 'ReciprocalRate',
        'requestedOn' => 'RequestedOn',
        'shipments' => 'Shipments',
        'shippingSettings' => 'ShippingSettings',
        'shipToAddress' => 'ShipToAddress',
        'shipToAddressOverride' => 'ShipToAddressOverride',
        'shipToAddressValidated' => 'ShipToAddressValidated',
        'shipToContact' => 'ShipToContact',
        'shipToContactOverride' => 'ShipToContactOverride',
        'shipVia' => 'ShipVia',
        'status' => 'Status',
        'taxDetails' => 'TaxDetails',
        'taxTotal' => 'TaxTotal',
        'totals' => 'Totals',
        'vATExemptTotal' => 'VATExemptTotal',
        'vATTaxableTotal' => 'VATTaxableTotal'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'approved' => 'setApproved',
        'baseCurrencyID' => 'setBaseCurrencyID',
        'billToAddress' => 'setBillToAddress',
        'billToAddressOverride' => 'setBillToAddressOverride',
        'billToAddressValidated' => 'setBillToAddressValidated',
        'billToContact' => 'setBillToContact',
        'billToContactOverride' => 'setBillToContactOverride',
        'cashAccount' => 'setCashAccount',
        'commissions' => 'setCommissions',
        'controlTotal' => 'setControlTotal',
        'creditHold' => 'setCreditHold',
        'currencyID' => 'setCurrencyID',
        'currencyRate' => 'setCurrencyRate',
        'currencyRateTypeID' => 'setCurrencyRateTypeID',
        'customerID' => 'setCustomerID',
        'customerOrder' => 'setCustomerOrder',
        'date' => 'setDate',
        'description' => 'setDescription',
        'destinationWarehouseID' => 'setDestinationWarehouseID',
        'details' => 'setDetails',
        'discountDetails' => 'setDiscountDetails',
        'effectiveDate' => 'setEffectiveDate',
        'externalRef' => 'setExternalRef',
        'financialSettings' => 'setFinancialSettings',
        'hold' => 'setHold',
        'isTaxValid' => 'setIsTaxValid',
        'lastModified' => 'setLastModified',
        'locationID' => 'setLocationID',
        'newCard' => 'setNewCard',
        'orderedQty' => 'setOrderedQty',
        'orderNbr' => 'setOrderNbr',
        'orderTotal' => 'setOrderTotal',
        'orderType' => 'setOrderType',
        'paymentCardIdentifier' => 'setPaymentCardIdentifier',
        'paymentMethod' => 'setPaymentMethod',
        'paymentRef' => 'setPaymentRef',
        'payments' => 'setPayments',
        'preAuthorizationNbr' => 'setPreAuthorizationNbr',
        'preAuthorizedAmount' => 'setPreAuthorizedAmount',
        'preferredWarehouseID' => 'setPreferredWarehouseID',
        'project' => 'setProject',
        'reciprocalRate' => 'setReciprocalRate',
        'requestedOn' => 'setRequestedOn',
        'shipments' => 'setShipments',
        'shippingSettings' => 'setShippingSettings',
        'shipToAddress' => 'setShipToAddress',
        'shipToAddressOverride' => 'setShipToAddressOverride',
        'shipToAddressValidated' => 'setShipToAddressValidated',
        'shipToContact' => 'setShipToContact',
        'shipToContactOverride' => 'setShipToContactOverride',
        'shipVia' => 'setShipVia',
        'status' => 'setStatus',
        'taxDetails' => 'setTaxDetails',
        'taxTotal' => 'setTaxTotal',
        'totals' => 'setTotals',
        'vATExemptTotal' => 'setVATExemptTotal',
        'vATTaxableTotal' => 'setVATTaxableTotal'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'approved' => 'getApproved',
        'baseCurrencyID' => 'getBaseCurrencyID',
        'billToAddress' => 'getBillToAddress',
        'billToAddressOverride' => 'getBillToAddressOverride',
        'billToAddressValidated' => 'getBillToAddressValidated',
        'billToContact' => 'getBillToContact',
        'billToContactOverride' => 'getBillToContactOverride',
        'cashAccount' => 'getCashAccount',
        'commissions' => 'getCommissions',
        'controlTotal' => 'getControlTotal',
        'creditHold' => 'getCreditHold',
        'currencyID' => 'getCurrencyID',
        'currencyRate' => 'getCurrencyRate',
        'currencyRateTypeID' => 'getCurrencyRateTypeID',
        'customerID' => 'getCustomerID',
        'customerOrder' => 'getCustomerOrder',
        'date' => 'getDate',
        'description' => 'getDescription',
        'destinationWarehouseID' => 'getDestinationWarehouseID',
        'details' => 'getDetails',
        'discountDetails' => 'getDiscountDetails',
        'effectiveDate' => 'getEffectiveDate',
        'externalRef' => 'getExternalRef',
        'financialSettings' => 'getFinancialSettings',
        'hold' => 'getHold',
        'isTaxValid' => 'getIsTaxValid',
        'lastModified' => 'getLastModified',
        'locationID' => 'getLocationID',
        'newCard' => 'getNewCard',
        'orderedQty' => 'getOrderedQty',
        'orderNbr' => 'getOrderNbr',
        'orderTotal' => 'getOrderTotal',
        'orderType' => 'getOrderType',
        'paymentCardIdentifier' => 'getPaymentCardIdentifier',
        'paymentMethod' => 'getPaymentMethod',
        'paymentRef' => 'getPaymentRef',
        'payments' => 'getPayments',
        'preAuthorizationNbr' => 'getPreAuthorizationNbr',
        'preAuthorizedAmount' => 'getPreAuthorizedAmount',
        'preferredWarehouseID' => 'getPreferredWarehouseID',
        'project' => 'getProject',
        'reciprocalRate' => 'getReciprocalRate',
        'requestedOn' => 'getRequestedOn',
        'shipments' => 'getShipments',
        'shippingSettings' => 'getShippingSettings',
        'shipToAddress' => 'getShipToAddress',
        'shipToAddressOverride' => 'getShipToAddressOverride',
        'shipToAddressValidated' => 'getShipToAddressValidated',
        'shipToContact' => 'getShipToContact',
        'shipToContactOverride' => 'getShipToContactOverride',
        'shipVia' => 'getShipVia',
        'status' => 'getStatus',
        'taxDetails' => 'getTaxDetails',
        'taxTotal' => 'getTaxTotal',
        'totals' => 'getTotals',
        'vATExemptTotal' => 'getVATExemptTotal',
        'vATTaxableTotal' => 'getVATTaxableTotal'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['approved'] = isset($data['approved']) ? $data['approved'] : null;
        $this->container['baseCurrencyID'] = isset($data['baseCurrencyID']) ? $data['baseCurrencyID'] : null;
        $this->container['billToAddress'] = isset($data['billToAddress']) ? $data['billToAddress'] : null;
        $this->container['billToAddressOverride'] = isset($data['billToAddressOverride']) ? $data['billToAddressOverride'] : null;
        $this->container['billToAddressValidated'] = isset($data['billToAddressValidated']) ? $data['billToAddressValidated'] : null;
        $this->container['billToContact'] = isset($data['billToContact']) ? $data['billToContact'] : null;
        $this->container['billToContactOverride'] = isset($data['billToContactOverride']) ? $data['billToContactOverride'] : null;
        $this->container['cashAccount'] = isset($data['cashAccount']) ? $data['cashAccount'] : null;
        $this->container['commissions'] = isset($data['commissions']) ? $data['commissions'] : null;
        $this->container['controlTotal'] = isset($data['controlTotal']) ? $data['controlTotal'] : null;
        $this->container['creditHold'] = isset($data['creditHold']) ? $data['creditHold'] : null;
        $this->container['currencyID'] = isset($data['currencyID']) ? $data['currencyID'] : null;
        $this->container['currencyRate'] = isset($data['currencyRate']) ? $data['currencyRate'] : null;
        $this->container['currencyRateTypeID'] = isset($data['currencyRateTypeID']) ? $data['currencyRateTypeID'] : null;
        $this->container['customerID'] = isset($data['customerID']) ? $data['customerID'] : null;
        $this->container['customerOrder'] = isset($data['customerOrder']) ? $data['customerOrder'] : null;
        $this->container['date'] = isset($data['date']) ? $data['date'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['destinationWarehouseID'] = isset($data['destinationWarehouseID']) ? $data['destinationWarehouseID'] : null;
        $this->container['details'] = isset($data['details']) ? $data['details'] : null;
        $this->container['discountDetails'] = isset($data['discountDetails']) ? $data['discountDetails'] : null;
        $this->container['effectiveDate'] = isset($data['effectiveDate']) ? $data['effectiveDate'] : null;
        $this->container['externalRef'] = isset($data['externalRef']) ? $data['externalRef'] : null;
        $this->container['financialSettings'] = isset($data['financialSettings']) ? $data['financialSettings'] : null;
        $this->container['hold'] = isset($data['hold']) ? $data['hold'] : null;
        $this->container['isTaxValid'] = isset($data['isTaxValid']) ? $data['isTaxValid'] : null;
        $this->container['lastModified'] = isset($data['lastModified']) ? $data['lastModified'] : null;
        $this->container['locationID'] = isset($data['locationID']) ? $data['locationID'] : null;
        $this->container['newCard'] = isset($data['newCard']) ? $data['newCard'] : null;
        $this->container['orderedQty'] = isset($data['orderedQty']) ? $data['orderedQty'] : null;
        $this->container['orderNbr'] = isset($data['orderNbr']) ? $data['orderNbr'] : null;
        $this->container['orderTotal'] = isset($data['orderTotal']) ? $data['orderTotal'] : null;
        $this->container['orderType'] = isset($data['orderType']) ? $data['orderType'] : null;
        $this->container['paymentCardIdentifier'] = isset($data['paymentCardIdentifier']) ? $data['paymentCardIdentifier'] : null;
        $this->container['paymentMethod'] = isset($data['paymentMethod']) ? $data['paymentMethod'] : null;
        $this->container['paymentRef'] = isset($data['paymentRef']) ? $data['paymentRef'] : null;
        $this->container['payments'] = isset($data['payments']) ? $data['payments'] : null;
        $this->container['preAuthorizationNbr'] = isset($data['preAuthorizationNbr']) ? $data['preAuthorizationNbr'] : null;
        $this->container['preAuthorizedAmount'] = isset($data['preAuthorizedAmount']) ? $data['preAuthorizedAmount'] : null;
        $this->container['preferredWarehouseID'] = isset($data['preferredWarehouseID']) ? $data['preferredWarehouseID'] : null;
        $this->container['project'] = isset($data['project']) ? $data['project'] : null;
        $this->container['reciprocalRate'] = isset($data['reciprocalRate']) ? $data['reciprocalRate'] : null;
        $this->container['requestedOn'] = isset($data['requestedOn']) ? $data['requestedOn'] : null;
        $this->container['shipments'] = isset($data['shipments']) ? $data['shipments'] : null;
        $this->container['shippingSettings'] = isset($data['shippingSettings']) ? $data['shippingSettings'] : null;
        $this->container['shipToAddress'] = isset($data['shipToAddress']) ? $data['shipToAddress'] : null;
        $this->container['shipToAddressOverride'] = isset($data['shipToAddressOverride']) ? $data['shipToAddressOverride'] : null;
        $this->container['shipToAddressValidated'] = isset($data['shipToAddressValidated']) ? $data['shipToAddressValidated'] : null;
        $this->container['shipToContact'] = isset($data['shipToContact']) ? $data['shipToContact'] : null;
        $this->container['shipToContactOverride'] = isset($data['shipToContactOverride']) ? $data['shipToContactOverride'] : null;
        $this->container['shipVia'] = isset($data['shipVia']) ? $data['shipVia'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['taxDetails'] = isset($data['taxDetails']) ? $data['taxDetails'] : null;
        $this->container['taxTotal'] = isset($data['taxTotal']) ? $data['taxTotal'] : null;
        $this->container['totals'] = isset($data['totals']) ? $data['totals'] : null;
        $this->container['vATExemptTotal'] = isset($data['vATExemptTotal']) ? $data['vATExemptTotal'] : null;
        $this->container['vATTaxableTotal'] = isset($data['vATTaxableTotal']) ? $data['vATTaxableTotal'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets approved
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getApproved()
    {
        return $this->container['approved'];
    }

    /**
     * Sets approved
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $approved approved
     *
     * @return $this
     */
    public function setApproved($approved)
    {
        $this->container['approved'] = $approved;

        return $this;
    }

    /**
     * Gets baseCurrencyID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getBaseCurrencyID()
    {
        return $this->container['baseCurrencyID'];
    }

    /**
     * Sets baseCurrencyID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $baseCurrencyID baseCurrencyID
     *
     * @return $this
     */
    public function setBaseCurrencyID($baseCurrencyID)
    {
        $this->container['baseCurrencyID'] = $baseCurrencyID;

        return $this;
    }

    /**
     * Gets billToAddress
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\AddressModel
     */
    public function getBillToAddress()
    {
        return $this->container['billToAddress'];
    }

    /**
     * Sets billToAddress
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\AddressModel $billToAddress billToAddress
     *
     * @return $this
     */
    public function setBillToAddress($billToAddress)
    {
        $this->container['billToAddress'] = $billToAddress;

        return $this;
    }

    /**
     * Gets billToAddressOverride
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getBillToAddressOverride()
    {
        return $this->container['billToAddressOverride'];
    }

    /**
     * Sets billToAddressOverride
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $billToAddressOverride billToAddressOverride
     *
     * @return $this
     */
    public function setBillToAddressOverride($billToAddressOverride)
    {
        $this->container['billToAddressOverride'] = $billToAddressOverride;

        return $this;
    }

    /**
     * Gets billToAddressValidated
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getBillToAddressValidated()
    {
        return $this->container['billToAddressValidated'];
    }

    /**
     * Sets billToAddressValidated
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $billToAddressValidated billToAddressValidated
     *
     * @return $this
     */
    public function setBillToAddressValidated($billToAddressValidated)
    {
        $this->container['billToAddressValidated'] = $billToAddressValidated;

        return $this;
    }

    /**
     * Gets billToContact
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DocContactModel
     */
    public function getBillToContact()
    {
        return $this->container['billToContact'];
    }

    /**
     * Sets billToContact
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DocContactModel $billToContact billToContact
     *
     * @return $this
     */
    public function setBillToContact($billToContact)
    {
        $this->container['billToContact'] = $billToContact;

        return $this;
    }

    /**
     * Gets billToContactOverride
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getBillToContactOverride()
    {
        return $this->container['billToContactOverride'];
    }

    /**
     * Sets billToContactOverride
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $billToContactOverride billToContactOverride
     *
     * @return $this
     */
    public function setBillToContactOverride($billToContactOverride)
    {
        $this->container['billToContactOverride'] = $billToContactOverride;

        return $this;
    }

    /**
     * Gets cashAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCashAccount()
    {
        return $this->container['cashAccount'];
    }

    /**
     * Sets cashAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $cashAccount cashAccount
     *
     * @return $this
     */
    public function setCashAccount($cashAccount)
    {
        $this->container['cashAccount'] = $cashAccount;

        return $this;
    }

    /**
     * Gets commissions
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\CommissionsModel
     */
    public function getCommissions()
    {
        return $this->container['commissions'];
    }

    /**
     * Sets commissions
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\CommissionsModel $commissions commissions
     *
     * @return $this
     */
    public function setCommissions($commissions)
    {
        $this->container['commissions'] = $commissions;

        return $this;
    }

    /**
     * Gets controlTotal
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getControlTotal()
    {
        return $this->container['controlTotal'];
    }

    /**
     * Sets controlTotal
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $controlTotal controlTotal
     *
     * @return $this
     */
    public function setControlTotal($controlTotal)
    {
        $this->container['controlTotal'] = $controlTotal;

        return $this;
    }

    /**
     * Gets creditHold
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getCreditHold()
    {
        return $this->container['creditHold'];
    }

    /**
     * Sets creditHold
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $creditHold creditHold
     *
     * @return $this
     */
    public function setCreditHold($creditHold)
    {
        $this->container['creditHold'] = $creditHold;

        return $this;
    }

    /**
     * Gets currencyID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCurrencyID()
    {
        return $this->container['currencyID'];
    }

    /**
     * Sets currencyID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $currencyID currencyID
     *
     * @return $this
     */
    public function setCurrencyID($currencyID)
    {
        $this->container['currencyID'] = $currencyID;

        return $this;
    }

    /**
     * Gets currencyRate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getCurrencyRate()
    {
        return $this->container['currencyRate'];
    }

    /**
     * Sets currencyRate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $currencyRate currencyRate
     *
     * @return $this
     */
    public function setCurrencyRate($currencyRate)
    {
        $this->container['currencyRate'] = $currencyRate;

        return $this;
    }

    /**
     * Gets currencyRateTypeID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCurrencyRateTypeID()
    {
        return $this->container['currencyRateTypeID'];
    }

    /**
     * Sets currencyRateTypeID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $currencyRateTypeID currencyRateTypeID
     *
     * @return $this
     */
    public function setCurrencyRateTypeID($currencyRateTypeID)
    {
        $this->container['currencyRateTypeID'] = $currencyRateTypeID;

        return $this;
    }

    /**
     * Gets customerID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCustomerID()
    {
        return $this->container['customerID'];
    }

    /**
     * Sets customerID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $customerID customerID
     *
     * @return $this
     */
    public function setCustomerID($customerID)
    {
        $this->container['customerID'] = $customerID;

        return $this;
    }

    /**
     * Gets customerOrder
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCustomerOrder()
    {
        return $this->container['customerOrder'];
    }

    /**
     * Sets customerOrder
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $customerOrder customerOrder
     *
     * @return $this
     */
    public function setCustomerOrder($customerOrder)
    {
        $this->container['customerOrder'] = $customerOrder;

        return $this;
    }

    /**
     * Gets date
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getDate()
    {
        return $this->container['date'];
    }

    /**
     * Sets date
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $date date
     *
     * @return $this
     */
    public function setDate($date)
    {
        $this->container['date'] = $date;

        return $this;
    }

    /**
     * Gets description
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets destinationWarehouseID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDestinationWarehouseID()
    {
        return $this->container['destinationWarehouseID'];
    }

    /**
     * Sets destinationWarehouseID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $destinationWarehouseID destinationWarehouseID
     *
     * @return $this
     */
    public function setDestinationWarehouseID($destinationWarehouseID)
    {
        $this->container['destinationWarehouseID'] = $destinationWarehouseID;

        return $this;
    }

    /**
     * Gets details
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\SalesOrderDetailModel[]
     */
    public function getDetails()
    {
        return $this->container['details'];
    }

    /**
     * Sets details
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\SalesOrderDetailModel[] $details details
     *
     * @return $this
     */
    public function setDetails($details)
    {
        $this->container['details'] = $details;

        return $this;
    }

    /**
     * Gets discountDetails
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\SalesOrdersDiscountDetailsModel[]
     */
    public function getDiscountDetails()
    {
        return $this->container['discountDetails'];
    }

    /**
     * Sets discountDetails
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\SalesOrdersDiscountDetailsModel[] $discountDetails discountDetails
     *
     * @return $this
     */
    public function setDiscountDetails($discountDetails)
    {
        $this->container['discountDetails'] = $discountDetails;

        return $this;
    }

    /**
     * Gets effectiveDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getEffectiveDate()
    {
        return $this->container['effectiveDate'];
    }

    /**
     * Sets effectiveDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $effectiveDate effectiveDate
     *
     * @return $this
     */
    public function setEffectiveDate($effectiveDate)
    {
        $this->container['effectiveDate'] = $effectiveDate;

        return $this;
    }

    /**
     * Gets externalRef
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getExternalRef()
    {
        return $this->container['externalRef'];
    }

    /**
     * Sets externalRef
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $externalRef externalRef
     *
     * @return $this
     */
    public function setExternalRef($externalRef)
    {
        $this->container['externalRef'] = $externalRef;

        return $this;
    }

    /**
     * Gets financialSettings
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\FinancialSettingsModel
     */
    public function getFinancialSettings()
    {
        return $this->container['financialSettings'];
    }

    /**
     * Sets financialSettings
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\FinancialSettingsModel $financialSettings financialSettings
     *
     * @return $this
     */
    public function setFinancialSettings($financialSettings)
    {
        $this->container['financialSettings'] = $financialSettings;

        return $this;
    }

    /**
     * Gets hold
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getHold()
    {
        return $this->container['hold'];
    }

    /**
     * Sets hold
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $hold hold
     *
     * @return $this
     */
    public function setHold($hold)
    {
        $this->container['hold'] = $hold;

        return $this;
    }

    /**
     * Gets isTaxValid
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getIsTaxValid()
    {
        return $this->container['isTaxValid'];
    }

    /**
     * Sets isTaxValid
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $isTaxValid isTaxValid
     *
     * @return $this
     */
    public function setIsTaxValid($isTaxValid)
    {
        $this->container['isTaxValid'] = $isTaxValid;

        return $this;
    }

    /**
     * Gets lastModified
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getLastModified()
    {
        return $this->container['lastModified'];
    }

    /**
     * Sets lastModified
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $lastModified lastModified
     *
     * @return $this
     */
    public function setLastModified($lastModified)
    {
        $this->container['lastModified'] = $lastModified;

        return $this;
    }

    /**
     * Gets locationID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLocationID()
    {
        return $this->container['locationID'];
    }

    /**
     * Sets locationID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $locationID locationID
     *
     * @return $this
     */
    public function setLocationID($locationID)
    {
        $this->container['locationID'] = $locationID;

        return $this;
    }

    /**
     * Gets newCard
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getNewCard()
    {
        return $this->container['newCard'];
    }

    /**
     * Sets newCard
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $newCard newCard
     *
     * @return $this
     */
    public function setNewCard($newCard)
    {
        $this->container['newCard'] = $newCard;

        return $this;
    }

    /**
     * Gets orderedQty
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getOrderedQty()
    {
        return $this->container['orderedQty'];
    }

    /**
     * Sets orderedQty
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $orderedQty orderedQty
     *
     * @return $this
     */
    public function setOrderedQty($orderedQty)
    {
        $this->container['orderedQty'] = $orderedQty;

        return $this;
    }

    /**
     * Gets orderNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getOrderNbr()
    {
        return $this->container['orderNbr'];
    }

    /**
     * Sets orderNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $orderNbr orderNbr
     *
     * @return $this
     */
    public function setOrderNbr($orderNbr)
    {
        $this->container['orderNbr'] = $orderNbr;

        return $this;
    }

    /**
     * Gets orderTotal
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getOrderTotal()
    {
        return $this->container['orderTotal'];
    }

    /**
     * Sets orderTotal
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $orderTotal orderTotal
     *
     * @return $this
     */
    public function setOrderTotal($orderTotal)
    {
        $this->container['orderTotal'] = $orderTotal;

        return $this;
    }

    /**
     * Gets orderType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getOrderType()
    {
        return $this->container['orderType'];
    }

    /**
     * Sets orderType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $orderType orderType
     *
     * @return $this
     */
    public function setOrderType($orderType)
    {
        $this->container['orderType'] = $orderType;

        return $this;
    }

    /**
     * Gets paymentCardIdentifier
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPaymentCardIdentifier()
    {
        return $this->container['paymentCardIdentifier'];
    }

    /**
     * Sets paymentCardIdentifier
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $paymentCardIdentifier paymentCardIdentifier
     *
     * @return $this
     */
    public function setPaymentCardIdentifier($paymentCardIdentifier)
    {
        $this->container['paymentCardIdentifier'] = $paymentCardIdentifier;

        return $this;
    }

    /**
     * Gets paymentMethod
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPaymentMethod()
    {
        return $this->container['paymentMethod'];
    }

    /**
     * Sets paymentMethod
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $paymentMethod paymentMethod
     *
     * @return $this
     */
    public function setPaymentMethod($paymentMethod)
    {
        $this->container['paymentMethod'] = $paymentMethod;

        return $this;
    }

    /**
     * Gets paymentRef
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPaymentRef()
    {
        return $this->container['paymentRef'];
    }

    /**
     * Sets paymentRef
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $paymentRef paymentRef
     *
     * @return $this
     */
    public function setPaymentRef($paymentRef)
    {
        $this->container['paymentRef'] = $paymentRef;

        return $this;
    }

    /**
     * Gets payments
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\PaymentsModel[]
     */
    public function getPayments()
    {
        return $this->container['payments'];
    }

    /**
     * Sets payments
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\PaymentsModel[] $payments payments
     *
     * @return $this
     */
    public function setPayments($payments)
    {
        $this->container['payments'] = $payments;

        return $this;
    }

    /**
     * Gets preAuthorizationNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPreAuthorizationNbr()
    {
        return $this->container['preAuthorizationNbr'];
    }

    /**
     * Sets preAuthorizationNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $preAuthorizationNbr preAuthorizationNbr
     *
     * @return $this
     */
    public function setPreAuthorizationNbr($preAuthorizationNbr)
    {
        $this->container['preAuthorizationNbr'] = $preAuthorizationNbr;

        return $this;
    }

    /**
     * Gets preAuthorizedAmount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getPreAuthorizedAmount()
    {
        return $this->container['preAuthorizedAmount'];
    }

    /**
     * Sets preAuthorizedAmount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $preAuthorizedAmount preAuthorizedAmount
     *
     * @return $this
     */
    public function setPreAuthorizedAmount($preAuthorizedAmount)
    {
        $this->container['preAuthorizedAmount'] = $preAuthorizedAmount;

        return $this;
    }

    /**
     * Gets preferredWarehouseID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPreferredWarehouseID()
    {
        return $this->container['preferredWarehouseID'];
    }

    /**
     * Sets preferredWarehouseID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $preferredWarehouseID preferredWarehouseID
     *
     * @return $this
     */
    public function setPreferredWarehouseID($preferredWarehouseID)
    {
        $this->container['preferredWarehouseID'] = $preferredWarehouseID;

        return $this;
    }

    /**
     * Gets project
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getProject()
    {
        return $this->container['project'];
    }

    /**
     * Sets project
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $project project
     *
     * @return $this
     */
    public function setProject($project)
    {
        $this->container['project'] = $project;

        return $this;
    }

    /**
     * Gets reciprocalRate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getReciprocalRate()
    {
        return $this->container['reciprocalRate'];
    }

    /**
     * Sets reciprocalRate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $reciprocalRate reciprocalRate
     *
     * @return $this
     */
    public function setReciprocalRate($reciprocalRate)
    {
        $this->container['reciprocalRate'] = $reciprocalRate;

        return $this;
    }

    /**
     * Gets requestedOn
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getRequestedOn()
    {
        return $this->container['requestedOn'];
    }

    /**
     * Sets requestedOn
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $requestedOn requestedOn
     *
     * @return $this
     */
    public function setRequestedOn($requestedOn)
    {
        $this->container['requestedOn'] = $requestedOn;

        return $this;
    }

    /**
     * Gets shipments
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\SalesOrderShipmentModel[]
     */
    public function getShipments()
    {
        return $this->container['shipments'];
    }

    /**
     * Sets shipments
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\SalesOrderShipmentModel[] $shipments shipments
     *
     * @return $this
     */
    public function setShipments($shipments)
    {
        $this->container['shipments'] = $shipments;

        return $this;
    }

    /**
     * Gets shippingSettings
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\ShippingSettingsModel
     */
    public function getShippingSettings()
    {
        return $this->container['shippingSettings'];
    }

    /**
     * Sets shippingSettings
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\ShippingSettingsModel $shippingSettings shippingSettings
     *
     * @return $this
     */
    public function setShippingSettings($shippingSettings)
    {
        $this->container['shippingSettings'] = $shippingSettings;

        return $this;
    }

    /**
     * Gets shipToAddress
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\AddressModel
     */
    public function getShipToAddress()
    {
        return $this->container['shipToAddress'];
    }

    /**
     * Sets shipToAddress
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\AddressModel $shipToAddress shipToAddress
     *
     * @return $this
     */
    public function setShipToAddress($shipToAddress)
    {
        $this->container['shipToAddress'] = $shipToAddress;

        return $this;
    }

    /**
     * Gets shipToAddressOverride
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getShipToAddressOverride()
    {
        return $this->container['shipToAddressOverride'];
    }

    /**
     * Sets shipToAddressOverride
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $shipToAddressOverride shipToAddressOverride
     *
     * @return $this
     */
    public function setShipToAddressOverride($shipToAddressOverride)
    {
        $this->container['shipToAddressOverride'] = $shipToAddressOverride;

        return $this;
    }

    /**
     * Gets shipToAddressValidated
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getShipToAddressValidated()
    {
        return $this->container['shipToAddressValidated'];
    }

    /**
     * Sets shipToAddressValidated
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $shipToAddressValidated shipToAddressValidated
     *
     * @return $this
     */
    public function setShipToAddressValidated($shipToAddressValidated)
    {
        $this->container['shipToAddressValidated'] = $shipToAddressValidated;

        return $this;
    }

    /**
     * Gets shipToContact
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DocContactModel
     */
    public function getShipToContact()
    {
        return $this->container['shipToContact'];
    }

    /**
     * Sets shipToContact
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DocContactModel $shipToContact shipToContact
     *
     * @return $this
     */
    public function setShipToContact($shipToContact)
    {
        $this->container['shipToContact'] = $shipToContact;

        return $this;
    }

    /**
     * Gets shipToContactOverride
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getShipToContactOverride()
    {
        return $this->container['shipToContactOverride'];
    }

    /**
     * Sets shipToContactOverride
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $shipToContactOverride shipToContactOverride
     *
     * @return $this
     */
    public function setShipToContactOverride($shipToContactOverride)
    {
        $this->container['shipToContactOverride'] = $shipToContactOverride;

        return $this;
    }

    /**
     * Gets shipVia
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getShipVia()
    {
        return $this->container['shipVia'];
    }

    /**
     * Sets shipVia
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $shipVia shipVia
     *
     * @return $this
     */
    public function setShipVia($shipVia)
    {
        $this->container['shipVia'] = $shipVia;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets taxDetails
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\TaxDetailModel[]
     */
    public function getTaxDetails()
    {
        return $this->container['taxDetails'];
    }

    /**
     * Sets taxDetails
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\TaxDetailModel[] $taxDetails taxDetails
     *
     * @return $this
     */
    public function setTaxDetails($taxDetails)
    {
        $this->container['taxDetails'] = $taxDetails;

        return $this;
    }

    /**
     * Gets taxTotal
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getTaxTotal()
    {
        return $this->container['taxTotal'];
    }

    /**
     * Sets taxTotal
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $taxTotal taxTotal
     *
     * @return $this
     */
    public function setTaxTotal($taxTotal)
    {
        $this->container['taxTotal'] = $taxTotal;

        return $this;
    }

    /**
     * Gets totals
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\TotalsModel
     */
    public function getTotals()
    {
        return $this->container['totals'];
    }

    /**
     * Sets totals
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\TotalsModel $totals totals
     *
     * @return $this
     */
    public function setTotals($totals)
    {
        $this->container['totals'] = $totals;

        return $this;
    }

    /**
     * Gets vATExemptTotal
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getVATExemptTotal()
    {
        return $this->container['vATExemptTotal'];
    }

    /**
     * Sets vATExemptTotal
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $vATExemptTotal vATExemptTotal
     *
     * @return $this
     */
    public function setVATExemptTotal($vATExemptTotal)
    {
        $this->container['vATExemptTotal'] = $vATExemptTotal;

        return $this;
    }

    /**
     * Gets vATTaxableTotal
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getVATTaxableTotal()
    {
        return $this->container['vATTaxableTotal'];
    }

    /**
     * Sets vATTaxableTotal
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $vATTaxableTotal vATTaxableTotal
     *
     * @return $this
     */
    public function setVATTaxableTotal($vATTaxableTotal)
    {
        $this->container['vATTaxableTotal'] = $vATTaxableTotal;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


