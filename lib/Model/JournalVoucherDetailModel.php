<?php
/**
 * JournalVoucherDetailModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * JournalVoucherDetailModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class JournalVoucherDetailModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'JournalVoucherDetail';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'aPDocumentsToApply' => '\Hut6\CranaplusAcumaticaSdk\Model\JournalVoucherDetailAPDocumentToApplyModel[]',
        'aRDocumentsToApply' => '\Hut6\CranaplusAcumaticaSdk\Model\JournalVoucherDetailARDocumentToApplyModel[]',
        'batchModule' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'batchNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'cardAccountNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\IntValueModel',
        'cardAccountNbrCardAccountNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'cashDiscount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'cashDiscountDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'creditAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'creditSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'debitAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'debitSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'docCreated' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'docTotal' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'dueDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'entryTypeID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'externalRef' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'groupTransactionID' => '\Hut6\CranaplusAcumaticaSdk\Model\IntValueModel',
        'includedTaxAmount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'lineNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\IntValueModel',
        'location' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'paymentMethod' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'project' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'projectTask' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'referenceNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'released' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'split' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'subtotalAmount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'taxAmount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'taxCategory' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'taxZone' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'terms' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'totalAmount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'transactionCode' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'transactionDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'transactionDescription' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'vendorOrCustomer' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'aPDocumentsToApply' => null,
        'aRDocumentsToApply' => null,
        'batchModule' => null,
        'batchNbr' => null,
        'cardAccountNbr' => null,
        'cardAccountNbrCardAccountNbr' => null,
        'cashDiscount' => null,
        'cashDiscountDate' => null,
        'creditAccount' => null,
        'creditSubaccount' => null,
        'debitAccount' => null,
        'debitSubaccount' => null,
        'docCreated' => null,
        'docTotal' => null,
        'dueDate' => null,
        'entryTypeID' => null,
        'externalRef' => null,
        'groupTransactionID' => null,
        'includedTaxAmount' => null,
        'lineNbr' => null,
        'location' => null,
        'paymentMethod' => null,
        'project' => null,
        'projectTask' => null,
        'referenceNbr' => null,
        'released' => null,
        'split' => null,
        'subtotalAmount' => null,
        'taxAmount' => null,
        'taxCategory' => null,
        'taxZone' => null,
        'terms' => null,
        'totalAmount' => null,
        'transactionCode' => null,
        'transactionDate' => null,
        'transactionDescription' => null,
        'vendorOrCustomer' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'aPDocumentsToApply' => 'APDocumentsToApply',
        'aRDocumentsToApply' => 'ARDocumentsToApply',
        'batchModule' => 'BatchModule',
        'batchNbr' => 'BatchNbr',
        'cardAccountNbr' => 'CardAccountNbr',
        'cardAccountNbrCardAccountNbr' => 'CardAccountNbrCardAccountNbr',
        'cashDiscount' => 'CashDiscount',
        'cashDiscountDate' => 'CashDiscountDate',
        'creditAccount' => 'CreditAccount',
        'creditSubaccount' => 'CreditSubaccount',
        'debitAccount' => 'DebitAccount',
        'debitSubaccount' => 'DebitSubaccount',
        'docCreated' => 'DocCreated',
        'docTotal' => 'DocTotal',
        'dueDate' => 'DueDate',
        'entryTypeID' => 'EntryTypeID',
        'externalRef' => 'ExternalRef',
        'groupTransactionID' => 'GroupTransactionID',
        'includedTaxAmount' => 'IncludedTaxAmount',
        'lineNbr' => 'LineNbr',
        'location' => 'Location',
        'paymentMethod' => 'PaymentMethod',
        'project' => 'Project',
        'projectTask' => 'ProjectTask',
        'referenceNbr' => 'ReferenceNbr',
        'released' => 'Released',
        'split' => 'Split',
        'subtotalAmount' => 'SubtotalAmount',
        'taxAmount' => 'TaxAmount',
        'taxCategory' => 'TaxCategory',
        'taxZone' => 'TaxZone',
        'terms' => 'Terms',
        'totalAmount' => 'TotalAmount',
        'transactionCode' => 'TransactionCode',
        'transactionDate' => 'TransactionDate',
        'transactionDescription' => 'TransactionDescription',
        'vendorOrCustomer' => 'VendorOrCustomer'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'aPDocumentsToApply' => 'setAPDocumentsToApply',
        'aRDocumentsToApply' => 'setARDocumentsToApply',
        'batchModule' => 'setBatchModule',
        'batchNbr' => 'setBatchNbr',
        'cardAccountNbr' => 'setCardAccountNbr',
        'cardAccountNbrCardAccountNbr' => 'setCardAccountNbrCardAccountNbr',
        'cashDiscount' => 'setCashDiscount',
        'cashDiscountDate' => 'setCashDiscountDate',
        'creditAccount' => 'setCreditAccount',
        'creditSubaccount' => 'setCreditSubaccount',
        'debitAccount' => 'setDebitAccount',
        'debitSubaccount' => 'setDebitSubaccount',
        'docCreated' => 'setDocCreated',
        'docTotal' => 'setDocTotal',
        'dueDate' => 'setDueDate',
        'entryTypeID' => 'setEntryTypeID',
        'externalRef' => 'setExternalRef',
        'groupTransactionID' => 'setGroupTransactionID',
        'includedTaxAmount' => 'setIncludedTaxAmount',
        'lineNbr' => 'setLineNbr',
        'location' => 'setLocation',
        'paymentMethod' => 'setPaymentMethod',
        'project' => 'setProject',
        'projectTask' => 'setProjectTask',
        'referenceNbr' => 'setReferenceNbr',
        'released' => 'setReleased',
        'split' => 'setSplit',
        'subtotalAmount' => 'setSubtotalAmount',
        'taxAmount' => 'setTaxAmount',
        'taxCategory' => 'setTaxCategory',
        'taxZone' => 'setTaxZone',
        'terms' => 'setTerms',
        'totalAmount' => 'setTotalAmount',
        'transactionCode' => 'setTransactionCode',
        'transactionDate' => 'setTransactionDate',
        'transactionDescription' => 'setTransactionDescription',
        'vendorOrCustomer' => 'setVendorOrCustomer'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'aPDocumentsToApply' => 'getAPDocumentsToApply',
        'aRDocumentsToApply' => 'getARDocumentsToApply',
        'batchModule' => 'getBatchModule',
        'batchNbr' => 'getBatchNbr',
        'cardAccountNbr' => 'getCardAccountNbr',
        'cardAccountNbrCardAccountNbr' => 'getCardAccountNbrCardAccountNbr',
        'cashDiscount' => 'getCashDiscount',
        'cashDiscountDate' => 'getCashDiscountDate',
        'creditAccount' => 'getCreditAccount',
        'creditSubaccount' => 'getCreditSubaccount',
        'debitAccount' => 'getDebitAccount',
        'debitSubaccount' => 'getDebitSubaccount',
        'docCreated' => 'getDocCreated',
        'docTotal' => 'getDocTotal',
        'dueDate' => 'getDueDate',
        'entryTypeID' => 'getEntryTypeID',
        'externalRef' => 'getExternalRef',
        'groupTransactionID' => 'getGroupTransactionID',
        'includedTaxAmount' => 'getIncludedTaxAmount',
        'lineNbr' => 'getLineNbr',
        'location' => 'getLocation',
        'paymentMethod' => 'getPaymentMethod',
        'project' => 'getProject',
        'projectTask' => 'getProjectTask',
        'referenceNbr' => 'getReferenceNbr',
        'released' => 'getReleased',
        'split' => 'getSplit',
        'subtotalAmount' => 'getSubtotalAmount',
        'taxAmount' => 'getTaxAmount',
        'taxCategory' => 'getTaxCategory',
        'taxZone' => 'getTaxZone',
        'terms' => 'getTerms',
        'totalAmount' => 'getTotalAmount',
        'transactionCode' => 'getTransactionCode',
        'transactionDate' => 'getTransactionDate',
        'transactionDescription' => 'getTransactionDescription',
        'vendorOrCustomer' => 'getVendorOrCustomer'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['aPDocumentsToApply'] = isset($data['aPDocumentsToApply']) ? $data['aPDocumentsToApply'] : null;
        $this->container['aRDocumentsToApply'] = isset($data['aRDocumentsToApply']) ? $data['aRDocumentsToApply'] : null;
        $this->container['batchModule'] = isset($data['batchModule']) ? $data['batchModule'] : null;
        $this->container['batchNbr'] = isset($data['batchNbr']) ? $data['batchNbr'] : null;
        $this->container['cardAccountNbr'] = isset($data['cardAccountNbr']) ? $data['cardAccountNbr'] : null;
        $this->container['cardAccountNbrCardAccountNbr'] = isset($data['cardAccountNbrCardAccountNbr']) ? $data['cardAccountNbrCardAccountNbr'] : null;
        $this->container['cashDiscount'] = isset($data['cashDiscount']) ? $data['cashDiscount'] : null;
        $this->container['cashDiscountDate'] = isset($data['cashDiscountDate']) ? $data['cashDiscountDate'] : null;
        $this->container['creditAccount'] = isset($data['creditAccount']) ? $data['creditAccount'] : null;
        $this->container['creditSubaccount'] = isset($data['creditSubaccount']) ? $data['creditSubaccount'] : null;
        $this->container['debitAccount'] = isset($data['debitAccount']) ? $data['debitAccount'] : null;
        $this->container['debitSubaccount'] = isset($data['debitSubaccount']) ? $data['debitSubaccount'] : null;
        $this->container['docCreated'] = isset($data['docCreated']) ? $data['docCreated'] : null;
        $this->container['docTotal'] = isset($data['docTotal']) ? $data['docTotal'] : null;
        $this->container['dueDate'] = isset($data['dueDate']) ? $data['dueDate'] : null;
        $this->container['entryTypeID'] = isset($data['entryTypeID']) ? $data['entryTypeID'] : null;
        $this->container['externalRef'] = isset($data['externalRef']) ? $data['externalRef'] : null;
        $this->container['groupTransactionID'] = isset($data['groupTransactionID']) ? $data['groupTransactionID'] : null;
        $this->container['includedTaxAmount'] = isset($data['includedTaxAmount']) ? $data['includedTaxAmount'] : null;
        $this->container['lineNbr'] = isset($data['lineNbr']) ? $data['lineNbr'] : null;
        $this->container['location'] = isset($data['location']) ? $data['location'] : null;
        $this->container['paymentMethod'] = isset($data['paymentMethod']) ? $data['paymentMethod'] : null;
        $this->container['project'] = isset($data['project']) ? $data['project'] : null;
        $this->container['projectTask'] = isset($data['projectTask']) ? $data['projectTask'] : null;
        $this->container['referenceNbr'] = isset($data['referenceNbr']) ? $data['referenceNbr'] : null;
        $this->container['released'] = isset($data['released']) ? $data['released'] : null;
        $this->container['split'] = isset($data['split']) ? $data['split'] : null;
        $this->container['subtotalAmount'] = isset($data['subtotalAmount']) ? $data['subtotalAmount'] : null;
        $this->container['taxAmount'] = isset($data['taxAmount']) ? $data['taxAmount'] : null;
        $this->container['taxCategory'] = isset($data['taxCategory']) ? $data['taxCategory'] : null;
        $this->container['taxZone'] = isset($data['taxZone']) ? $data['taxZone'] : null;
        $this->container['terms'] = isset($data['terms']) ? $data['terms'] : null;
        $this->container['totalAmount'] = isset($data['totalAmount']) ? $data['totalAmount'] : null;
        $this->container['transactionCode'] = isset($data['transactionCode']) ? $data['transactionCode'] : null;
        $this->container['transactionDate'] = isset($data['transactionDate']) ? $data['transactionDate'] : null;
        $this->container['transactionDescription'] = isset($data['transactionDescription']) ? $data['transactionDescription'] : null;
        $this->container['vendorOrCustomer'] = isset($data['vendorOrCustomer']) ? $data['vendorOrCustomer'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets aPDocumentsToApply
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\JournalVoucherDetailAPDocumentToApplyModel[]
     */
    public function getAPDocumentsToApply()
    {
        return $this->container['aPDocumentsToApply'];
    }

    /**
     * Sets aPDocumentsToApply
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\JournalVoucherDetailAPDocumentToApplyModel[] $aPDocumentsToApply aPDocumentsToApply
     *
     * @return $this
     */
    public function setAPDocumentsToApply($aPDocumentsToApply)
    {
        $this->container['aPDocumentsToApply'] = $aPDocumentsToApply;

        return $this;
    }

    /**
     * Gets aRDocumentsToApply
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\JournalVoucherDetailARDocumentToApplyModel[]
     */
    public function getARDocumentsToApply()
    {
        return $this->container['aRDocumentsToApply'];
    }

    /**
     * Sets aRDocumentsToApply
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\JournalVoucherDetailARDocumentToApplyModel[] $aRDocumentsToApply aRDocumentsToApply
     *
     * @return $this
     */
    public function setARDocumentsToApply($aRDocumentsToApply)
    {
        $this->container['aRDocumentsToApply'] = $aRDocumentsToApply;

        return $this;
    }

    /**
     * Gets batchModule
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getBatchModule()
    {
        return $this->container['batchModule'];
    }

    /**
     * Sets batchModule
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $batchModule batchModule
     *
     * @return $this
     */
    public function setBatchModule($batchModule)
    {
        $this->container['batchModule'] = $batchModule;

        return $this;
    }

    /**
     * Gets batchNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getBatchNbr()
    {
        return $this->container['batchNbr'];
    }

    /**
     * Sets batchNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $batchNbr batchNbr
     *
     * @return $this
     */
    public function setBatchNbr($batchNbr)
    {
        $this->container['batchNbr'] = $batchNbr;

        return $this;
    }

    /**
     * Gets cardAccountNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel
     */
    public function getCardAccountNbr()
    {
        return $this->container['cardAccountNbr'];
    }

    /**
     * Sets cardAccountNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel $cardAccountNbr cardAccountNbr
     *
     * @return $this
     */
    public function setCardAccountNbr($cardAccountNbr)
    {
        $this->container['cardAccountNbr'] = $cardAccountNbr;

        return $this;
    }

    /**
     * Gets cardAccountNbrCardAccountNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCardAccountNbrCardAccountNbr()
    {
        return $this->container['cardAccountNbrCardAccountNbr'];
    }

    /**
     * Sets cardAccountNbrCardAccountNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $cardAccountNbrCardAccountNbr cardAccountNbrCardAccountNbr
     *
     * @return $this
     */
    public function setCardAccountNbrCardAccountNbr($cardAccountNbrCardAccountNbr)
    {
        $this->container['cardAccountNbrCardAccountNbr'] = $cardAccountNbrCardAccountNbr;

        return $this;
    }

    /**
     * Gets cashDiscount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getCashDiscount()
    {
        return $this->container['cashDiscount'];
    }

    /**
     * Sets cashDiscount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $cashDiscount cashDiscount
     *
     * @return $this
     */
    public function setCashDiscount($cashDiscount)
    {
        $this->container['cashDiscount'] = $cashDiscount;

        return $this;
    }

    /**
     * Gets cashDiscountDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getCashDiscountDate()
    {
        return $this->container['cashDiscountDate'];
    }

    /**
     * Sets cashDiscountDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $cashDiscountDate cashDiscountDate
     *
     * @return $this
     */
    public function setCashDiscountDate($cashDiscountDate)
    {
        $this->container['cashDiscountDate'] = $cashDiscountDate;

        return $this;
    }

    /**
     * Gets creditAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCreditAccount()
    {
        return $this->container['creditAccount'];
    }

    /**
     * Sets creditAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $creditAccount creditAccount
     *
     * @return $this
     */
    public function setCreditAccount($creditAccount)
    {
        $this->container['creditAccount'] = $creditAccount;

        return $this;
    }

    /**
     * Gets creditSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCreditSubaccount()
    {
        return $this->container['creditSubaccount'];
    }

    /**
     * Sets creditSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $creditSubaccount creditSubaccount
     *
     * @return $this
     */
    public function setCreditSubaccount($creditSubaccount)
    {
        $this->container['creditSubaccount'] = $creditSubaccount;

        return $this;
    }

    /**
     * Gets debitAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDebitAccount()
    {
        return $this->container['debitAccount'];
    }

    /**
     * Sets debitAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $debitAccount debitAccount
     *
     * @return $this
     */
    public function setDebitAccount($debitAccount)
    {
        $this->container['debitAccount'] = $debitAccount;

        return $this;
    }

    /**
     * Gets debitSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDebitSubaccount()
    {
        return $this->container['debitSubaccount'];
    }

    /**
     * Sets debitSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $debitSubaccount debitSubaccount
     *
     * @return $this
     */
    public function setDebitSubaccount($debitSubaccount)
    {
        $this->container['debitSubaccount'] = $debitSubaccount;

        return $this;
    }

    /**
     * Gets docCreated
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getDocCreated()
    {
        return $this->container['docCreated'];
    }

    /**
     * Sets docCreated
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $docCreated docCreated
     *
     * @return $this
     */
    public function setDocCreated($docCreated)
    {
        $this->container['docCreated'] = $docCreated;

        return $this;
    }

    /**
     * Gets docTotal
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getDocTotal()
    {
        return $this->container['docTotal'];
    }

    /**
     * Sets docTotal
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $docTotal docTotal
     *
     * @return $this
     */
    public function setDocTotal($docTotal)
    {
        $this->container['docTotal'] = $docTotal;

        return $this;
    }

    /**
     * Gets dueDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getDueDate()
    {
        return $this->container['dueDate'];
    }

    /**
     * Sets dueDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $dueDate dueDate
     *
     * @return $this
     */
    public function setDueDate($dueDate)
    {
        $this->container['dueDate'] = $dueDate;

        return $this;
    }

    /**
     * Gets entryTypeID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getEntryTypeID()
    {
        return $this->container['entryTypeID'];
    }

    /**
     * Sets entryTypeID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $entryTypeID entryTypeID
     *
     * @return $this
     */
    public function setEntryTypeID($entryTypeID)
    {
        $this->container['entryTypeID'] = $entryTypeID;

        return $this;
    }

    /**
     * Gets externalRef
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getExternalRef()
    {
        return $this->container['externalRef'];
    }

    /**
     * Sets externalRef
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $externalRef externalRef
     *
     * @return $this
     */
    public function setExternalRef($externalRef)
    {
        $this->container['externalRef'] = $externalRef;

        return $this;
    }

    /**
     * Gets groupTransactionID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel
     */
    public function getGroupTransactionID()
    {
        return $this->container['groupTransactionID'];
    }

    /**
     * Sets groupTransactionID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel $groupTransactionID groupTransactionID
     *
     * @return $this
     */
    public function setGroupTransactionID($groupTransactionID)
    {
        $this->container['groupTransactionID'] = $groupTransactionID;

        return $this;
    }

    /**
     * Gets includedTaxAmount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getIncludedTaxAmount()
    {
        return $this->container['includedTaxAmount'];
    }

    /**
     * Sets includedTaxAmount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $includedTaxAmount includedTaxAmount
     *
     * @return $this
     */
    public function setIncludedTaxAmount($includedTaxAmount)
    {
        $this->container['includedTaxAmount'] = $includedTaxAmount;

        return $this;
    }

    /**
     * Gets lineNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel
     */
    public function getLineNbr()
    {
        return $this->container['lineNbr'];
    }

    /**
     * Sets lineNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\IntValueModel $lineNbr lineNbr
     *
     * @return $this
     */
    public function setLineNbr($lineNbr)
    {
        $this->container['lineNbr'] = $lineNbr;

        return $this;
    }

    /**
     * Gets location
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $location location
     *
     * @return $this
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets paymentMethod
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPaymentMethod()
    {
        return $this->container['paymentMethod'];
    }

    /**
     * Sets paymentMethod
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $paymentMethod paymentMethod
     *
     * @return $this
     */
    public function setPaymentMethod($paymentMethod)
    {
        $this->container['paymentMethod'] = $paymentMethod;

        return $this;
    }

    /**
     * Gets project
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getProject()
    {
        return $this->container['project'];
    }

    /**
     * Sets project
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $project project
     *
     * @return $this
     */
    public function setProject($project)
    {
        $this->container['project'] = $project;

        return $this;
    }

    /**
     * Gets projectTask
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getProjectTask()
    {
        return $this->container['projectTask'];
    }

    /**
     * Sets projectTask
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $projectTask projectTask
     *
     * @return $this
     */
    public function setProjectTask($projectTask)
    {
        $this->container['projectTask'] = $projectTask;

        return $this;
    }

    /**
     * Gets referenceNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getReferenceNbr()
    {
        return $this->container['referenceNbr'];
    }

    /**
     * Sets referenceNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $referenceNbr referenceNbr
     *
     * @return $this
     */
    public function setReferenceNbr($referenceNbr)
    {
        $this->container['referenceNbr'] = $referenceNbr;

        return $this;
    }

    /**
     * Gets released
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getReleased()
    {
        return $this->container['released'];
    }

    /**
     * Sets released
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $released released
     *
     * @return $this
     */
    public function setReleased($released)
    {
        $this->container['released'] = $released;

        return $this;
    }

    /**
     * Gets split
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getSplit()
    {
        return $this->container['split'];
    }

    /**
     * Sets split
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $split split
     *
     * @return $this
     */
    public function setSplit($split)
    {
        $this->container['split'] = $split;

        return $this;
    }

    /**
     * Gets subtotalAmount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getSubtotalAmount()
    {
        return $this->container['subtotalAmount'];
    }

    /**
     * Sets subtotalAmount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $subtotalAmount subtotalAmount
     *
     * @return $this
     */
    public function setSubtotalAmount($subtotalAmount)
    {
        $this->container['subtotalAmount'] = $subtotalAmount;

        return $this;
    }

    /**
     * Gets taxAmount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getTaxAmount()
    {
        return $this->container['taxAmount'];
    }

    /**
     * Sets taxAmount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $taxAmount taxAmount
     *
     * @return $this
     */
    public function setTaxAmount($taxAmount)
    {
        $this->container['taxAmount'] = $taxAmount;

        return $this;
    }

    /**
     * Gets taxCategory
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxCategory()
    {
        return $this->container['taxCategory'];
    }

    /**
     * Sets taxCategory
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxCategory taxCategory
     *
     * @return $this
     */
    public function setTaxCategory($taxCategory)
    {
        $this->container['taxCategory'] = $taxCategory;

        return $this;
    }

    /**
     * Gets taxZone
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxZone()
    {
        return $this->container['taxZone'];
    }

    /**
     * Sets taxZone
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxZone taxZone
     *
     * @return $this
     */
    public function setTaxZone($taxZone)
    {
        $this->container['taxZone'] = $taxZone;

        return $this;
    }

    /**
     * Gets terms
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTerms()
    {
        return $this->container['terms'];
    }

    /**
     * Sets terms
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $terms terms
     *
     * @return $this
     */
    public function setTerms($terms)
    {
        $this->container['terms'] = $terms;

        return $this;
    }

    /**
     * Gets totalAmount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getTotalAmount()
    {
        return $this->container['totalAmount'];
    }

    /**
     * Sets totalAmount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $totalAmount totalAmount
     *
     * @return $this
     */
    public function setTotalAmount($totalAmount)
    {
        $this->container['totalAmount'] = $totalAmount;

        return $this;
    }

    /**
     * Gets transactionCode
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTransactionCode()
    {
        return $this->container['transactionCode'];
    }

    /**
     * Sets transactionCode
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $transactionCode transactionCode
     *
     * @return $this
     */
    public function setTransactionCode($transactionCode)
    {
        $this->container['transactionCode'] = $transactionCode;

        return $this;
    }

    /**
     * Gets transactionDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getTransactionDate()
    {
        return $this->container['transactionDate'];
    }

    /**
     * Sets transactionDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $transactionDate transactionDate
     *
     * @return $this
     */
    public function setTransactionDate($transactionDate)
    {
        $this->container['transactionDate'] = $transactionDate;

        return $this;
    }

    /**
     * Gets transactionDescription
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTransactionDescription()
    {
        return $this->container['transactionDescription'];
    }

    /**
     * Sets transactionDescription
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $transactionDescription transactionDescription
     *
     * @return $this
     */
    public function setTransactionDescription($transactionDescription)
    {
        $this->container['transactionDescription'] = $transactionDescription;

        return $this;
    }

    /**
     * Gets vendorOrCustomer
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getVendorOrCustomer()
    {
        return $this->container['vendorOrCustomer'];
    }

    /**
     * Sets vendorOrCustomer
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $vendorOrCustomer vendorOrCustomer
     *
     * @return $this
     */
    public function setVendorOrCustomer($vendorOrCustomer)
    {
        $this->container['vendorOrCustomer'] = $vendorOrCustomer;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


