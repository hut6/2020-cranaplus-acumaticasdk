<?php
/**
 * NonStockItemModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Default/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.12
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;

use \ArrayAccess;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * NonStockItemModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class NonStockItemModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'NonStockItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'rowNumber' => 'int',
        'note' => 'string',
        'custom' => 'map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]',
        'files' => '\Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]',
        'attributes' => '\Hut6\CranaplusAcumaticaSdk\Model\NonStockItemAttributeModel[]',
        'baseUnit' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'crossReferences' => '\Hut6\CranaplusAcumaticaSdk\Model\InventoryItemCrossReferenceModel[]',
        'currentCost' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'defaultPrice' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'deferralAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'deferralSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'description' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'effectiveDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'expenseAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'expenseAccrualAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'expenseAccrualSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'expenseSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'inventoryID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'isKit' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'itemClass' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'itemStatus' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'itemType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'lastCost' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'lastModifiedDateTime' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'pendingCost' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'pendingCostDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'pOAccrualAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'pOAccrualSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'postingClass' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'priceClass' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'purchasePriceVarianceAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'purchasePriceVarianceSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'purchaseUnit' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'reasonCodeSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'requireReceipt' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'requireShipment' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'salesAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'salesCategories' => '\Hut6\CranaplusAcumaticaSdk\Model\NonStockItemSalesCategoryModel[]',
        'salesSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'salesUnit' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'taxCategory' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'vendorDetails' => '\Hut6\CranaplusAcumaticaSdk\Model\NonStockItemVendorDetailModel[]',
        'volume' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'volumeUOM' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'weight' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'weightUOM' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'uuid',
        'rowNumber' => 'int64',
        'note' => null,
        'custom' => null,
        'files' => null,
        'attributes' => null,
        'baseUnit' => null,
        'crossReferences' => null,
        'currentCost' => null,
        'defaultPrice' => null,
        'deferralAccount' => null,
        'deferralSubaccount' => null,
        'description' => null,
        'effectiveDate' => null,
        'expenseAccount' => null,
        'expenseAccrualAccount' => null,
        'expenseAccrualSubaccount' => null,
        'expenseSubaccount' => null,
        'inventoryID' => null,
        'isKit' => null,
        'itemClass' => null,
        'itemStatus' => null,
        'itemType' => null,
        'lastCost' => null,
        'lastModifiedDateTime' => null,
        'pendingCost' => null,
        'pendingCostDate' => null,
        'pOAccrualAccount' => null,
        'pOAccrualSubaccount' => null,
        'postingClass' => null,
        'priceClass' => null,
        'purchasePriceVarianceAccount' => null,
        'purchasePriceVarianceSubaccount' => null,
        'purchaseUnit' => null,
        'reasonCodeSubaccount' => null,
        'requireReceipt' => null,
        'requireShipment' => null,
        'salesAccount' => null,
        'salesCategories' => null,
        'salesSubaccount' => null,
        'salesUnit' => null,
        'taxCategory' => null,
        'vendorDetails' => null,
        'volume' => null,
        'volumeUOM' => null,
        'weight' => null,
        'weightUOM' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'rowNumber' => 'rowNumber',
        'note' => 'note',
        'custom' => 'custom',
        'files' => 'files',
        'attributes' => 'Attributes',
        'baseUnit' => 'BaseUnit',
        'crossReferences' => 'CrossReferences',
        'currentCost' => 'CurrentCost',
        'defaultPrice' => 'DefaultPrice',
        'deferralAccount' => 'DeferralAccount',
        'deferralSubaccount' => 'DeferralSubaccount',
        'description' => 'Description',
        'effectiveDate' => 'EffectiveDate',
        'expenseAccount' => 'ExpenseAccount',
        'expenseAccrualAccount' => 'ExpenseAccrualAccount',
        'expenseAccrualSubaccount' => 'ExpenseAccrualSubaccount',
        'expenseSubaccount' => 'ExpenseSubaccount',
        'inventoryID' => 'InventoryID',
        'isKit' => 'IsKit',
        'itemClass' => 'ItemClass',
        'itemStatus' => 'ItemStatus',
        'itemType' => 'ItemType',
        'lastCost' => 'LastCost',
        'lastModifiedDateTime' => 'LastModifiedDateTime',
        'pendingCost' => 'PendingCost',
        'pendingCostDate' => 'PendingCostDate',
        'pOAccrualAccount' => 'POAccrualAccount',
        'pOAccrualSubaccount' => 'POAccrualSubaccount',
        'postingClass' => 'PostingClass',
        'priceClass' => 'PriceClass',
        'purchasePriceVarianceAccount' => 'PurchasePriceVarianceAccount',
        'purchasePriceVarianceSubaccount' => 'PurchasePriceVarianceSubaccount',
        'purchaseUnit' => 'PurchaseUnit',
        'reasonCodeSubaccount' => 'ReasonCodeSubaccount',
        'requireReceipt' => 'RequireReceipt',
        'requireShipment' => 'RequireShipment',
        'salesAccount' => 'SalesAccount',
        'salesCategories' => 'SalesCategories',
        'salesSubaccount' => 'SalesSubaccount',
        'salesUnit' => 'SalesUnit',
        'taxCategory' => 'TaxCategory',
        'vendorDetails' => 'VendorDetails',
        'volume' => 'Volume',
        'volumeUOM' => 'VolumeUOM',
        'weight' => 'Weight',
        'weightUOM' => 'WeightUOM'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'rowNumber' => 'setRowNumber',
        'note' => 'setNote',
        'custom' => 'setCustom',
        'files' => 'setFiles',
        'attributes' => 'setAttributes',
        'baseUnit' => 'setBaseUnit',
        'crossReferences' => 'setCrossReferences',
        'currentCost' => 'setCurrentCost',
        'defaultPrice' => 'setDefaultPrice',
        'deferralAccount' => 'setDeferralAccount',
        'deferralSubaccount' => 'setDeferralSubaccount',
        'description' => 'setDescription',
        'effectiveDate' => 'setEffectiveDate',
        'expenseAccount' => 'setExpenseAccount',
        'expenseAccrualAccount' => 'setExpenseAccrualAccount',
        'expenseAccrualSubaccount' => 'setExpenseAccrualSubaccount',
        'expenseSubaccount' => 'setExpenseSubaccount',
        'inventoryID' => 'setInventoryID',
        'isKit' => 'setIsKit',
        'itemClass' => 'setItemClass',
        'itemStatus' => 'setItemStatus',
        'itemType' => 'setItemType',
        'lastCost' => 'setLastCost',
        'lastModifiedDateTime' => 'setLastModifiedDateTime',
        'pendingCost' => 'setPendingCost',
        'pendingCostDate' => 'setPendingCostDate',
        'pOAccrualAccount' => 'setPOAccrualAccount',
        'pOAccrualSubaccount' => 'setPOAccrualSubaccount',
        'postingClass' => 'setPostingClass',
        'priceClass' => 'setPriceClass',
        'purchasePriceVarianceAccount' => 'setPurchasePriceVarianceAccount',
        'purchasePriceVarianceSubaccount' => 'setPurchasePriceVarianceSubaccount',
        'purchaseUnit' => 'setPurchaseUnit',
        'reasonCodeSubaccount' => 'setReasonCodeSubaccount',
        'requireReceipt' => 'setRequireReceipt',
        'requireShipment' => 'setRequireShipment',
        'salesAccount' => 'setSalesAccount',
        'salesCategories' => 'setSalesCategories',
        'salesSubaccount' => 'setSalesSubaccount',
        'salesUnit' => 'setSalesUnit',
        'taxCategory' => 'setTaxCategory',
        'vendorDetails' => 'setVendorDetails',
        'volume' => 'setVolume',
        'volumeUOM' => 'setVolumeUOM',
        'weight' => 'setWeight',
        'weightUOM' => 'setWeightUOM'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'rowNumber' => 'getRowNumber',
        'note' => 'getNote',
        'custom' => 'getCustom',
        'files' => 'getFiles',
        'attributes' => 'getAttributes',
        'baseUnit' => 'getBaseUnit',
        'crossReferences' => 'getCrossReferences',
        'currentCost' => 'getCurrentCost',
        'defaultPrice' => 'getDefaultPrice',
        'deferralAccount' => 'getDeferralAccount',
        'deferralSubaccount' => 'getDeferralSubaccount',
        'description' => 'getDescription',
        'effectiveDate' => 'getEffectiveDate',
        'expenseAccount' => 'getExpenseAccount',
        'expenseAccrualAccount' => 'getExpenseAccrualAccount',
        'expenseAccrualSubaccount' => 'getExpenseAccrualSubaccount',
        'expenseSubaccount' => 'getExpenseSubaccount',
        'inventoryID' => 'getInventoryID',
        'isKit' => 'getIsKit',
        'itemClass' => 'getItemClass',
        'itemStatus' => 'getItemStatus',
        'itemType' => 'getItemType',
        'lastCost' => 'getLastCost',
        'lastModifiedDateTime' => 'getLastModifiedDateTime',
        'pendingCost' => 'getPendingCost',
        'pendingCostDate' => 'getPendingCostDate',
        'pOAccrualAccount' => 'getPOAccrualAccount',
        'pOAccrualSubaccount' => 'getPOAccrualSubaccount',
        'postingClass' => 'getPostingClass',
        'priceClass' => 'getPriceClass',
        'purchasePriceVarianceAccount' => 'getPurchasePriceVarianceAccount',
        'purchasePriceVarianceSubaccount' => 'getPurchasePriceVarianceSubaccount',
        'purchaseUnit' => 'getPurchaseUnit',
        'reasonCodeSubaccount' => 'getReasonCodeSubaccount',
        'requireReceipt' => 'getRequireReceipt',
        'requireShipment' => 'getRequireShipment',
        'salesAccount' => 'getSalesAccount',
        'salesCategories' => 'getSalesCategories',
        'salesSubaccount' => 'getSalesSubaccount',
        'salesUnit' => 'getSalesUnit',
        'taxCategory' => 'getTaxCategory',
        'vendorDetails' => 'getVendorDetails',
        'volume' => 'getVolume',
        'volumeUOM' => 'getVolumeUOM',
        'weight' => 'getWeight',
        'weightUOM' => 'getWeightUOM'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['rowNumber'] = isset($data['rowNumber']) ? $data['rowNumber'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['custom'] = isset($data['custom']) ? $data['custom'] : null;
        $this->container['files'] = isset($data['files']) ? $data['files'] : null;
        $this->container['attributes'] = isset($data['attributes']) ? $data['attributes'] : null;
        $this->container['baseUnit'] = isset($data['baseUnit']) ? $data['baseUnit'] : null;
        $this->container['crossReferences'] = isset($data['crossReferences']) ? $data['crossReferences'] : null;
        $this->container['currentCost'] = isset($data['currentCost']) ? $data['currentCost'] : null;
        $this->container['defaultPrice'] = isset($data['defaultPrice']) ? $data['defaultPrice'] : null;
        $this->container['deferralAccount'] = isset($data['deferralAccount']) ? $data['deferralAccount'] : null;
        $this->container['deferralSubaccount'] = isset($data['deferralSubaccount']) ? $data['deferralSubaccount'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['effectiveDate'] = isset($data['effectiveDate']) ? $data['effectiveDate'] : null;
        $this->container['expenseAccount'] = isset($data['expenseAccount']) ? $data['expenseAccount'] : null;
        $this->container['expenseAccrualAccount'] = isset($data['expenseAccrualAccount']) ? $data['expenseAccrualAccount'] : null;
        $this->container['expenseAccrualSubaccount'] = isset($data['expenseAccrualSubaccount']) ? $data['expenseAccrualSubaccount'] : null;
        $this->container['expenseSubaccount'] = isset($data['expenseSubaccount']) ? $data['expenseSubaccount'] : null;
        $this->container['inventoryID'] = isset($data['inventoryID']) ? $data['inventoryID'] : null;
        $this->container['isKit'] = isset($data['isKit']) ? $data['isKit'] : null;
        $this->container['itemClass'] = isset($data['itemClass']) ? $data['itemClass'] : null;
        $this->container['itemStatus'] = isset($data['itemStatus']) ? $data['itemStatus'] : null;
        $this->container['itemType'] = isset($data['itemType']) ? $data['itemType'] : null;
        $this->container['lastCost'] = isset($data['lastCost']) ? $data['lastCost'] : null;
        $this->container['lastModifiedDateTime'] = isset($data['lastModifiedDateTime']) ? $data['lastModifiedDateTime'] : null;
        $this->container['pendingCost'] = isset($data['pendingCost']) ? $data['pendingCost'] : null;
        $this->container['pendingCostDate'] = isset($data['pendingCostDate']) ? $data['pendingCostDate'] : null;
        $this->container['pOAccrualAccount'] = isset($data['pOAccrualAccount']) ? $data['pOAccrualAccount'] : null;
        $this->container['pOAccrualSubaccount'] = isset($data['pOAccrualSubaccount']) ? $data['pOAccrualSubaccount'] : null;
        $this->container['postingClass'] = isset($data['postingClass']) ? $data['postingClass'] : null;
        $this->container['priceClass'] = isset($data['priceClass']) ? $data['priceClass'] : null;
        $this->container['purchasePriceVarianceAccount'] = isset($data['purchasePriceVarianceAccount']) ? $data['purchasePriceVarianceAccount'] : null;
        $this->container['purchasePriceVarianceSubaccount'] = isset($data['purchasePriceVarianceSubaccount']) ? $data['purchasePriceVarianceSubaccount'] : null;
        $this->container['purchaseUnit'] = isset($data['purchaseUnit']) ? $data['purchaseUnit'] : null;
        $this->container['reasonCodeSubaccount'] = isset($data['reasonCodeSubaccount']) ? $data['reasonCodeSubaccount'] : null;
        $this->container['requireReceipt'] = isset($data['requireReceipt']) ? $data['requireReceipt'] : null;
        $this->container['requireShipment'] = isset($data['requireShipment']) ? $data['requireShipment'] : null;
        $this->container['salesAccount'] = isset($data['salesAccount']) ? $data['salesAccount'] : null;
        $this->container['salesCategories'] = isset($data['salesCategories']) ? $data['salesCategories'] : null;
        $this->container['salesSubaccount'] = isset($data['salesSubaccount']) ? $data['salesSubaccount'] : null;
        $this->container['salesUnit'] = isset($data['salesUnit']) ? $data['salesUnit'] : null;
        $this->container['taxCategory'] = isset($data['taxCategory']) ? $data['taxCategory'] : null;
        $this->container['vendorDetails'] = isset($data['vendorDetails']) ? $data['vendorDetails'] : null;
        $this->container['volume'] = isset($data['volume']) ? $data['volume'] : null;
        $this->container['volumeUOM'] = isset($data['volumeUOM']) ? $data['volumeUOM'] : null;
        $this->container['weight'] = isset($data['weight']) ? $data['weight'] : null;
        $this->container['weightUOM'] = isset($data['weightUOM']) ? $data['weightUOM'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets rowNumber
     *
     * @return int
     */
    public function getRowNumber()
    {
        return $this->container['rowNumber'];
    }

    /**
     * Sets rowNumber
     *
     * @param int $rowNumber rowNumber
     *
     * @return $this
     */
    public function setRowNumber($rowNumber)
    {
        $this->container['rowNumber'] = $rowNumber;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note note
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets custom
     *
     * @return map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]
     */
    public function getCustom()
    {
        return $this->container['custom'];
    }

    /**
     * Sets custom
     *
     * @param map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]] $custom custom
     *
     * @return $this
     */
    public function setCustom($custom)
    {
        $this->container['custom'] = $custom;

        return $this;
    }

    /**
     * Gets files
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]
     */
    public function getFiles()
    {
        return $this->container['files'];
    }

    /**
     * Sets files
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[] $files files
     *
     * @return $this
     */
    public function setFiles($files)
    {
        $this->container['files'] = $files;

        return $this;
    }

    /**
     * Gets attributes
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\NonStockItemAttributeModel[]
     */
    public function getAttributes()
    {
        return $this->container['attributes'];
    }

    /**
     * Sets attributes
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\NonStockItemAttributeModel[] $attributes attributes
     *
     * @return $this
     */
    public function setAttributes($attributes)
    {
        $this->container['attributes'] = $attributes;

        return $this;
    }

    /**
     * Gets baseUnit
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getBaseUnit()
    {
        return $this->container['baseUnit'];
    }

    /**
     * Sets baseUnit
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $baseUnit baseUnit
     *
     * @return $this
     */
    public function setBaseUnit($baseUnit)
    {
        $this->container['baseUnit'] = $baseUnit;

        return $this;
    }

    /**
     * Gets crossReferences
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\InventoryItemCrossReferenceModel[]
     */
    public function getCrossReferences()
    {
        return $this->container['crossReferences'];
    }

    /**
     * Sets crossReferences
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\InventoryItemCrossReferenceModel[] $crossReferences crossReferences
     *
     * @return $this
     */
    public function setCrossReferences($crossReferences)
    {
        $this->container['crossReferences'] = $crossReferences;

        return $this;
    }

    /**
     * Gets currentCost
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getCurrentCost()
    {
        return $this->container['currentCost'];
    }

    /**
     * Sets currentCost
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $currentCost currentCost
     *
     * @return $this
     */
    public function setCurrentCost($currentCost)
    {
        $this->container['currentCost'] = $currentCost;

        return $this;
    }

    /**
     * Gets defaultPrice
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getDefaultPrice()
    {
        return $this->container['defaultPrice'];
    }

    /**
     * Sets defaultPrice
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $defaultPrice defaultPrice
     *
     * @return $this
     */
    public function setDefaultPrice($defaultPrice)
    {
        $this->container['defaultPrice'] = $defaultPrice;

        return $this;
    }

    /**
     * Gets deferralAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDeferralAccount()
    {
        return $this->container['deferralAccount'];
    }

    /**
     * Sets deferralAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $deferralAccount deferralAccount
     *
     * @return $this
     */
    public function setDeferralAccount($deferralAccount)
    {
        $this->container['deferralAccount'] = $deferralAccount;

        return $this;
    }

    /**
     * Gets deferralSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDeferralSubaccount()
    {
        return $this->container['deferralSubaccount'];
    }

    /**
     * Sets deferralSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $deferralSubaccount deferralSubaccount
     *
     * @return $this
     */
    public function setDeferralSubaccount($deferralSubaccount)
    {
        $this->container['deferralSubaccount'] = $deferralSubaccount;

        return $this;
    }

    /**
     * Gets description
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets effectiveDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getEffectiveDate()
    {
        return $this->container['effectiveDate'];
    }

    /**
     * Sets effectiveDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $effectiveDate effectiveDate
     *
     * @return $this
     */
    public function setEffectiveDate($effectiveDate)
    {
        $this->container['effectiveDate'] = $effectiveDate;

        return $this;
    }

    /**
     * Gets expenseAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getExpenseAccount()
    {
        return $this->container['expenseAccount'];
    }

    /**
     * Sets expenseAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $expenseAccount expenseAccount
     *
     * @return $this
     */
    public function setExpenseAccount($expenseAccount)
    {
        $this->container['expenseAccount'] = $expenseAccount;

        return $this;
    }

    /**
     * Gets expenseAccrualAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getExpenseAccrualAccount()
    {
        return $this->container['expenseAccrualAccount'];
    }

    /**
     * Sets expenseAccrualAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $expenseAccrualAccount expenseAccrualAccount
     *
     * @return $this
     */
    public function setExpenseAccrualAccount($expenseAccrualAccount)
    {
        $this->container['expenseAccrualAccount'] = $expenseAccrualAccount;

        return $this;
    }

    /**
     * Gets expenseAccrualSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getExpenseAccrualSubaccount()
    {
        return $this->container['expenseAccrualSubaccount'];
    }

    /**
     * Sets expenseAccrualSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $expenseAccrualSubaccount expenseAccrualSubaccount
     *
     * @return $this
     */
    public function setExpenseAccrualSubaccount($expenseAccrualSubaccount)
    {
        $this->container['expenseAccrualSubaccount'] = $expenseAccrualSubaccount;

        return $this;
    }

    /**
     * Gets expenseSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getExpenseSubaccount()
    {
        return $this->container['expenseSubaccount'];
    }

    /**
     * Sets expenseSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $expenseSubaccount expenseSubaccount
     *
     * @return $this
     */
    public function setExpenseSubaccount($expenseSubaccount)
    {
        $this->container['expenseSubaccount'] = $expenseSubaccount;

        return $this;
    }

    /**
     * Gets inventoryID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getInventoryID()
    {
        return $this->container['inventoryID'];
    }

    /**
     * Sets inventoryID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $inventoryID inventoryID
     *
     * @return $this
     */
    public function setInventoryID($inventoryID)
    {
        $this->container['inventoryID'] = $inventoryID;

        return $this;
    }

    /**
     * Gets isKit
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getIsKit()
    {
        return $this->container['isKit'];
    }

    /**
     * Sets isKit
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $isKit isKit
     *
     * @return $this
     */
    public function setIsKit($isKit)
    {
        $this->container['isKit'] = $isKit;

        return $this;
    }

    /**
     * Gets itemClass
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getItemClass()
    {
        return $this->container['itemClass'];
    }

    /**
     * Sets itemClass
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $itemClass itemClass
     *
     * @return $this
     */
    public function setItemClass($itemClass)
    {
        $this->container['itemClass'] = $itemClass;

        return $this;
    }

    /**
     * Gets itemStatus
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getItemStatus()
    {
        return $this->container['itemStatus'];
    }

    /**
     * Sets itemStatus
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $itemStatus itemStatus
     *
     * @return $this
     */
    public function setItemStatus($itemStatus)
    {
        $this->container['itemStatus'] = $itemStatus;

        return $this;
    }

    /**
     * Gets itemType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getItemType()
    {
        return $this->container['itemType'];
    }

    /**
     * Sets itemType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $itemType itemType
     *
     * @return $this
     */
    public function setItemType($itemType)
    {
        $this->container['itemType'] = $itemType;

        return $this;
    }

    /**
     * Gets lastCost
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getLastCost()
    {
        return $this->container['lastCost'];
    }

    /**
     * Sets lastCost
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $lastCost lastCost
     *
     * @return $this
     */
    public function setLastCost($lastCost)
    {
        $this->container['lastCost'] = $lastCost;

        return $this;
    }

    /**
     * Gets lastModifiedDateTime
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getLastModifiedDateTime()
    {
        return $this->container['lastModifiedDateTime'];
    }

    /**
     * Sets lastModifiedDateTime
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $lastModifiedDateTime lastModifiedDateTime
     *
     * @return $this
     */
    public function setLastModifiedDateTime($lastModifiedDateTime)
    {
        $this->container['lastModifiedDateTime'] = $lastModifiedDateTime;

        return $this;
    }

    /**
     * Gets pendingCost
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getPendingCost()
    {
        return $this->container['pendingCost'];
    }

    /**
     * Sets pendingCost
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $pendingCost pendingCost
     *
     * @return $this
     */
    public function setPendingCost($pendingCost)
    {
        $this->container['pendingCost'] = $pendingCost;

        return $this;
    }

    /**
     * Gets pendingCostDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getPendingCostDate()
    {
        return $this->container['pendingCostDate'];
    }

    /**
     * Sets pendingCostDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $pendingCostDate pendingCostDate
     *
     * @return $this
     */
    public function setPendingCostDate($pendingCostDate)
    {
        $this->container['pendingCostDate'] = $pendingCostDate;

        return $this;
    }

    /**
     * Gets pOAccrualAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPOAccrualAccount()
    {
        return $this->container['pOAccrualAccount'];
    }

    /**
     * Sets pOAccrualAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $pOAccrualAccount pOAccrualAccount
     *
     * @return $this
     */
    public function setPOAccrualAccount($pOAccrualAccount)
    {
        $this->container['pOAccrualAccount'] = $pOAccrualAccount;

        return $this;
    }

    /**
     * Gets pOAccrualSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPOAccrualSubaccount()
    {
        return $this->container['pOAccrualSubaccount'];
    }

    /**
     * Sets pOAccrualSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $pOAccrualSubaccount pOAccrualSubaccount
     *
     * @return $this
     */
    public function setPOAccrualSubaccount($pOAccrualSubaccount)
    {
        $this->container['pOAccrualSubaccount'] = $pOAccrualSubaccount;

        return $this;
    }

    /**
     * Gets postingClass
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPostingClass()
    {
        return $this->container['postingClass'];
    }

    /**
     * Sets postingClass
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $postingClass postingClass
     *
     * @return $this
     */
    public function setPostingClass($postingClass)
    {
        $this->container['postingClass'] = $postingClass;

        return $this;
    }

    /**
     * Gets priceClass
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPriceClass()
    {
        return $this->container['priceClass'];
    }

    /**
     * Sets priceClass
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $priceClass priceClass
     *
     * @return $this
     */
    public function setPriceClass($priceClass)
    {
        $this->container['priceClass'] = $priceClass;

        return $this;
    }

    /**
     * Gets purchasePriceVarianceAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPurchasePriceVarianceAccount()
    {
        return $this->container['purchasePriceVarianceAccount'];
    }

    /**
     * Sets purchasePriceVarianceAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $purchasePriceVarianceAccount purchasePriceVarianceAccount
     *
     * @return $this
     */
    public function setPurchasePriceVarianceAccount($purchasePriceVarianceAccount)
    {
        $this->container['purchasePriceVarianceAccount'] = $purchasePriceVarianceAccount;

        return $this;
    }

    /**
     * Gets purchasePriceVarianceSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPurchasePriceVarianceSubaccount()
    {
        return $this->container['purchasePriceVarianceSubaccount'];
    }

    /**
     * Sets purchasePriceVarianceSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $purchasePriceVarianceSubaccount purchasePriceVarianceSubaccount
     *
     * @return $this
     */
    public function setPurchasePriceVarianceSubaccount($purchasePriceVarianceSubaccount)
    {
        $this->container['purchasePriceVarianceSubaccount'] = $purchasePriceVarianceSubaccount;

        return $this;
    }

    /**
     * Gets purchaseUnit
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPurchaseUnit()
    {
        return $this->container['purchaseUnit'];
    }

    /**
     * Sets purchaseUnit
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $purchaseUnit purchaseUnit
     *
     * @return $this
     */
    public function setPurchaseUnit($purchaseUnit)
    {
        $this->container['purchaseUnit'] = $purchaseUnit;

        return $this;
    }

    /**
     * Gets reasonCodeSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getReasonCodeSubaccount()
    {
        return $this->container['reasonCodeSubaccount'];
    }

    /**
     * Sets reasonCodeSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $reasonCodeSubaccount reasonCodeSubaccount
     *
     * @return $this
     */
    public function setReasonCodeSubaccount($reasonCodeSubaccount)
    {
        $this->container['reasonCodeSubaccount'] = $reasonCodeSubaccount;

        return $this;
    }

    /**
     * Gets requireReceipt
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getRequireReceipt()
    {
        return $this->container['requireReceipt'];
    }

    /**
     * Sets requireReceipt
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $requireReceipt requireReceipt
     *
     * @return $this
     */
    public function setRequireReceipt($requireReceipt)
    {
        $this->container['requireReceipt'] = $requireReceipt;

        return $this;
    }

    /**
     * Gets requireShipment
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getRequireShipment()
    {
        return $this->container['requireShipment'];
    }

    /**
     * Sets requireShipment
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $requireShipment requireShipment
     *
     * @return $this
     */
    public function setRequireShipment($requireShipment)
    {
        $this->container['requireShipment'] = $requireShipment;

        return $this;
    }

    /**
     * Gets salesAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getSalesAccount()
    {
        return $this->container['salesAccount'];
    }

    /**
     * Sets salesAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $salesAccount salesAccount
     *
     * @return $this
     */
    public function setSalesAccount($salesAccount)
    {
        $this->container['salesAccount'] = $salesAccount;

        return $this;
    }

    /**
     * Gets salesCategories
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\NonStockItemSalesCategoryModel[]
     */
    public function getSalesCategories()
    {
        return $this->container['salesCategories'];
    }

    /**
     * Sets salesCategories
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\NonStockItemSalesCategoryModel[] $salesCategories salesCategories
     *
     * @return $this
     */
    public function setSalesCategories($salesCategories)
    {
        $this->container['salesCategories'] = $salesCategories;

        return $this;
    }

    /**
     * Gets salesSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getSalesSubaccount()
    {
        return $this->container['salesSubaccount'];
    }

    /**
     * Sets salesSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $salesSubaccount salesSubaccount
     *
     * @return $this
     */
    public function setSalesSubaccount($salesSubaccount)
    {
        $this->container['salesSubaccount'] = $salesSubaccount;

        return $this;
    }

    /**
     * Gets salesUnit
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getSalesUnit()
    {
        return $this->container['salesUnit'];
    }

    /**
     * Sets salesUnit
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $salesUnit salesUnit
     *
     * @return $this
     */
    public function setSalesUnit($salesUnit)
    {
        $this->container['salesUnit'] = $salesUnit;

        return $this;
    }

    /**
     * Gets taxCategory
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxCategory()
    {
        return $this->container['taxCategory'];
    }

    /**
     * Sets taxCategory
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxCategory taxCategory
     *
     * @return $this
     */
    public function setTaxCategory($taxCategory)
    {
        $this->container['taxCategory'] = $taxCategory;

        return $this;
    }

    /**
     * Gets vendorDetails
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\NonStockItemVendorDetailModel[]
     */
    public function getVendorDetails()
    {
        return $this->container['vendorDetails'];
    }

    /**
     * Sets vendorDetails
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\NonStockItemVendorDetailModel[] $vendorDetails vendorDetails
     *
     * @return $this
     */
    public function setVendorDetails($vendorDetails)
    {
        $this->container['vendorDetails'] = $vendorDetails;

        return $this;
    }

    /**
     * Gets volume
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getVolume()
    {
        return $this->container['volume'];
    }

    /**
     * Sets volume
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $volume volume
     *
     * @return $this
     */
    public function setVolume($volume)
    {
        $this->container['volume'] = $volume;

        return $this;
    }

    /**
     * Gets volumeUOM
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getVolumeUOM()
    {
        return $this->container['volumeUOM'];
    }

    /**
     * Sets volumeUOM
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $volumeUOM volumeUOM
     *
     * @return $this
     */
    public function setVolumeUOM($volumeUOM)
    {
        $this->container['volumeUOM'] = $volumeUOM;

        return $this;
    }

    /**
     * Gets weight
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $weight weight
     *
     * @return $this
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets weightUOM
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getWeightUOM()
    {
        return $this->container['weightUOM'];
    }

    /**
     * Sets weightUOM
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $weightUOM weightUOM
     *
     * @return $this
     */
    public function setWeightUOM($weightUOM)
    {
        $this->container['weightUOM'] = $weightUOM;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


