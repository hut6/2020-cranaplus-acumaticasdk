<?php
/**
 * CustomerClassModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * CustomerClassModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CustomerClassModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CustomerClass';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'applyOverdueCharges' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'aRAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'aRSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'attributes' => '\Hut6\CranaplusAcumaticaSdk\Model\BusinessAccountClassAttributeDetailModel[]',
        'autoApplyPayments' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'cashDiscountAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'cashDiscountSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'classID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'cOGSAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'cOGSSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'country' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'createdDateTime' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'creditDaysPastDue' => '\Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel',
        'creditLimit' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'creditVerification' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'currencyID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'currencyRateType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'defaultLocationIDfromBranch' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'defaultRestrictionGroup' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'description' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'discountAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'discountSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'enableCurrencyOverride' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'enableRateOverride' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'enableWriteOffs' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'entityUsageType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'freightAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'freightSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'groupDocumentDiscountLimit' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'lastModifiedDateTime' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'miscAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'miscSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'multiCurrencyStatements' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'overdueChargeID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'overLimitAmount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'paymentMethod' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'prepaymentAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'prepaymentSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'printDunningLetters' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'printInvoices' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'printStatements' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'requireEntityUsageType' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'requireTaxZone' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'salesAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'salespersonID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'salesSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'sendDunningLettersbyEmail' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'sendInvoicesbyEmail' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'sendStatementsByEmail' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'shippingRule' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'shippingTerms' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'shipVia' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'statementCycleID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'statementType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'taxZoneID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'terms' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'unrealizedGainAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'unrealizedGainSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'unrealizedLossAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'unrealizedLossSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'writeOffLimit' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'applyOverdueCharges' => null,
        'aRAccount' => null,
        'aRSubaccount' => null,
        'attributes' => null,
        'autoApplyPayments' => null,
        'cashDiscountAccount' => null,
        'cashDiscountSubaccount' => null,
        'classID' => null,
        'cOGSAccount' => null,
        'cOGSSubaccount' => null,
        'country' => null,
        'createdDateTime' => null,
        'creditDaysPastDue' => null,
        'creditLimit' => null,
        'creditVerification' => null,
        'currencyID' => null,
        'currencyRateType' => null,
        'defaultLocationIDfromBranch' => null,
        'defaultRestrictionGroup' => null,
        'description' => null,
        'discountAccount' => null,
        'discountSubaccount' => null,
        'enableCurrencyOverride' => null,
        'enableRateOverride' => null,
        'enableWriteOffs' => null,
        'entityUsageType' => null,
        'freightAccount' => null,
        'freightSubaccount' => null,
        'groupDocumentDiscountLimit' => null,
        'lastModifiedDateTime' => null,
        'miscAccount' => null,
        'miscSubaccount' => null,
        'multiCurrencyStatements' => null,
        'overdueChargeID' => null,
        'overLimitAmount' => null,
        'paymentMethod' => null,
        'prepaymentAccount' => null,
        'prepaymentSubaccount' => null,
        'printDunningLetters' => null,
        'printInvoices' => null,
        'printStatements' => null,
        'requireEntityUsageType' => null,
        'requireTaxZone' => null,
        'salesAccount' => null,
        'salespersonID' => null,
        'salesSubaccount' => null,
        'sendDunningLettersbyEmail' => null,
        'sendInvoicesbyEmail' => null,
        'sendStatementsByEmail' => null,
        'shippingRule' => null,
        'shippingTerms' => null,
        'shipVia' => null,
        'statementCycleID' => null,
        'statementType' => null,
        'taxZoneID' => null,
        'terms' => null,
        'unrealizedGainAccount' => null,
        'unrealizedGainSubaccount' => null,
        'unrealizedLossAccount' => null,
        'unrealizedLossSubaccount' => null,
        'writeOffLimit' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'applyOverdueCharges' => 'ApplyOverdueCharges',
        'aRAccount' => 'ARAccount',
        'aRSubaccount' => 'ARSubaccount',
        'attributes' => 'Attributes',
        'autoApplyPayments' => 'AutoApplyPayments',
        'cashDiscountAccount' => 'CashDiscountAccount',
        'cashDiscountSubaccount' => 'CashDiscountSubaccount',
        'classID' => 'ClassID',
        'cOGSAccount' => 'COGSAccount',
        'cOGSSubaccount' => 'COGSSubaccount',
        'country' => 'Country',
        'createdDateTime' => 'CreatedDateTime',
        'creditDaysPastDue' => 'CreditDaysPastDue',
        'creditLimit' => 'CreditLimit',
        'creditVerification' => 'CreditVerification',
        'currencyID' => 'CurrencyID',
        'currencyRateType' => 'CurrencyRateType',
        'defaultLocationIDfromBranch' => 'DefaultLocationIDfromBranch',
        'defaultRestrictionGroup' => 'DefaultRestrictionGroup',
        'description' => 'Description',
        'discountAccount' => 'DiscountAccount',
        'discountSubaccount' => 'DiscountSubaccount',
        'enableCurrencyOverride' => 'EnableCurrencyOverride',
        'enableRateOverride' => 'EnableRateOverride',
        'enableWriteOffs' => 'EnableWriteOffs',
        'entityUsageType' => 'EntityUsageType',
        'freightAccount' => 'FreightAccount',
        'freightSubaccount' => 'FreightSubaccount',
        'groupDocumentDiscountLimit' => 'GroupDocumentDiscountLimit',
        'lastModifiedDateTime' => 'LastModifiedDateTime',
        'miscAccount' => 'MiscAccount',
        'miscSubaccount' => 'MiscSubaccount',
        'multiCurrencyStatements' => 'MultiCurrencyStatements',
        'overdueChargeID' => 'OverdueChargeID',
        'overLimitAmount' => 'OverLimitAmount',
        'paymentMethod' => 'PaymentMethod',
        'prepaymentAccount' => 'PrepaymentAccount',
        'prepaymentSubaccount' => 'PrepaymentSubaccount',
        'printDunningLetters' => 'PrintDunningLetters',
        'printInvoices' => 'PrintInvoices',
        'printStatements' => 'PrintStatements',
        'requireEntityUsageType' => 'RequireEntityUsageType',
        'requireTaxZone' => 'RequireTaxZone',
        'salesAccount' => 'SalesAccount',
        'salespersonID' => 'SalespersonID',
        'salesSubaccount' => 'SalesSubaccount',
        'sendDunningLettersbyEmail' => 'SendDunningLettersbyEmail',
        'sendInvoicesbyEmail' => 'SendInvoicesbyEmail',
        'sendStatementsByEmail' => 'SendStatementsByEmail',
        'shippingRule' => 'ShippingRule',
        'shippingTerms' => 'ShippingTerms',
        'shipVia' => 'ShipVia',
        'statementCycleID' => 'StatementCycleID',
        'statementType' => 'StatementType',
        'taxZoneID' => 'TaxZoneID',
        'terms' => 'Terms',
        'unrealizedGainAccount' => 'UnrealizedGainAccount',
        'unrealizedGainSubaccount' => 'UnrealizedGainSubaccount',
        'unrealizedLossAccount' => 'UnrealizedLossAccount',
        'unrealizedLossSubaccount' => 'UnrealizedLossSubaccount',
        'writeOffLimit' => 'WriteOffLimit'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'applyOverdueCharges' => 'setApplyOverdueCharges',
        'aRAccount' => 'setARAccount',
        'aRSubaccount' => 'setARSubaccount',
        'attributes' => 'setAttributes',
        'autoApplyPayments' => 'setAutoApplyPayments',
        'cashDiscountAccount' => 'setCashDiscountAccount',
        'cashDiscountSubaccount' => 'setCashDiscountSubaccount',
        'classID' => 'setClassID',
        'cOGSAccount' => 'setCOGSAccount',
        'cOGSSubaccount' => 'setCOGSSubaccount',
        'country' => 'setCountry',
        'createdDateTime' => 'setCreatedDateTime',
        'creditDaysPastDue' => 'setCreditDaysPastDue',
        'creditLimit' => 'setCreditLimit',
        'creditVerification' => 'setCreditVerification',
        'currencyID' => 'setCurrencyID',
        'currencyRateType' => 'setCurrencyRateType',
        'defaultLocationIDfromBranch' => 'setDefaultLocationIDfromBranch',
        'defaultRestrictionGroup' => 'setDefaultRestrictionGroup',
        'description' => 'setDescription',
        'discountAccount' => 'setDiscountAccount',
        'discountSubaccount' => 'setDiscountSubaccount',
        'enableCurrencyOverride' => 'setEnableCurrencyOverride',
        'enableRateOverride' => 'setEnableRateOverride',
        'enableWriteOffs' => 'setEnableWriteOffs',
        'entityUsageType' => 'setEntityUsageType',
        'freightAccount' => 'setFreightAccount',
        'freightSubaccount' => 'setFreightSubaccount',
        'groupDocumentDiscountLimit' => 'setGroupDocumentDiscountLimit',
        'lastModifiedDateTime' => 'setLastModifiedDateTime',
        'miscAccount' => 'setMiscAccount',
        'miscSubaccount' => 'setMiscSubaccount',
        'multiCurrencyStatements' => 'setMultiCurrencyStatements',
        'overdueChargeID' => 'setOverdueChargeID',
        'overLimitAmount' => 'setOverLimitAmount',
        'paymentMethod' => 'setPaymentMethod',
        'prepaymentAccount' => 'setPrepaymentAccount',
        'prepaymentSubaccount' => 'setPrepaymentSubaccount',
        'printDunningLetters' => 'setPrintDunningLetters',
        'printInvoices' => 'setPrintInvoices',
        'printStatements' => 'setPrintStatements',
        'requireEntityUsageType' => 'setRequireEntityUsageType',
        'requireTaxZone' => 'setRequireTaxZone',
        'salesAccount' => 'setSalesAccount',
        'salespersonID' => 'setSalespersonID',
        'salesSubaccount' => 'setSalesSubaccount',
        'sendDunningLettersbyEmail' => 'setSendDunningLettersbyEmail',
        'sendInvoicesbyEmail' => 'setSendInvoicesbyEmail',
        'sendStatementsByEmail' => 'setSendStatementsByEmail',
        'shippingRule' => 'setShippingRule',
        'shippingTerms' => 'setShippingTerms',
        'shipVia' => 'setShipVia',
        'statementCycleID' => 'setStatementCycleID',
        'statementType' => 'setStatementType',
        'taxZoneID' => 'setTaxZoneID',
        'terms' => 'setTerms',
        'unrealizedGainAccount' => 'setUnrealizedGainAccount',
        'unrealizedGainSubaccount' => 'setUnrealizedGainSubaccount',
        'unrealizedLossAccount' => 'setUnrealizedLossAccount',
        'unrealizedLossSubaccount' => 'setUnrealizedLossSubaccount',
        'writeOffLimit' => 'setWriteOffLimit'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'applyOverdueCharges' => 'getApplyOverdueCharges',
        'aRAccount' => 'getARAccount',
        'aRSubaccount' => 'getARSubaccount',
        'attributes' => 'getAttributes',
        'autoApplyPayments' => 'getAutoApplyPayments',
        'cashDiscountAccount' => 'getCashDiscountAccount',
        'cashDiscountSubaccount' => 'getCashDiscountSubaccount',
        'classID' => 'getClassID',
        'cOGSAccount' => 'getCOGSAccount',
        'cOGSSubaccount' => 'getCOGSSubaccount',
        'country' => 'getCountry',
        'createdDateTime' => 'getCreatedDateTime',
        'creditDaysPastDue' => 'getCreditDaysPastDue',
        'creditLimit' => 'getCreditLimit',
        'creditVerification' => 'getCreditVerification',
        'currencyID' => 'getCurrencyID',
        'currencyRateType' => 'getCurrencyRateType',
        'defaultLocationIDfromBranch' => 'getDefaultLocationIDfromBranch',
        'defaultRestrictionGroup' => 'getDefaultRestrictionGroup',
        'description' => 'getDescription',
        'discountAccount' => 'getDiscountAccount',
        'discountSubaccount' => 'getDiscountSubaccount',
        'enableCurrencyOverride' => 'getEnableCurrencyOverride',
        'enableRateOverride' => 'getEnableRateOverride',
        'enableWriteOffs' => 'getEnableWriteOffs',
        'entityUsageType' => 'getEntityUsageType',
        'freightAccount' => 'getFreightAccount',
        'freightSubaccount' => 'getFreightSubaccount',
        'groupDocumentDiscountLimit' => 'getGroupDocumentDiscountLimit',
        'lastModifiedDateTime' => 'getLastModifiedDateTime',
        'miscAccount' => 'getMiscAccount',
        'miscSubaccount' => 'getMiscSubaccount',
        'multiCurrencyStatements' => 'getMultiCurrencyStatements',
        'overdueChargeID' => 'getOverdueChargeID',
        'overLimitAmount' => 'getOverLimitAmount',
        'paymentMethod' => 'getPaymentMethod',
        'prepaymentAccount' => 'getPrepaymentAccount',
        'prepaymentSubaccount' => 'getPrepaymentSubaccount',
        'printDunningLetters' => 'getPrintDunningLetters',
        'printInvoices' => 'getPrintInvoices',
        'printStatements' => 'getPrintStatements',
        'requireEntityUsageType' => 'getRequireEntityUsageType',
        'requireTaxZone' => 'getRequireTaxZone',
        'salesAccount' => 'getSalesAccount',
        'salespersonID' => 'getSalespersonID',
        'salesSubaccount' => 'getSalesSubaccount',
        'sendDunningLettersbyEmail' => 'getSendDunningLettersbyEmail',
        'sendInvoicesbyEmail' => 'getSendInvoicesbyEmail',
        'sendStatementsByEmail' => 'getSendStatementsByEmail',
        'shippingRule' => 'getShippingRule',
        'shippingTerms' => 'getShippingTerms',
        'shipVia' => 'getShipVia',
        'statementCycleID' => 'getStatementCycleID',
        'statementType' => 'getStatementType',
        'taxZoneID' => 'getTaxZoneID',
        'terms' => 'getTerms',
        'unrealizedGainAccount' => 'getUnrealizedGainAccount',
        'unrealizedGainSubaccount' => 'getUnrealizedGainSubaccount',
        'unrealizedLossAccount' => 'getUnrealizedLossAccount',
        'unrealizedLossSubaccount' => 'getUnrealizedLossSubaccount',
        'writeOffLimit' => 'getWriteOffLimit'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['applyOverdueCharges'] = isset($data['applyOverdueCharges']) ? $data['applyOverdueCharges'] : null;
        $this->container['aRAccount'] = isset($data['aRAccount']) ? $data['aRAccount'] : null;
        $this->container['aRSubaccount'] = isset($data['aRSubaccount']) ? $data['aRSubaccount'] : null;
        $this->container['attributes'] = isset($data['attributes']) ? $data['attributes'] : null;
        $this->container['autoApplyPayments'] = isset($data['autoApplyPayments']) ? $data['autoApplyPayments'] : null;
        $this->container['cashDiscountAccount'] = isset($data['cashDiscountAccount']) ? $data['cashDiscountAccount'] : null;
        $this->container['cashDiscountSubaccount'] = isset($data['cashDiscountSubaccount']) ? $data['cashDiscountSubaccount'] : null;
        $this->container['classID'] = isset($data['classID']) ? $data['classID'] : null;
        $this->container['cOGSAccount'] = isset($data['cOGSAccount']) ? $data['cOGSAccount'] : null;
        $this->container['cOGSSubaccount'] = isset($data['cOGSSubaccount']) ? $data['cOGSSubaccount'] : null;
        $this->container['country'] = isset($data['country']) ? $data['country'] : null;
        $this->container['createdDateTime'] = isset($data['createdDateTime']) ? $data['createdDateTime'] : null;
        $this->container['creditDaysPastDue'] = isset($data['creditDaysPastDue']) ? $data['creditDaysPastDue'] : null;
        $this->container['creditLimit'] = isset($data['creditLimit']) ? $data['creditLimit'] : null;
        $this->container['creditVerification'] = isset($data['creditVerification']) ? $data['creditVerification'] : null;
        $this->container['currencyID'] = isset($data['currencyID']) ? $data['currencyID'] : null;
        $this->container['currencyRateType'] = isset($data['currencyRateType']) ? $data['currencyRateType'] : null;
        $this->container['defaultLocationIDfromBranch'] = isset($data['defaultLocationIDfromBranch']) ? $data['defaultLocationIDfromBranch'] : null;
        $this->container['defaultRestrictionGroup'] = isset($data['defaultRestrictionGroup']) ? $data['defaultRestrictionGroup'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['discountAccount'] = isset($data['discountAccount']) ? $data['discountAccount'] : null;
        $this->container['discountSubaccount'] = isset($data['discountSubaccount']) ? $data['discountSubaccount'] : null;
        $this->container['enableCurrencyOverride'] = isset($data['enableCurrencyOverride']) ? $data['enableCurrencyOverride'] : null;
        $this->container['enableRateOverride'] = isset($data['enableRateOverride']) ? $data['enableRateOverride'] : null;
        $this->container['enableWriteOffs'] = isset($data['enableWriteOffs']) ? $data['enableWriteOffs'] : null;
        $this->container['entityUsageType'] = isset($data['entityUsageType']) ? $data['entityUsageType'] : null;
        $this->container['freightAccount'] = isset($data['freightAccount']) ? $data['freightAccount'] : null;
        $this->container['freightSubaccount'] = isset($data['freightSubaccount']) ? $data['freightSubaccount'] : null;
        $this->container['groupDocumentDiscountLimit'] = isset($data['groupDocumentDiscountLimit']) ? $data['groupDocumentDiscountLimit'] : null;
        $this->container['lastModifiedDateTime'] = isset($data['lastModifiedDateTime']) ? $data['lastModifiedDateTime'] : null;
        $this->container['miscAccount'] = isset($data['miscAccount']) ? $data['miscAccount'] : null;
        $this->container['miscSubaccount'] = isset($data['miscSubaccount']) ? $data['miscSubaccount'] : null;
        $this->container['multiCurrencyStatements'] = isset($data['multiCurrencyStatements']) ? $data['multiCurrencyStatements'] : null;
        $this->container['overdueChargeID'] = isset($data['overdueChargeID']) ? $data['overdueChargeID'] : null;
        $this->container['overLimitAmount'] = isset($data['overLimitAmount']) ? $data['overLimitAmount'] : null;
        $this->container['paymentMethod'] = isset($data['paymentMethod']) ? $data['paymentMethod'] : null;
        $this->container['prepaymentAccount'] = isset($data['prepaymentAccount']) ? $data['prepaymentAccount'] : null;
        $this->container['prepaymentSubaccount'] = isset($data['prepaymentSubaccount']) ? $data['prepaymentSubaccount'] : null;
        $this->container['printDunningLetters'] = isset($data['printDunningLetters']) ? $data['printDunningLetters'] : null;
        $this->container['printInvoices'] = isset($data['printInvoices']) ? $data['printInvoices'] : null;
        $this->container['printStatements'] = isset($data['printStatements']) ? $data['printStatements'] : null;
        $this->container['requireEntityUsageType'] = isset($data['requireEntityUsageType']) ? $data['requireEntityUsageType'] : null;
        $this->container['requireTaxZone'] = isset($data['requireTaxZone']) ? $data['requireTaxZone'] : null;
        $this->container['salesAccount'] = isset($data['salesAccount']) ? $data['salesAccount'] : null;
        $this->container['salespersonID'] = isset($data['salespersonID']) ? $data['salespersonID'] : null;
        $this->container['salesSubaccount'] = isset($data['salesSubaccount']) ? $data['salesSubaccount'] : null;
        $this->container['sendDunningLettersbyEmail'] = isset($data['sendDunningLettersbyEmail']) ? $data['sendDunningLettersbyEmail'] : null;
        $this->container['sendInvoicesbyEmail'] = isset($data['sendInvoicesbyEmail']) ? $data['sendInvoicesbyEmail'] : null;
        $this->container['sendStatementsByEmail'] = isset($data['sendStatementsByEmail']) ? $data['sendStatementsByEmail'] : null;
        $this->container['shippingRule'] = isset($data['shippingRule']) ? $data['shippingRule'] : null;
        $this->container['shippingTerms'] = isset($data['shippingTerms']) ? $data['shippingTerms'] : null;
        $this->container['shipVia'] = isset($data['shipVia']) ? $data['shipVia'] : null;
        $this->container['statementCycleID'] = isset($data['statementCycleID']) ? $data['statementCycleID'] : null;
        $this->container['statementType'] = isset($data['statementType']) ? $data['statementType'] : null;
        $this->container['taxZoneID'] = isset($data['taxZoneID']) ? $data['taxZoneID'] : null;
        $this->container['terms'] = isset($data['terms']) ? $data['terms'] : null;
        $this->container['unrealizedGainAccount'] = isset($data['unrealizedGainAccount']) ? $data['unrealizedGainAccount'] : null;
        $this->container['unrealizedGainSubaccount'] = isset($data['unrealizedGainSubaccount']) ? $data['unrealizedGainSubaccount'] : null;
        $this->container['unrealizedLossAccount'] = isset($data['unrealizedLossAccount']) ? $data['unrealizedLossAccount'] : null;
        $this->container['unrealizedLossSubaccount'] = isset($data['unrealizedLossSubaccount']) ? $data['unrealizedLossSubaccount'] : null;
        $this->container['writeOffLimit'] = isset($data['writeOffLimit']) ? $data['writeOffLimit'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets applyOverdueCharges
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getApplyOverdueCharges()
    {
        return $this->container['applyOverdueCharges'];
    }

    /**
     * Sets applyOverdueCharges
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $applyOverdueCharges applyOverdueCharges
     *
     * @return $this
     */
    public function setApplyOverdueCharges($applyOverdueCharges)
    {
        $this->container['applyOverdueCharges'] = $applyOverdueCharges;

        return $this;
    }

    /**
     * Gets aRAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getARAccount()
    {
        return $this->container['aRAccount'];
    }

    /**
     * Sets aRAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $aRAccount aRAccount
     *
     * @return $this
     */
    public function setARAccount($aRAccount)
    {
        $this->container['aRAccount'] = $aRAccount;

        return $this;
    }

    /**
     * Gets aRSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getARSubaccount()
    {
        return $this->container['aRSubaccount'];
    }

    /**
     * Sets aRSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $aRSubaccount aRSubaccount
     *
     * @return $this
     */
    public function setARSubaccount($aRSubaccount)
    {
        $this->container['aRSubaccount'] = $aRSubaccount;

        return $this;
    }

    /**
     * Gets attributes
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BusinessAccountClassAttributeDetailModel[]
     */
    public function getAttributes()
    {
        return $this->container['attributes'];
    }

    /**
     * Sets attributes
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BusinessAccountClassAttributeDetailModel[] $attributes attributes
     *
     * @return $this
     */
    public function setAttributes($attributes)
    {
        $this->container['attributes'] = $attributes;

        return $this;
    }

    /**
     * Gets autoApplyPayments
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getAutoApplyPayments()
    {
        return $this->container['autoApplyPayments'];
    }

    /**
     * Sets autoApplyPayments
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $autoApplyPayments autoApplyPayments
     *
     * @return $this
     */
    public function setAutoApplyPayments($autoApplyPayments)
    {
        $this->container['autoApplyPayments'] = $autoApplyPayments;

        return $this;
    }

    /**
     * Gets cashDiscountAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCashDiscountAccount()
    {
        return $this->container['cashDiscountAccount'];
    }

    /**
     * Sets cashDiscountAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $cashDiscountAccount cashDiscountAccount
     *
     * @return $this
     */
    public function setCashDiscountAccount($cashDiscountAccount)
    {
        $this->container['cashDiscountAccount'] = $cashDiscountAccount;

        return $this;
    }

    /**
     * Gets cashDiscountSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCashDiscountSubaccount()
    {
        return $this->container['cashDiscountSubaccount'];
    }

    /**
     * Sets cashDiscountSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $cashDiscountSubaccount cashDiscountSubaccount
     *
     * @return $this
     */
    public function setCashDiscountSubaccount($cashDiscountSubaccount)
    {
        $this->container['cashDiscountSubaccount'] = $cashDiscountSubaccount;

        return $this;
    }

    /**
     * Gets classID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getClassID()
    {
        return $this->container['classID'];
    }

    /**
     * Sets classID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $classID classID
     *
     * @return $this
     */
    public function setClassID($classID)
    {
        $this->container['classID'] = $classID;

        return $this;
    }

    /**
     * Gets cOGSAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCOGSAccount()
    {
        return $this->container['cOGSAccount'];
    }

    /**
     * Sets cOGSAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $cOGSAccount cOGSAccount
     *
     * @return $this
     */
    public function setCOGSAccount($cOGSAccount)
    {
        $this->container['cOGSAccount'] = $cOGSAccount;

        return $this;
    }

    /**
     * Gets cOGSSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCOGSSubaccount()
    {
        return $this->container['cOGSSubaccount'];
    }

    /**
     * Sets cOGSSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $cOGSSubaccount cOGSSubaccount
     *
     * @return $this
     */
    public function setCOGSSubaccount($cOGSSubaccount)
    {
        $this->container['cOGSSubaccount'] = $cOGSSubaccount;

        return $this;
    }

    /**
     * Gets country
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $country country
     *
     * @return $this
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets createdDateTime
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getCreatedDateTime()
    {
        return $this->container['createdDateTime'];
    }

    /**
     * Sets createdDateTime
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $createdDateTime createdDateTime
     *
     * @return $this
     */
    public function setCreatedDateTime($createdDateTime)
    {
        $this->container['createdDateTime'] = $createdDateTime;

        return $this;
    }

    /**
     * Gets creditDaysPastDue
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel
     */
    public function getCreditDaysPastDue()
    {
        return $this->container['creditDaysPastDue'];
    }

    /**
     * Sets creditDaysPastDue
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\ShortValueModel $creditDaysPastDue creditDaysPastDue
     *
     * @return $this
     */
    public function setCreditDaysPastDue($creditDaysPastDue)
    {
        $this->container['creditDaysPastDue'] = $creditDaysPastDue;

        return $this;
    }

    /**
     * Gets creditLimit
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getCreditLimit()
    {
        return $this->container['creditLimit'];
    }

    /**
     * Sets creditLimit
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $creditLimit creditLimit
     *
     * @return $this
     */
    public function setCreditLimit($creditLimit)
    {
        $this->container['creditLimit'] = $creditLimit;

        return $this;
    }

    /**
     * Gets creditVerification
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCreditVerification()
    {
        return $this->container['creditVerification'];
    }

    /**
     * Sets creditVerification
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $creditVerification creditVerification
     *
     * @return $this
     */
    public function setCreditVerification($creditVerification)
    {
        $this->container['creditVerification'] = $creditVerification;

        return $this;
    }

    /**
     * Gets currencyID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCurrencyID()
    {
        return $this->container['currencyID'];
    }

    /**
     * Sets currencyID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $currencyID currencyID
     *
     * @return $this
     */
    public function setCurrencyID($currencyID)
    {
        $this->container['currencyID'] = $currencyID;

        return $this;
    }

    /**
     * Gets currencyRateType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCurrencyRateType()
    {
        return $this->container['currencyRateType'];
    }

    /**
     * Sets currencyRateType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $currencyRateType currencyRateType
     *
     * @return $this
     */
    public function setCurrencyRateType($currencyRateType)
    {
        $this->container['currencyRateType'] = $currencyRateType;

        return $this;
    }

    /**
     * Gets defaultLocationIDfromBranch
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getDefaultLocationIDfromBranch()
    {
        return $this->container['defaultLocationIDfromBranch'];
    }

    /**
     * Sets defaultLocationIDfromBranch
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $defaultLocationIDfromBranch defaultLocationIDfromBranch
     *
     * @return $this
     */
    public function setDefaultLocationIDfromBranch($defaultLocationIDfromBranch)
    {
        $this->container['defaultLocationIDfromBranch'] = $defaultLocationIDfromBranch;

        return $this;
    }

    /**
     * Gets defaultRestrictionGroup
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDefaultRestrictionGroup()
    {
        return $this->container['defaultRestrictionGroup'];
    }

    /**
     * Sets defaultRestrictionGroup
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $defaultRestrictionGroup defaultRestrictionGroup
     *
     * @return $this
     */
    public function setDefaultRestrictionGroup($defaultRestrictionGroup)
    {
        $this->container['defaultRestrictionGroup'] = $defaultRestrictionGroup;

        return $this;
    }

    /**
     * Gets description
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets discountAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDiscountAccount()
    {
        return $this->container['discountAccount'];
    }

    /**
     * Sets discountAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $discountAccount discountAccount
     *
     * @return $this
     */
    public function setDiscountAccount($discountAccount)
    {
        $this->container['discountAccount'] = $discountAccount;

        return $this;
    }

    /**
     * Gets discountSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDiscountSubaccount()
    {
        return $this->container['discountSubaccount'];
    }

    /**
     * Sets discountSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $discountSubaccount discountSubaccount
     *
     * @return $this
     */
    public function setDiscountSubaccount($discountSubaccount)
    {
        $this->container['discountSubaccount'] = $discountSubaccount;

        return $this;
    }

    /**
     * Gets enableCurrencyOverride
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getEnableCurrencyOverride()
    {
        return $this->container['enableCurrencyOverride'];
    }

    /**
     * Sets enableCurrencyOverride
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $enableCurrencyOverride enableCurrencyOverride
     *
     * @return $this
     */
    public function setEnableCurrencyOverride($enableCurrencyOverride)
    {
        $this->container['enableCurrencyOverride'] = $enableCurrencyOverride;

        return $this;
    }

    /**
     * Gets enableRateOverride
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getEnableRateOverride()
    {
        return $this->container['enableRateOverride'];
    }

    /**
     * Sets enableRateOverride
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $enableRateOverride enableRateOverride
     *
     * @return $this
     */
    public function setEnableRateOverride($enableRateOverride)
    {
        $this->container['enableRateOverride'] = $enableRateOverride;

        return $this;
    }

    /**
     * Gets enableWriteOffs
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getEnableWriteOffs()
    {
        return $this->container['enableWriteOffs'];
    }

    /**
     * Sets enableWriteOffs
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $enableWriteOffs enableWriteOffs
     *
     * @return $this
     */
    public function setEnableWriteOffs($enableWriteOffs)
    {
        $this->container['enableWriteOffs'] = $enableWriteOffs;

        return $this;
    }

    /**
     * Gets entityUsageType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getEntityUsageType()
    {
        return $this->container['entityUsageType'];
    }

    /**
     * Sets entityUsageType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $entityUsageType entityUsageType
     *
     * @return $this
     */
    public function setEntityUsageType($entityUsageType)
    {
        $this->container['entityUsageType'] = $entityUsageType;

        return $this;
    }

    /**
     * Gets freightAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getFreightAccount()
    {
        return $this->container['freightAccount'];
    }

    /**
     * Sets freightAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $freightAccount freightAccount
     *
     * @return $this
     */
    public function setFreightAccount($freightAccount)
    {
        $this->container['freightAccount'] = $freightAccount;

        return $this;
    }

    /**
     * Gets freightSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getFreightSubaccount()
    {
        return $this->container['freightSubaccount'];
    }

    /**
     * Sets freightSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $freightSubaccount freightSubaccount
     *
     * @return $this
     */
    public function setFreightSubaccount($freightSubaccount)
    {
        $this->container['freightSubaccount'] = $freightSubaccount;

        return $this;
    }

    /**
     * Gets groupDocumentDiscountLimit
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getGroupDocumentDiscountLimit()
    {
        return $this->container['groupDocumentDiscountLimit'];
    }

    /**
     * Sets groupDocumentDiscountLimit
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $groupDocumentDiscountLimit groupDocumentDiscountLimit
     *
     * @return $this
     */
    public function setGroupDocumentDiscountLimit($groupDocumentDiscountLimit)
    {
        $this->container['groupDocumentDiscountLimit'] = $groupDocumentDiscountLimit;

        return $this;
    }

    /**
     * Gets lastModifiedDateTime
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getLastModifiedDateTime()
    {
        return $this->container['lastModifiedDateTime'];
    }

    /**
     * Sets lastModifiedDateTime
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $lastModifiedDateTime lastModifiedDateTime
     *
     * @return $this
     */
    public function setLastModifiedDateTime($lastModifiedDateTime)
    {
        $this->container['lastModifiedDateTime'] = $lastModifiedDateTime;

        return $this;
    }

    /**
     * Gets miscAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getMiscAccount()
    {
        return $this->container['miscAccount'];
    }

    /**
     * Sets miscAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $miscAccount miscAccount
     *
     * @return $this
     */
    public function setMiscAccount($miscAccount)
    {
        $this->container['miscAccount'] = $miscAccount;

        return $this;
    }

    /**
     * Gets miscSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getMiscSubaccount()
    {
        return $this->container['miscSubaccount'];
    }

    /**
     * Sets miscSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $miscSubaccount miscSubaccount
     *
     * @return $this
     */
    public function setMiscSubaccount($miscSubaccount)
    {
        $this->container['miscSubaccount'] = $miscSubaccount;

        return $this;
    }

    /**
     * Gets multiCurrencyStatements
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getMultiCurrencyStatements()
    {
        return $this->container['multiCurrencyStatements'];
    }

    /**
     * Sets multiCurrencyStatements
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $multiCurrencyStatements multiCurrencyStatements
     *
     * @return $this
     */
    public function setMultiCurrencyStatements($multiCurrencyStatements)
    {
        $this->container['multiCurrencyStatements'] = $multiCurrencyStatements;

        return $this;
    }

    /**
     * Gets overdueChargeID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getOverdueChargeID()
    {
        return $this->container['overdueChargeID'];
    }

    /**
     * Sets overdueChargeID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $overdueChargeID overdueChargeID
     *
     * @return $this
     */
    public function setOverdueChargeID($overdueChargeID)
    {
        $this->container['overdueChargeID'] = $overdueChargeID;

        return $this;
    }

    /**
     * Gets overLimitAmount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getOverLimitAmount()
    {
        return $this->container['overLimitAmount'];
    }

    /**
     * Sets overLimitAmount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $overLimitAmount overLimitAmount
     *
     * @return $this
     */
    public function setOverLimitAmount($overLimitAmount)
    {
        $this->container['overLimitAmount'] = $overLimitAmount;

        return $this;
    }

    /**
     * Gets paymentMethod
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPaymentMethod()
    {
        return $this->container['paymentMethod'];
    }

    /**
     * Sets paymentMethod
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $paymentMethod paymentMethod
     *
     * @return $this
     */
    public function setPaymentMethod($paymentMethod)
    {
        $this->container['paymentMethod'] = $paymentMethod;

        return $this;
    }

    /**
     * Gets prepaymentAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPrepaymentAccount()
    {
        return $this->container['prepaymentAccount'];
    }

    /**
     * Sets prepaymentAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $prepaymentAccount prepaymentAccount
     *
     * @return $this
     */
    public function setPrepaymentAccount($prepaymentAccount)
    {
        $this->container['prepaymentAccount'] = $prepaymentAccount;

        return $this;
    }

    /**
     * Gets prepaymentSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPrepaymentSubaccount()
    {
        return $this->container['prepaymentSubaccount'];
    }

    /**
     * Sets prepaymentSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $prepaymentSubaccount prepaymentSubaccount
     *
     * @return $this
     */
    public function setPrepaymentSubaccount($prepaymentSubaccount)
    {
        $this->container['prepaymentSubaccount'] = $prepaymentSubaccount;

        return $this;
    }

    /**
     * Gets printDunningLetters
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getPrintDunningLetters()
    {
        return $this->container['printDunningLetters'];
    }

    /**
     * Sets printDunningLetters
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $printDunningLetters printDunningLetters
     *
     * @return $this
     */
    public function setPrintDunningLetters($printDunningLetters)
    {
        $this->container['printDunningLetters'] = $printDunningLetters;

        return $this;
    }

    /**
     * Gets printInvoices
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getPrintInvoices()
    {
        return $this->container['printInvoices'];
    }

    /**
     * Sets printInvoices
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $printInvoices printInvoices
     *
     * @return $this
     */
    public function setPrintInvoices($printInvoices)
    {
        $this->container['printInvoices'] = $printInvoices;

        return $this;
    }

    /**
     * Gets printStatements
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getPrintStatements()
    {
        return $this->container['printStatements'];
    }

    /**
     * Sets printStatements
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $printStatements printStatements
     *
     * @return $this
     */
    public function setPrintStatements($printStatements)
    {
        $this->container['printStatements'] = $printStatements;

        return $this;
    }

    /**
     * Gets requireEntityUsageType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getRequireEntityUsageType()
    {
        return $this->container['requireEntityUsageType'];
    }

    /**
     * Sets requireEntityUsageType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $requireEntityUsageType requireEntityUsageType
     *
     * @return $this
     */
    public function setRequireEntityUsageType($requireEntityUsageType)
    {
        $this->container['requireEntityUsageType'] = $requireEntityUsageType;

        return $this;
    }

    /**
     * Gets requireTaxZone
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getRequireTaxZone()
    {
        return $this->container['requireTaxZone'];
    }

    /**
     * Sets requireTaxZone
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $requireTaxZone requireTaxZone
     *
     * @return $this
     */
    public function setRequireTaxZone($requireTaxZone)
    {
        $this->container['requireTaxZone'] = $requireTaxZone;

        return $this;
    }

    /**
     * Gets salesAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getSalesAccount()
    {
        return $this->container['salesAccount'];
    }

    /**
     * Sets salesAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $salesAccount salesAccount
     *
     * @return $this
     */
    public function setSalesAccount($salesAccount)
    {
        $this->container['salesAccount'] = $salesAccount;

        return $this;
    }

    /**
     * Gets salespersonID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getSalespersonID()
    {
        return $this->container['salespersonID'];
    }

    /**
     * Sets salespersonID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $salespersonID salespersonID
     *
     * @return $this
     */
    public function setSalespersonID($salespersonID)
    {
        $this->container['salespersonID'] = $salespersonID;

        return $this;
    }

    /**
     * Gets salesSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getSalesSubaccount()
    {
        return $this->container['salesSubaccount'];
    }

    /**
     * Sets salesSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $salesSubaccount salesSubaccount
     *
     * @return $this
     */
    public function setSalesSubaccount($salesSubaccount)
    {
        $this->container['salesSubaccount'] = $salesSubaccount;

        return $this;
    }

    /**
     * Gets sendDunningLettersbyEmail
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getSendDunningLettersbyEmail()
    {
        return $this->container['sendDunningLettersbyEmail'];
    }

    /**
     * Sets sendDunningLettersbyEmail
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $sendDunningLettersbyEmail sendDunningLettersbyEmail
     *
     * @return $this
     */
    public function setSendDunningLettersbyEmail($sendDunningLettersbyEmail)
    {
        $this->container['sendDunningLettersbyEmail'] = $sendDunningLettersbyEmail;

        return $this;
    }

    /**
     * Gets sendInvoicesbyEmail
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getSendInvoicesbyEmail()
    {
        return $this->container['sendInvoicesbyEmail'];
    }

    /**
     * Sets sendInvoicesbyEmail
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $sendInvoicesbyEmail sendInvoicesbyEmail
     *
     * @return $this
     */
    public function setSendInvoicesbyEmail($sendInvoicesbyEmail)
    {
        $this->container['sendInvoicesbyEmail'] = $sendInvoicesbyEmail;

        return $this;
    }

    /**
     * Gets sendStatementsByEmail
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getSendStatementsByEmail()
    {
        return $this->container['sendStatementsByEmail'];
    }

    /**
     * Sets sendStatementsByEmail
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $sendStatementsByEmail sendStatementsByEmail
     *
     * @return $this
     */
    public function setSendStatementsByEmail($sendStatementsByEmail)
    {
        $this->container['sendStatementsByEmail'] = $sendStatementsByEmail;

        return $this;
    }

    /**
     * Gets shippingRule
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getShippingRule()
    {
        return $this->container['shippingRule'];
    }

    /**
     * Sets shippingRule
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $shippingRule shippingRule
     *
     * @return $this
     */
    public function setShippingRule($shippingRule)
    {
        $this->container['shippingRule'] = $shippingRule;

        return $this;
    }

    /**
     * Gets shippingTerms
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getShippingTerms()
    {
        return $this->container['shippingTerms'];
    }

    /**
     * Sets shippingTerms
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $shippingTerms shippingTerms
     *
     * @return $this
     */
    public function setShippingTerms($shippingTerms)
    {
        $this->container['shippingTerms'] = $shippingTerms;

        return $this;
    }

    /**
     * Gets shipVia
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getShipVia()
    {
        return $this->container['shipVia'];
    }

    /**
     * Sets shipVia
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $shipVia shipVia
     *
     * @return $this
     */
    public function setShipVia($shipVia)
    {
        $this->container['shipVia'] = $shipVia;

        return $this;
    }

    /**
     * Gets statementCycleID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getStatementCycleID()
    {
        return $this->container['statementCycleID'];
    }

    /**
     * Sets statementCycleID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $statementCycleID statementCycleID
     *
     * @return $this
     */
    public function setStatementCycleID($statementCycleID)
    {
        $this->container['statementCycleID'] = $statementCycleID;

        return $this;
    }

    /**
     * Gets statementType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getStatementType()
    {
        return $this->container['statementType'];
    }

    /**
     * Sets statementType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $statementType statementType
     *
     * @return $this
     */
    public function setStatementType($statementType)
    {
        $this->container['statementType'] = $statementType;

        return $this;
    }

    /**
     * Gets taxZoneID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxZoneID()
    {
        return $this->container['taxZoneID'];
    }

    /**
     * Sets taxZoneID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxZoneID taxZoneID
     *
     * @return $this
     */
    public function setTaxZoneID($taxZoneID)
    {
        $this->container['taxZoneID'] = $taxZoneID;

        return $this;
    }

    /**
     * Gets terms
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTerms()
    {
        return $this->container['terms'];
    }

    /**
     * Sets terms
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $terms terms
     *
     * @return $this
     */
    public function setTerms($terms)
    {
        $this->container['terms'] = $terms;

        return $this;
    }

    /**
     * Gets unrealizedGainAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getUnrealizedGainAccount()
    {
        return $this->container['unrealizedGainAccount'];
    }

    /**
     * Sets unrealizedGainAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $unrealizedGainAccount unrealizedGainAccount
     *
     * @return $this
     */
    public function setUnrealizedGainAccount($unrealizedGainAccount)
    {
        $this->container['unrealizedGainAccount'] = $unrealizedGainAccount;

        return $this;
    }

    /**
     * Gets unrealizedGainSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getUnrealizedGainSubaccount()
    {
        return $this->container['unrealizedGainSubaccount'];
    }

    /**
     * Sets unrealizedGainSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $unrealizedGainSubaccount unrealizedGainSubaccount
     *
     * @return $this
     */
    public function setUnrealizedGainSubaccount($unrealizedGainSubaccount)
    {
        $this->container['unrealizedGainSubaccount'] = $unrealizedGainSubaccount;

        return $this;
    }

    /**
     * Gets unrealizedLossAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getUnrealizedLossAccount()
    {
        return $this->container['unrealizedLossAccount'];
    }

    /**
     * Sets unrealizedLossAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $unrealizedLossAccount unrealizedLossAccount
     *
     * @return $this
     */
    public function setUnrealizedLossAccount($unrealizedLossAccount)
    {
        $this->container['unrealizedLossAccount'] = $unrealizedLossAccount;

        return $this;
    }

    /**
     * Gets unrealizedLossSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getUnrealizedLossSubaccount()
    {
        return $this->container['unrealizedLossSubaccount'];
    }

    /**
     * Sets unrealizedLossSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $unrealizedLossSubaccount unrealizedLossSubaccount
     *
     * @return $this
     */
    public function setUnrealizedLossSubaccount($unrealizedLossSubaccount)
    {
        $this->container['unrealizedLossSubaccount'] = $unrealizedLossSubaccount;

        return $this;
    }

    /**
     * Gets writeOffLimit
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getWriteOffLimit()
    {
        return $this->container['writeOffLimit'];
    }

    /**
     * Sets writeOffLimit
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $writeOffLimit writeOffLimit
     *
     * @return $this
     */
    public function setWriteOffLimit($writeOffLimit)
    {
        $this->container['writeOffLimit'] = $writeOffLimit;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


