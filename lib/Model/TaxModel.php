<?php
/**
 * TaxModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * TaxModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TaxModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Tax';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'calculateOn' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'cashDiscount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'createdDateTime' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'deductibleVAT' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'description' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'enterFromTaxBill' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'excludeFromTaxonTaxCalculation' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'includeInVATExemptTotal' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'includeInVATTaxableTotal' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'lastModifiedDateTime' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'notValidAfter' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'pendingVAT' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'reverseVAT' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'statisticalVAT' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'taxAgency' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'taxClaimableAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'taxClaimableSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'taxExpenseAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'taxExpenseSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'taxID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'taxPayableAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'taxPayableSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'taxSchedule' => '\Hut6\CranaplusAcumaticaSdk\Model\TaxScheduleDetailModel[]',
        'taxType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'zones' => '\Hut6\CranaplusAcumaticaSdk\Model\TaxZoneDetailModel[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'calculateOn' => null,
        'cashDiscount' => null,
        'createdDateTime' => null,
        'deductibleVAT' => null,
        'description' => null,
        'enterFromTaxBill' => null,
        'excludeFromTaxonTaxCalculation' => null,
        'includeInVATExemptTotal' => null,
        'includeInVATTaxableTotal' => null,
        'lastModifiedDateTime' => null,
        'notValidAfter' => null,
        'pendingVAT' => null,
        'reverseVAT' => null,
        'statisticalVAT' => null,
        'taxAgency' => null,
        'taxClaimableAccount' => null,
        'taxClaimableSubaccount' => null,
        'taxExpenseAccount' => null,
        'taxExpenseSubaccount' => null,
        'taxID' => null,
        'taxPayableAccount' => null,
        'taxPayableSubaccount' => null,
        'taxSchedule' => null,
        'taxType' => null,
        'zones' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'calculateOn' => 'CalculateOn',
        'cashDiscount' => 'CashDiscount',
        'createdDateTime' => 'CreatedDateTime',
        'deductibleVAT' => 'DeductibleVAT',
        'description' => 'Description',
        'enterFromTaxBill' => 'EnterFromTaxBill',
        'excludeFromTaxonTaxCalculation' => 'ExcludeFromTaxonTaxCalculation',
        'includeInVATExemptTotal' => 'IncludeInVATExemptTotal',
        'includeInVATTaxableTotal' => 'IncludeInVATTaxableTotal',
        'lastModifiedDateTime' => 'LastModifiedDateTime',
        'notValidAfter' => 'NotValidAfter',
        'pendingVAT' => 'PendingVAT',
        'reverseVAT' => 'ReverseVAT',
        'statisticalVAT' => 'StatisticalVAT',
        'taxAgency' => 'TaxAgency',
        'taxClaimableAccount' => 'TaxClaimableAccount',
        'taxClaimableSubaccount' => 'TaxClaimableSubaccount',
        'taxExpenseAccount' => 'TaxExpenseAccount',
        'taxExpenseSubaccount' => 'TaxExpenseSubaccount',
        'taxID' => 'TaxID',
        'taxPayableAccount' => 'TaxPayableAccount',
        'taxPayableSubaccount' => 'TaxPayableSubaccount',
        'taxSchedule' => 'TaxSchedule',
        'taxType' => 'TaxType',
        'zones' => 'Zones'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'calculateOn' => 'setCalculateOn',
        'cashDiscount' => 'setCashDiscount',
        'createdDateTime' => 'setCreatedDateTime',
        'deductibleVAT' => 'setDeductibleVAT',
        'description' => 'setDescription',
        'enterFromTaxBill' => 'setEnterFromTaxBill',
        'excludeFromTaxonTaxCalculation' => 'setExcludeFromTaxonTaxCalculation',
        'includeInVATExemptTotal' => 'setIncludeInVATExemptTotal',
        'includeInVATTaxableTotal' => 'setIncludeInVATTaxableTotal',
        'lastModifiedDateTime' => 'setLastModifiedDateTime',
        'notValidAfter' => 'setNotValidAfter',
        'pendingVAT' => 'setPendingVAT',
        'reverseVAT' => 'setReverseVAT',
        'statisticalVAT' => 'setStatisticalVAT',
        'taxAgency' => 'setTaxAgency',
        'taxClaimableAccount' => 'setTaxClaimableAccount',
        'taxClaimableSubaccount' => 'setTaxClaimableSubaccount',
        'taxExpenseAccount' => 'setTaxExpenseAccount',
        'taxExpenseSubaccount' => 'setTaxExpenseSubaccount',
        'taxID' => 'setTaxID',
        'taxPayableAccount' => 'setTaxPayableAccount',
        'taxPayableSubaccount' => 'setTaxPayableSubaccount',
        'taxSchedule' => 'setTaxSchedule',
        'taxType' => 'setTaxType',
        'zones' => 'setZones'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'calculateOn' => 'getCalculateOn',
        'cashDiscount' => 'getCashDiscount',
        'createdDateTime' => 'getCreatedDateTime',
        'deductibleVAT' => 'getDeductibleVAT',
        'description' => 'getDescription',
        'enterFromTaxBill' => 'getEnterFromTaxBill',
        'excludeFromTaxonTaxCalculation' => 'getExcludeFromTaxonTaxCalculation',
        'includeInVATExemptTotal' => 'getIncludeInVATExemptTotal',
        'includeInVATTaxableTotal' => 'getIncludeInVATTaxableTotal',
        'lastModifiedDateTime' => 'getLastModifiedDateTime',
        'notValidAfter' => 'getNotValidAfter',
        'pendingVAT' => 'getPendingVAT',
        'reverseVAT' => 'getReverseVAT',
        'statisticalVAT' => 'getStatisticalVAT',
        'taxAgency' => 'getTaxAgency',
        'taxClaimableAccount' => 'getTaxClaimableAccount',
        'taxClaimableSubaccount' => 'getTaxClaimableSubaccount',
        'taxExpenseAccount' => 'getTaxExpenseAccount',
        'taxExpenseSubaccount' => 'getTaxExpenseSubaccount',
        'taxID' => 'getTaxID',
        'taxPayableAccount' => 'getTaxPayableAccount',
        'taxPayableSubaccount' => 'getTaxPayableSubaccount',
        'taxSchedule' => 'getTaxSchedule',
        'taxType' => 'getTaxType',
        'zones' => 'getZones'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['calculateOn'] = isset($data['calculateOn']) ? $data['calculateOn'] : null;
        $this->container['cashDiscount'] = isset($data['cashDiscount']) ? $data['cashDiscount'] : null;
        $this->container['createdDateTime'] = isset($data['createdDateTime']) ? $data['createdDateTime'] : null;
        $this->container['deductibleVAT'] = isset($data['deductibleVAT']) ? $data['deductibleVAT'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['enterFromTaxBill'] = isset($data['enterFromTaxBill']) ? $data['enterFromTaxBill'] : null;
        $this->container['excludeFromTaxonTaxCalculation'] = isset($data['excludeFromTaxonTaxCalculation']) ? $data['excludeFromTaxonTaxCalculation'] : null;
        $this->container['includeInVATExemptTotal'] = isset($data['includeInVATExemptTotal']) ? $data['includeInVATExemptTotal'] : null;
        $this->container['includeInVATTaxableTotal'] = isset($data['includeInVATTaxableTotal']) ? $data['includeInVATTaxableTotal'] : null;
        $this->container['lastModifiedDateTime'] = isset($data['lastModifiedDateTime']) ? $data['lastModifiedDateTime'] : null;
        $this->container['notValidAfter'] = isset($data['notValidAfter']) ? $data['notValidAfter'] : null;
        $this->container['pendingVAT'] = isset($data['pendingVAT']) ? $data['pendingVAT'] : null;
        $this->container['reverseVAT'] = isset($data['reverseVAT']) ? $data['reverseVAT'] : null;
        $this->container['statisticalVAT'] = isset($data['statisticalVAT']) ? $data['statisticalVAT'] : null;
        $this->container['taxAgency'] = isset($data['taxAgency']) ? $data['taxAgency'] : null;
        $this->container['taxClaimableAccount'] = isset($data['taxClaimableAccount']) ? $data['taxClaimableAccount'] : null;
        $this->container['taxClaimableSubaccount'] = isset($data['taxClaimableSubaccount']) ? $data['taxClaimableSubaccount'] : null;
        $this->container['taxExpenseAccount'] = isset($data['taxExpenseAccount']) ? $data['taxExpenseAccount'] : null;
        $this->container['taxExpenseSubaccount'] = isset($data['taxExpenseSubaccount']) ? $data['taxExpenseSubaccount'] : null;
        $this->container['taxID'] = isset($data['taxID']) ? $data['taxID'] : null;
        $this->container['taxPayableAccount'] = isset($data['taxPayableAccount']) ? $data['taxPayableAccount'] : null;
        $this->container['taxPayableSubaccount'] = isset($data['taxPayableSubaccount']) ? $data['taxPayableSubaccount'] : null;
        $this->container['taxSchedule'] = isset($data['taxSchedule']) ? $data['taxSchedule'] : null;
        $this->container['taxType'] = isset($data['taxType']) ? $data['taxType'] : null;
        $this->container['zones'] = isset($data['zones']) ? $data['zones'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets calculateOn
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCalculateOn()
    {
        return $this->container['calculateOn'];
    }

    /**
     * Sets calculateOn
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $calculateOn calculateOn
     *
     * @return $this
     */
    public function setCalculateOn($calculateOn)
    {
        $this->container['calculateOn'] = $calculateOn;

        return $this;
    }

    /**
     * Gets cashDiscount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCashDiscount()
    {
        return $this->container['cashDiscount'];
    }

    /**
     * Sets cashDiscount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $cashDiscount cashDiscount
     *
     * @return $this
     */
    public function setCashDiscount($cashDiscount)
    {
        $this->container['cashDiscount'] = $cashDiscount;

        return $this;
    }

    /**
     * Gets createdDateTime
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getCreatedDateTime()
    {
        return $this->container['createdDateTime'];
    }

    /**
     * Sets createdDateTime
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $createdDateTime createdDateTime
     *
     * @return $this
     */
    public function setCreatedDateTime($createdDateTime)
    {
        $this->container['createdDateTime'] = $createdDateTime;

        return $this;
    }

    /**
     * Gets deductibleVAT
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getDeductibleVAT()
    {
        return $this->container['deductibleVAT'];
    }

    /**
     * Sets deductibleVAT
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $deductibleVAT deductibleVAT
     *
     * @return $this
     */
    public function setDeductibleVAT($deductibleVAT)
    {
        $this->container['deductibleVAT'] = $deductibleVAT;

        return $this;
    }

    /**
     * Gets description
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets enterFromTaxBill
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getEnterFromTaxBill()
    {
        return $this->container['enterFromTaxBill'];
    }

    /**
     * Sets enterFromTaxBill
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $enterFromTaxBill enterFromTaxBill
     *
     * @return $this
     */
    public function setEnterFromTaxBill($enterFromTaxBill)
    {
        $this->container['enterFromTaxBill'] = $enterFromTaxBill;

        return $this;
    }

    /**
     * Gets excludeFromTaxonTaxCalculation
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getExcludeFromTaxonTaxCalculation()
    {
        return $this->container['excludeFromTaxonTaxCalculation'];
    }

    /**
     * Sets excludeFromTaxonTaxCalculation
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $excludeFromTaxonTaxCalculation excludeFromTaxonTaxCalculation
     *
     * @return $this
     */
    public function setExcludeFromTaxonTaxCalculation($excludeFromTaxonTaxCalculation)
    {
        $this->container['excludeFromTaxonTaxCalculation'] = $excludeFromTaxonTaxCalculation;

        return $this;
    }

    /**
     * Gets includeInVATExemptTotal
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getIncludeInVATExemptTotal()
    {
        return $this->container['includeInVATExemptTotal'];
    }

    /**
     * Sets includeInVATExemptTotal
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $includeInVATExemptTotal includeInVATExemptTotal
     *
     * @return $this
     */
    public function setIncludeInVATExemptTotal($includeInVATExemptTotal)
    {
        $this->container['includeInVATExemptTotal'] = $includeInVATExemptTotal;

        return $this;
    }

    /**
     * Gets includeInVATTaxableTotal
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getIncludeInVATTaxableTotal()
    {
        return $this->container['includeInVATTaxableTotal'];
    }

    /**
     * Sets includeInVATTaxableTotal
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $includeInVATTaxableTotal includeInVATTaxableTotal
     *
     * @return $this
     */
    public function setIncludeInVATTaxableTotal($includeInVATTaxableTotal)
    {
        $this->container['includeInVATTaxableTotal'] = $includeInVATTaxableTotal;

        return $this;
    }

    /**
     * Gets lastModifiedDateTime
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getLastModifiedDateTime()
    {
        return $this->container['lastModifiedDateTime'];
    }

    /**
     * Sets lastModifiedDateTime
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $lastModifiedDateTime lastModifiedDateTime
     *
     * @return $this
     */
    public function setLastModifiedDateTime($lastModifiedDateTime)
    {
        $this->container['lastModifiedDateTime'] = $lastModifiedDateTime;

        return $this;
    }

    /**
     * Gets notValidAfter
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getNotValidAfter()
    {
        return $this->container['notValidAfter'];
    }

    /**
     * Sets notValidAfter
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $notValidAfter notValidAfter
     *
     * @return $this
     */
    public function setNotValidAfter($notValidAfter)
    {
        $this->container['notValidAfter'] = $notValidAfter;

        return $this;
    }

    /**
     * Gets pendingVAT
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getPendingVAT()
    {
        return $this->container['pendingVAT'];
    }

    /**
     * Sets pendingVAT
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $pendingVAT pendingVAT
     *
     * @return $this
     */
    public function setPendingVAT($pendingVAT)
    {
        $this->container['pendingVAT'] = $pendingVAT;

        return $this;
    }

    /**
     * Gets reverseVAT
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getReverseVAT()
    {
        return $this->container['reverseVAT'];
    }

    /**
     * Sets reverseVAT
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $reverseVAT reverseVAT
     *
     * @return $this
     */
    public function setReverseVAT($reverseVAT)
    {
        $this->container['reverseVAT'] = $reverseVAT;

        return $this;
    }

    /**
     * Gets statisticalVAT
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getStatisticalVAT()
    {
        return $this->container['statisticalVAT'];
    }

    /**
     * Sets statisticalVAT
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $statisticalVAT statisticalVAT
     *
     * @return $this
     */
    public function setStatisticalVAT($statisticalVAT)
    {
        $this->container['statisticalVAT'] = $statisticalVAT;

        return $this;
    }

    /**
     * Gets taxAgency
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxAgency()
    {
        return $this->container['taxAgency'];
    }

    /**
     * Sets taxAgency
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxAgency taxAgency
     *
     * @return $this
     */
    public function setTaxAgency($taxAgency)
    {
        $this->container['taxAgency'] = $taxAgency;

        return $this;
    }

    /**
     * Gets taxClaimableAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxClaimableAccount()
    {
        return $this->container['taxClaimableAccount'];
    }

    /**
     * Sets taxClaimableAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxClaimableAccount taxClaimableAccount
     *
     * @return $this
     */
    public function setTaxClaimableAccount($taxClaimableAccount)
    {
        $this->container['taxClaimableAccount'] = $taxClaimableAccount;

        return $this;
    }

    /**
     * Gets taxClaimableSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxClaimableSubaccount()
    {
        return $this->container['taxClaimableSubaccount'];
    }

    /**
     * Sets taxClaimableSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxClaimableSubaccount taxClaimableSubaccount
     *
     * @return $this
     */
    public function setTaxClaimableSubaccount($taxClaimableSubaccount)
    {
        $this->container['taxClaimableSubaccount'] = $taxClaimableSubaccount;

        return $this;
    }

    /**
     * Gets taxExpenseAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxExpenseAccount()
    {
        return $this->container['taxExpenseAccount'];
    }

    /**
     * Sets taxExpenseAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxExpenseAccount taxExpenseAccount
     *
     * @return $this
     */
    public function setTaxExpenseAccount($taxExpenseAccount)
    {
        $this->container['taxExpenseAccount'] = $taxExpenseAccount;

        return $this;
    }

    /**
     * Gets taxExpenseSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxExpenseSubaccount()
    {
        return $this->container['taxExpenseSubaccount'];
    }

    /**
     * Sets taxExpenseSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxExpenseSubaccount taxExpenseSubaccount
     *
     * @return $this
     */
    public function setTaxExpenseSubaccount($taxExpenseSubaccount)
    {
        $this->container['taxExpenseSubaccount'] = $taxExpenseSubaccount;

        return $this;
    }

    /**
     * Gets taxID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxID()
    {
        return $this->container['taxID'];
    }

    /**
     * Sets taxID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxID taxID
     *
     * @return $this
     */
    public function setTaxID($taxID)
    {
        $this->container['taxID'] = $taxID;

        return $this;
    }

    /**
     * Gets taxPayableAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxPayableAccount()
    {
        return $this->container['taxPayableAccount'];
    }

    /**
     * Sets taxPayableAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxPayableAccount taxPayableAccount
     *
     * @return $this
     */
    public function setTaxPayableAccount($taxPayableAccount)
    {
        $this->container['taxPayableAccount'] = $taxPayableAccount;

        return $this;
    }

    /**
     * Gets taxPayableSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxPayableSubaccount()
    {
        return $this->container['taxPayableSubaccount'];
    }

    /**
     * Sets taxPayableSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxPayableSubaccount taxPayableSubaccount
     *
     * @return $this
     */
    public function setTaxPayableSubaccount($taxPayableSubaccount)
    {
        $this->container['taxPayableSubaccount'] = $taxPayableSubaccount;

        return $this;
    }

    /**
     * Gets taxSchedule
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\TaxScheduleDetailModel[]
     */
    public function getTaxSchedule()
    {
        return $this->container['taxSchedule'];
    }

    /**
     * Sets taxSchedule
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\TaxScheduleDetailModel[] $taxSchedule taxSchedule
     *
     * @return $this
     */
    public function setTaxSchedule($taxSchedule)
    {
        $this->container['taxSchedule'] = $taxSchedule;

        return $this;
    }

    /**
     * Gets taxType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxType()
    {
        return $this->container['taxType'];
    }

    /**
     * Sets taxType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxType taxType
     *
     * @return $this
     */
    public function setTaxType($taxType)
    {
        $this->container['taxType'] = $taxType;

        return $this;
    }

    /**
     * Gets zones
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\TaxZoneDetailModel[]
     */
    public function getZones()
    {
        return $this->container['zones'];
    }

    /**
     * Sets zones
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\TaxZoneDetailModel[] $zones zones
     *
     * @return $this
     */
    public function setZones($zones)
    {
        $this->container['zones'] = $zones;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


