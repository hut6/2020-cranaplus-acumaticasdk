<?php
/**
 * KitStockComponentModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * KitStockComponentModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class KitStockComponentModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'KitStockComponent';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'allowComponentQtyVariance' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'componentQty' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'maxComponentQty' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'minComponentQty' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'stockInventoryID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'subitem' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'uOM' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'allowComponentQtyVariance' => null,
        'componentQty' => null,
        'maxComponentQty' => null,
        'minComponentQty' => null,
        'stockInventoryID' => null,
        'subitem' => null,
        'uOM' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'allowComponentQtyVariance' => 'AllowComponentQtyVariance',
        'componentQty' => 'ComponentQty',
        'maxComponentQty' => 'MaxComponentQty',
        'minComponentQty' => 'MinComponentQty',
        'stockInventoryID' => 'StockInventoryID',
        'subitem' => 'Subitem',
        'uOM' => 'UOM'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'allowComponentQtyVariance' => 'setAllowComponentQtyVariance',
        'componentQty' => 'setComponentQty',
        'maxComponentQty' => 'setMaxComponentQty',
        'minComponentQty' => 'setMinComponentQty',
        'stockInventoryID' => 'setStockInventoryID',
        'subitem' => 'setSubitem',
        'uOM' => 'setUOM'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'allowComponentQtyVariance' => 'getAllowComponentQtyVariance',
        'componentQty' => 'getComponentQty',
        'maxComponentQty' => 'getMaxComponentQty',
        'minComponentQty' => 'getMinComponentQty',
        'stockInventoryID' => 'getStockInventoryID',
        'subitem' => 'getSubitem',
        'uOM' => 'getUOM'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['allowComponentQtyVariance'] = isset($data['allowComponentQtyVariance']) ? $data['allowComponentQtyVariance'] : null;
        $this->container['componentQty'] = isset($data['componentQty']) ? $data['componentQty'] : null;
        $this->container['maxComponentQty'] = isset($data['maxComponentQty']) ? $data['maxComponentQty'] : null;
        $this->container['minComponentQty'] = isset($data['minComponentQty']) ? $data['minComponentQty'] : null;
        $this->container['stockInventoryID'] = isset($data['stockInventoryID']) ? $data['stockInventoryID'] : null;
        $this->container['subitem'] = isset($data['subitem']) ? $data['subitem'] : null;
        $this->container['uOM'] = isset($data['uOM']) ? $data['uOM'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets allowComponentQtyVariance
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getAllowComponentQtyVariance()
    {
        return $this->container['allowComponentQtyVariance'];
    }

    /**
     * Sets allowComponentQtyVariance
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $allowComponentQtyVariance allowComponentQtyVariance
     *
     * @return $this
     */
    public function setAllowComponentQtyVariance($allowComponentQtyVariance)
    {
        $this->container['allowComponentQtyVariance'] = $allowComponentQtyVariance;

        return $this;
    }

    /**
     * Gets componentQty
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getComponentQty()
    {
        return $this->container['componentQty'];
    }

    /**
     * Sets componentQty
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $componentQty componentQty
     *
     * @return $this
     */
    public function setComponentQty($componentQty)
    {
        $this->container['componentQty'] = $componentQty;

        return $this;
    }

    /**
     * Gets maxComponentQty
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getMaxComponentQty()
    {
        return $this->container['maxComponentQty'];
    }

    /**
     * Sets maxComponentQty
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $maxComponentQty maxComponentQty
     *
     * @return $this
     */
    public function setMaxComponentQty($maxComponentQty)
    {
        $this->container['maxComponentQty'] = $maxComponentQty;

        return $this;
    }

    /**
     * Gets minComponentQty
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getMinComponentQty()
    {
        return $this->container['minComponentQty'];
    }

    /**
     * Sets minComponentQty
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $minComponentQty minComponentQty
     *
     * @return $this
     */
    public function setMinComponentQty($minComponentQty)
    {
        $this->container['minComponentQty'] = $minComponentQty;

        return $this;
    }

    /**
     * Gets stockInventoryID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getStockInventoryID()
    {
        return $this->container['stockInventoryID'];
    }

    /**
     * Sets stockInventoryID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $stockInventoryID stockInventoryID
     *
     * @return $this
     */
    public function setStockInventoryID($stockInventoryID)
    {
        $this->container['stockInventoryID'] = $stockInventoryID;

        return $this;
    }

    /**
     * Gets subitem
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getSubitem()
    {
        return $this->container['subitem'];
    }

    /**
     * Sets subitem
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $subitem subitem
     *
     * @return $this
     */
    public function setSubitem($subitem)
    {
        $this->container['subitem'] = $subitem;

        return $this;
    }

    /**
     * Gets uOM
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getUOM()
    {
        return $this->container['uOM'];
    }

    /**
     * Sets uOM
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $uOM uOM
     *
     * @return $this
     */
    public function setUOM($uOM)
    {
        $this->container['uOM'] = $uOM;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


