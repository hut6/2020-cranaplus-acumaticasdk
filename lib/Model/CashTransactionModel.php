<?php
/**
 * CashTransactionModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * CashTransactionModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CashTransactionModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CashTransaction';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'referenceNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'tranType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'approved' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'cashAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'controlTotal' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'currency' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'taxAmount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'roundingDiff' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'taxTotal' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'amount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'gSTExemptTotal' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'gSTTaxableTotal' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'curyViewState' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'disbursementReceipt' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'owner' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'entryType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'documentRef' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'finPeriod' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'hold' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'status' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'tranDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'description' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'details' => '\Hut6\CranaplusAcumaticaSdk\Model\CashTransactionDetailModel[]',
        'taxCalculation' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'referenceNbr' => null,
        'tranType' => null,
        'approved' => null,
        'cashAccount' => null,
        'controlTotal' => null,
        'currency' => null,
        'taxAmount' => null,
        'roundingDiff' => null,
        'taxTotal' => null,
        'amount' => null,
        'gSTExemptTotal' => null,
        'gSTTaxableTotal' => null,
        'curyViewState' => null,
        'disbursementReceipt' => null,
        'owner' => null,
        'entryType' => null,
        'documentRef' => null,
        'finPeriod' => null,
        'hold' => null,
        'status' => null,
        'tranDate' => null,
        'description' => null,
        'details' => null,
        'taxCalculation' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'referenceNbr' => 'ReferenceNbr',
        'tranType' => 'TranType',
        'approved' => 'Approved',
        'cashAccount' => 'CashAccount',
        'controlTotal' => 'ControlTotal',
        'currency' => 'Currency',
        'taxAmount' => 'TaxAmount',
        'roundingDiff' => 'RoundingDiff',
        'taxTotal' => 'TaxTotal',
        'amount' => 'Amount',
        'gSTExemptTotal' => 'GSTExemptTotal',
        'gSTTaxableTotal' => 'GSTTaxableTotal',
        'curyViewState' => 'CuryViewState',
        'disbursementReceipt' => 'DisbursementReceipt',
        'owner' => 'Owner',
        'entryType' => 'EntryType',
        'documentRef' => 'DocumentRef',
        'finPeriod' => 'FinPeriod',
        'hold' => 'Hold',
        'status' => 'Status',
        'tranDate' => 'TranDate',
        'description' => 'Description',
        'details' => 'Details',
        'taxCalculation' => 'TaxCalculation'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'referenceNbr' => 'setReferenceNbr',
        'tranType' => 'setTranType',
        'approved' => 'setApproved',
        'cashAccount' => 'setCashAccount',
        'controlTotal' => 'setControlTotal',
        'currency' => 'setCurrency',
        'taxAmount' => 'setTaxAmount',
        'roundingDiff' => 'setRoundingDiff',
        'taxTotal' => 'setTaxTotal',
        'amount' => 'setAmount',
        'gSTExemptTotal' => 'setGSTExemptTotal',
        'gSTTaxableTotal' => 'setGSTTaxableTotal',
        'curyViewState' => 'setCuryViewState',
        'disbursementReceipt' => 'setDisbursementReceipt',
        'owner' => 'setOwner',
        'entryType' => 'setEntryType',
        'documentRef' => 'setDocumentRef',
        'finPeriod' => 'setFinPeriod',
        'hold' => 'setHold',
        'status' => 'setStatus',
        'tranDate' => 'setTranDate',
        'description' => 'setDescription',
        'details' => 'setDetails',
        'taxCalculation' => 'setTaxCalculation'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'referenceNbr' => 'getReferenceNbr',
        'tranType' => 'getTranType',
        'approved' => 'getApproved',
        'cashAccount' => 'getCashAccount',
        'controlTotal' => 'getControlTotal',
        'currency' => 'getCurrency',
        'taxAmount' => 'getTaxAmount',
        'roundingDiff' => 'getRoundingDiff',
        'taxTotal' => 'getTaxTotal',
        'amount' => 'getAmount',
        'gSTExemptTotal' => 'getGSTExemptTotal',
        'gSTTaxableTotal' => 'getGSTTaxableTotal',
        'curyViewState' => 'getCuryViewState',
        'disbursementReceipt' => 'getDisbursementReceipt',
        'owner' => 'getOwner',
        'entryType' => 'getEntryType',
        'documentRef' => 'getDocumentRef',
        'finPeriod' => 'getFinPeriod',
        'hold' => 'getHold',
        'status' => 'getStatus',
        'tranDate' => 'getTranDate',
        'description' => 'getDescription',
        'details' => 'getDetails',
        'taxCalculation' => 'getTaxCalculation'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['referenceNbr'] = isset($data['referenceNbr']) ? $data['referenceNbr'] : null;
        $this->container['tranType'] = isset($data['tranType']) ? $data['tranType'] : null;
        $this->container['approved'] = isset($data['approved']) ? $data['approved'] : null;
        $this->container['cashAccount'] = isset($data['cashAccount']) ? $data['cashAccount'] : null;
        $this->container['controlTotal'] = isset($data['controlTotal']) ? $data['controlTotal'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['taxAmount'] = isset($data['taxAmount']) ? $data['taxAmount'] : null;
        $this->container['roundingDiff'] = isset($data['roundingDiff']) ? $data['roundingDiff'] : null;
        $this->container['taxTotal'] = isset($data['taxTotal']) ? $data['taxTotal'] : null;
        $this->container['amount'] = isset($data['amount']) ? $data['amount'] : null;
        $this->container['gSTExemptTotal'] = isset($data['gSTExemptTotal']) ? $data['gSTExemptTotal'] : null;
        $this->container['gSTTaxableTotal'] = isset($data['gSTTaxableTotal']) ? $data['gSTTaxableTotal'] : null;
        $this->container['curyViewState'] = isset($data['curyViewState']) ? $data['curyViewState'] : null;
        $this->container['disbursementReceipt'] = isset($data['disbursementReceipt']) ? $data['disbursementReceipt'] : null;
        $this->container['owner'] = isset($data['owner']) ? $data['owner'] : null;
        $this->container['entryType'] = isset($data['entryType']) ? $data['entryType'] : null;
        $this->container['documentRef'] = isset($data['documentRef']) ? $data['documentRef'] : null;
        $this->container['finPeriod'] = isset($data['finPeriod']) ? $data['finPeriod'] : null;
        $this->container['hold'] = isset($data['hold']) ? $data['hold'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['tranDate'] = isset($data['tranDate']) ? $data['tranDate'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['details'] = isset($data['details']) ? $data['details'] : null;
        $this->container['taxCalculation'] = isset($data['taxCalculation']) ? $data['taxCalculation'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets referenceNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getReferenceNbr()
    {
        return $this->container['referenceNbr'];
    }

    /**
     * Sets referenceNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $referenceNbr referenceNbr
     *
     * @return $this
     */
    public function setReferenceNbr($referenceNbr)
    {
        $this->container['referenceNbr'] = $referenceNbr;

        return $this;
    }

    /**
     * Gets tranType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTranType()
    {
        return $this->container['tranType'];
    }

    /**
     * Sets tranType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $tranType tranType
     *
     * @return $this
     */
    public function setTranType($tranType)
    {
        $this->container['tranType'] = $tranType;

        return $this;
    }

    /**
     * Gets approved
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getApproved()
    {
        return $this->container['approved'];
    }

    /**
     * Sets approved
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $approved approved
     *
     * @return $this
     */
    public function setApproved($approved)
    {
        $this->container['approved'] = $approved;

        return $this;
    }

    /**
     * Gets cashAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCashAccount()
    {
        return $this->container['cashAccount'];
    }

    /**
     * Sets cashAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $cashAccount cashAccount
     *
     * @return $this
     */
    public function setCashAccount($cashAccount)
    {
        $this->container['cashAccount'] = $cashAccount;

        return $this;
    }

    /**
     * Gets controlTotal
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getControlTotal()
    {
        return $this->container['controlTotal'];
    }

    /**
     * Sets controlTotal
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $controlTotal controlTotal
     *
     * @return $this
     */
    public function setControlTotal($controlTotal)
    {
        $this->container['controlTotal'] = $controlTotal;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $currency currency
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets taxAmount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getTaxAmount()
    {
        return $this->container['taxAmount'];
    }

    /**
     * Sets taxAmount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $taxAmount taxAmount
     *
     * @return $this
     */
    public function setTaxAmount($taxAmount)
    {
        $this->container['taxAmount'] = $taxAmount;

        return $this;
    }

    /**
     * Gets roundingDiff
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getRoundingDiff()
    {
        return $this->container['roundingDiff'];
    }

    /**
     * Sets roundingDiff
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $roundingDiff roundingDiff
     *
     * @return $this
     */
    public function setRoundingDiff($roundingDiff)
    {
        $this->container['roundingDiff'] = $roundingDiff;

        return $this;
    }

    /**
     * Gets taxTotal
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getTaxTotal()
    {
        return $this->container['taxTotal'];
    }

    /**
     * Sets taxTotal
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $taxTotal taxTotal
     *
     * @return $this
     */
    public function setTaxTotal($taxTotal)
    {
        $this->container['taxTotal'] = $taxTotal;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $amount amount
     *
     * @return $this
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets gSTExemptTotal
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getGSTExemptTotal()
    {
        return $this->container['gSTExemptTotal'];
    }

    /**
     * Sets gSTExemptTotal
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $gSTExemptTotal gSTExemptTotal
     *
     * @return $this
     */
    public function setGSTExemptTotal($gSTExemptTotal)
    {
        $this->container['gSTExemptTotal'] = $gSTExemptTotal;

        return $this;
    }

    /**
     * Gets gSTTaxableTotal
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getGSTTaxableTotal()
    {
        return $this->container['gSTTaxableTotal'];
    }

    /**
     * Sets gSTTaxableTotal
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $gSTTaxableTotal gSTTaxableTotal
     *
     * @return $this
     */
    public function setGSTTaxableTotal($gSTTaxableTotal)
    {
        $this->container['gSTTaxableTotal'] = $gSTTaxableTotal;

        return $this;
    }

    /**
     * Gets curyViewState
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getCuryViewState()
    {
        return $this->container['curyViewState'];
    }

    /**
     * Sets curyViewState
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $curyViewState curyViewState
     *
     * @return $this
     */
    public function setCuryViewState($curyViewState)
    {
        $this->container['curyViewState'] = $curyViewState;

        return $this;
    }

    /**
     * Gets disbursementReceipt
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDisbursementReceipt()
    {
        return $this->container['disbursementReceipt'];
    }

    /**
     * Sets disbursementReceipt
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $disbursementReceipt disbursementReceipt
     *
     * @return $this
     */
    public function setDisbursementReceipt($disbursementReceipt)
    {
        $this->container['disbursementReceipt'] = $disbursementReceipt;

        return $this;
    }

    /**
     * Gets owner
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getOwner()
    {
        return $this->container['owner'];
    }

    /**
     * Sets owner
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $owner owner
     *
     * @return $this
     */
    public function setOwner($owner)
    {
        $this->container['owner'] = $owner;

        return $this;
    }

    /**
     * Gets entryType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getEntryType()
    {
        return $this->container['entryType'];
    }

    /**
     * Sets entryType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $entryType entryType
     *
     * @return $this
     */
    public function setEntryType($entryType)
    {
        $this->container['entryType'] = $entryType;

        return $this;
    }

    /**
     * Gets documentRef
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDocumentRef()
    {
        return $this->container['documentRef'];
    }

    /**
     * Sets documentRef
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $documentRef documentRef
     *
     * @return $this
     */
    public function setDocumentRef($documentRef)
    {
        $this->container['documentRef'] = $documentRef;

        return $this;
    }

    /**
     * Gets finPeriod
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getFinPeriod()
    {
        return $this->container['finPeriod'];
    }

    /**
     * Sets finPeriod
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $finPeriod finPeriod
     *
     * @return $this
     */
    public function setFinPeriod($finPeriod)
    {
        $this->container['finPeriod'] = $finPeriod;

        return $this;
    }

    /**
     * Gets hold
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getHold()
    {
        return $this->container['hold'];
    }

    /**
     * Sets hold
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $hold hold
     *
     * @return $this
     */
    public function setHold($hold)
    {
        $this->container['hold'] = $hold;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets tranDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getTranDate()
    {
        return $this->container['tranDate'];
    }

    /**
     * Sets tranDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $tranDate tranDate
     *
     * @return $this
     */
    public function setTranDate($tranDate)
    {
        $this->container['tranDate'] = $tranDate;

        return $this;
    }

    /**
     * Gets description
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets details
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\CashTransactionDetailModel[]
     */
    public function getDetails()
    {
        return $this->container['details'];
    }

    /**
     * Sets details
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\CashTransactionDetailModel[] $details details
     *
     * @return $this
     */
    public function setDetails($details)
    {
        $this->container['details'] = $details;

        return $this;
    }

    /**
     * Gets taxCalculation
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxCalculation()
    {
        return $this->container['taxCalculation'];
    }

    /**
     * Sets taxCalculation
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxCalculation taxCalculation
     *
     * @return $this
     */
    public function setTaxCalculation($taxCalculation)
    {
        $this->container['taxCalculation'] = $taxCalculation;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


