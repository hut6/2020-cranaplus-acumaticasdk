<?php
/**
 * ProjectTransactionDetailModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Default/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.12
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;

use \ArrayAccess;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * ProjectTransactionDetailModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ProjectTransactionDetailModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ProjectTransactionDetail';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'rowNumber' => 'int',
        'note' => 'string',
        'custom' => 'map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]',
        'files' => '\Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]',
        'accountGroup' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'accountGroupDescription' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'allocated' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'amount' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'batchNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'billable' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'billableQty' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'branch' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'creditAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'creditSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'date' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'debitAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'debitSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'description' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'earningType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'employee' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'endDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'finPeriod' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'inventoryID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'location' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'multiplier' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'project' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'projectTask' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'qty' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'released' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'startDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'transactionID' => '\Hut6\CranaplusAcumaticaSdk\Model\LongValueModel',
        'unitRate' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'uOM' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'useBillableQtyInAmountFormula' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'vendorOrCustomer' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'uuid',
        'rowNumber' => 'int64',
        'note' => null,
        'custom' => null,
        'files' => null,
        'accountGroup' => null,
        'accountGroupDescription' => null,
        'allocated' => null,
        'amount' => null,
        'batchNbr' => null,
        'billable' => null,
        'billableQty' => null,
        'branch' => null,
        'creditAccount' => null,
        'creditSubaccount' => null,
        'date' => null,
        'debitAccount' => null,
        'debitSubaccount' => null,
        'description' => null,
        'earningType' => null,
        'employee' => null,
        'endDate' => null,
        'finPeriod' => null,
        'inventoryID' => null,
        'location' => null,
        'multiplier' => null,
        'project' => null,
        'projectTask' => null,
        'qty' => null,
        'released' => null,
        'startDate' => null,
        'transactionID' => null,
        'unitRate' => null,
        'uOM' => null,
        'useBillableQtyInAmountFormula' => null,
        'vendorOrCustomer' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'rowNumber' => 'rowNumber',
        'note' => 'note',
        'custom' => 'custom',
        'files' => 'files',
        'accountGroup' => 'AccountGroup',
        'accountGroupDescription' => 'AccountGroupDescription',
        'allocated' => 'Allocated',
        'amount' => 'Amount',
        'batchNbr' => 'BatchNbr',
        'billable' => 'Billable',
        'billableQty' => 'BillableQty',
        'branch' => 'Branch',
        'creditAccount' => 'CreditAccount',
        'creditSubaccount' => 'CreditSubaccount',
        'date' => 'Date',
        'debitAccount' => 'DebitAccount',
        'debitSubaccount' => 'DebitSubaccount',
        'description' => 'Description',
        'earningType' => 'EarningType',
        'employee' => 'Employee',
        'endDate' => 'EndDate',
        'finPeriod' => 'FinPeriod',
        'inventoryID' => 'InventoryID',
        'location' => 'Location',
        'multiplier' => 'Multiplier',
        'project' => 'Project',
        'projectTask' => 'ProjectTask',
        'qty' => 'Qty',
        'released' => 'Released',
        'startDate' => 'StartDate',
        'transactionID' => 'TransactionID',
        'unitRate' => 'UnitRate',
        'uOM' => 'UOM',
        'useBillableQtyInAmountFormula' => 'UseBillableQtyInAmountFormula',
        'vendorOrCustomer' => 'VendorOrCustomer'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'rowNumber' => 'setRowNumber',
        'note' => 'setNote',
        'custom' => 'setCustom',
        'files' => 'setFiles',
        'accountGroup' => 'setAccountGroup',
        'accountGroupDescription' => 'setAccountGroupDescription',
        'allocated' => 'setAllocated',
        'amount' => 'setAmount',
        'batchNbr' => 'setBatchNbr',
        'billable' => 'setBillable',
        'billableQty' => 'setBillableQty',
        'branch' => 'setBranch',
        'creditAccount' => 'setCreditAccount',
        'creditSubaccount' => 'setCreditSubaccount',
        'date' => 'setDate',
        'debitAccount' => 'setDebitAccount',
        'debitSubaccount' => 'setDebitSubaccount',
        'description' => 'setDescription',
        'earningType' => 'setEarningType',
        'employee' => 'setEmployee',
        'endDate' => 'setEndDate',
        'finPeriod' => 'setFinPeriod',
        'inventoryID' => 'setInventoryID',
        'location' => 'setLocation',
        'multiplier' => 'setMultiplier',
        'project' => 'setProject',
        'projectTask' => 'setProjectTask',
        'qty' => 'setQty',
        'released' => 'setReleased',
        'startDate' => 'setStartDate',
        'transactionID' => 'setTransactionID',
        'unitRate' => 'setUnitRate',
        'uOM' => 'setUOM',
        'useBillableQtyInAmountFormula' => 'setUseBillableQtyInAmountFormula',
        'vendorOrCustomer' => 'setVendorOrCustomer'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'rowNumber' => 'getRowNumber',
        'note' => 'getNote',
        'custom' => 'getCustom',
        'files' => 'getFiles',
        'accountGroup' => 'getAccountGroup',
        'accountGroupDescription' => 'getAccountGroupDescription',
        'allocated' => 'getAllocated',
        'amount' => 'getAmount',
        'batchNbr' => 'getBatchNbr',
        'billable' => 'getBillable',
        'billableQty' => 'getBillableQty',
        'branch' => 'getBranch',
        'creditAccount' => 'getCreditAccount',
        'creditSubaccount' => 'getCreditSubaccount',
        'date' => 'getDate',
        'debitAccount' => 'getDebitAccount',
        'debitSubaccount' => 'getDebitSubaccount',
        'description' => 'getDescription',
        'earningType' => 'getEarningType',
        'employee' => 'getEmployee',
        'endDate' => 'getEndDate',
        'finPeriod' => 'getFinPeriod',
        'inventoryID' => 'getInventoryID',
        'location' => 'getLocation',
        'multiplier' => 'getMultiplier',
        'project' => 'getProject',
        'projectTask' => 'getProjectTask',
        'qty' => 'getQty',
        'released' => 'getReleased',
        'startDate' => 'getStartDate',
        'transactionID' => 'getTransactionID',
        'unitRate' => 'getUnitRate',
        'uOM' => 'getUOM',
        'useBillableQtyInAmountFormula' => 'getUseBillableQtyInAmountFormula',
        'vendorOrCustomer' => 'getVendorOrCustomer'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['rowNumber'] = isset($data['rowNumber']) ? $data['rowNumber'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['custom'] = isset($data['custom']) ? $data['custom'] : null;
        $this->container['files'] = isset($data['files']) ? $data['files'] : null;
        $this->container['accountGroup'] = isset($data['accountGroup']) ? $data['accountGroup'] : null;
        $this->container['accountGroupDescription'] = isset($data['accountGroupDescription']) ? $data['accountGroupDescription'] : null;
        $this->container['allocated'] = isset($data['allocated']) ? $data['allocated'] : null;
        $this->container['amount'] = isset($data['amount']) ? $data['amount'] : null;
        $this->container['batchNbr'] = isset($data['batchNbr']) ? $data['batchNbr'] : null;
        $this->container['billable'] = isset($data['billable']) ? $data['billable'] : null;
        $this->container['billableQty'] = isset($data['billableQty']) ? $data['billableQty'] : null;
        $this->container['branch'] = isset($data['branch']) ? $data['branch'] : null;
        $this->container['creditAccount'] = isset($data['creditAccount']) ? $data['creditAccount'] : null;
        $this->container['creditSubaccount'] = isset($data['creditSubaccount']) ? $data['creditSubaccount'] : null;
        $this->container['date'] = isset($data['date']) ? $data['date'] : null;
        $this->container['debitAccount'] = isset($data['debitAccount']) ? $data['debitAccount'] : null;
        $this->container['debitSubaccount'] = isset($data['debitSubaccount']) ? $data['debitSubaccount'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['earningType'] = isset($data['earningType']) ? $data['earningType'] : null;
        $this->container['employee'] = isset($data['employee']) ? $data['employee'] : null;
        $this->container['endDate'] = isset($data['endDate']) ? $data['endDate'] : null;
        $this->container['finPeriod'] = isset($data['finPeriod']) ? $data['finPeriod'] : null;
        $this->container['inventoryID'] = isset($data['inventoryID']) ? $data['inventoryID'] : null;
        $this->container['location'] = isset($data['location']) ? $data['location'] : null;
        $this->container['multiplier'] = isset($data['multiplier']) ? $data['multiplier'] : null;
        $this->container['project'] = isset($data['project']) ? $data['project'] : null;
        $this->container['projectTask'] = isset($data['projectTask']) ? $data['projectTask'] : null;
        $this->container['qty'] = isset($data['qty']) ? $data['qty'] : null;
        $this->container['released'] = isset($data['released']) ? $data['released'] : null;
        $this->container['startDate'] = isset($data['startDate']) ? $data['startDate'] : null;
        $this->container['transactionID'] = isset($data['transactionID']) ? $data['transactionID'] : null;
        $this->container['unitRate'] = isset($data['unitRate']) ? $data['unitRate'] : null;
        $this->container['uOM'] = isset($data['uOM']) ? $data['uOM'] : null;
        $this->container['useBillableQtyInAmountFormula'] = isset($data['useBillableQtyInAmountFormula']) ? $data['useBillableQtyInAmountFormula'] : null;
        $this->container['vendorOrCustomer'] = isset($data['vendorOrCustomer']) ? $data['vendorOrCustomer'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets rowNumber
     *
     * @return int
     */
    public function getRowNumber()
    {
        return $this->container['rowNumber'];
    }

    /**
     * Sets rowNumber
     *
     * @param int $rowNumber rowNumber
     *
     * @return $this
     */
    public function setRowNumber($rowNumber)
    {
        $this->container['rowNumber'] = $rowNumber;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note note
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets custom
     *
     * @return map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]]
     */
    public function getCustom()
    {
        return $this->container['custom'];
    }

    /**
     * Sets custom
     *
     * @param map[string,map[string,\Hut6\CranaplusAcumaticaSdk\Model\CustomFieldModel]] $custom custom
     *
     * @return $this
     */
    public function setCustom($custom)
    {
        $this->container['custom'] = $custom;

        return $this;
    }

    /**
     * Gets files
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[]
     */
    public function getFiles()
    {
        return $this->container['files'];
    }

    /**
     * Sets files
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\FileLinkModel[] $files files
     *
     * @return $this
     */
    public function setFiles($files)
    {
        $this->container['files'] = $files;

        return $this;
    }

    /**
     * Gets accountGroup
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getAccountGroup()
    {
        return $this->container['accountGroup'];
    }

    /**
     * Sets accountGroup
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $accountGroup accountGroup
     *
     * @return $this
     */
    public function setAccountGroup($accountGroup)
    {
        $this->container['accountGroup'] = $accountGroup;

        return $this;
    }

    /**
     * Gets accountGroupDescription
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getAccountGroupDescription()
    {
        return $this->container['accountGroupDescription'];
    }

    /**
     * Sets accountGroupDescription
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $accountGroupDescription accountGroupDescription
     *
     * @return $this
     */
    public function setAccountGroupDescription($accountGroupDescription)
    {
        $this->container['accountGroupDescription'] = $accountGroupDescription;

        return $this;
    }

    /**
     * Gets allocated
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getAllocated()
    {
        return $this->container['allocated'];
    }

    /**
     * Sets allocated
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $allocated allocated
     *
     * @return $this
     */
    public function setAllocated($allocated)
    {
        $this->container['allocated'] = $allocated;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $amount amount
     *
     * @return $this
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets batchNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getBatchNbr()
    {
        return $this->container['batchNbr'];
    }

    /**
     * Sets batchNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $batchNbr batchNbr
     *
     * @return $this
     */
    public function setBatchNbr($batchNbr)
    {
        $this->container['batchNbr'] = $batchNbr;

        return $this;
    }

    /**
     * Gets billable
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getBillable()
    {
        return $this->container['billable'];
    }

    /**
     * Sets billable
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $billable billable
     *
     * @return $this
     */
    public function setBillable($billable)
    {
        $this->container['billable'] = $billable;

        return $this;
    }

    /**
     * Gets billableQty
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getBillableQty()
    {
        return $this->container['billableQty'];
    }

    /**
     * Sets billableQty
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $billableQty billableQty
     *
     * @return $this
     */
    public function setBillableQty($billableQty)
    {
        $this->container['billableQty'] = $billableQty;

        return $this;
    }

    /**
     * Gets branch
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getBranch()
    {
        return $this->container['branch'];
    }

    /**
     * Sets branch
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $branch branch
     *
     * @return $this
     */
    public function setBranch($branch)
    {
        $this->container['branch'] = $branch;

        return $this;
    }

    /**
     * Gets creditAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCreditAccount()
    {
        return $this->container['creditAccount'];
    }

    /**
     * Sets creditAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $creditAccount creditAccount
     *
     * @return $this
     */
    public function setCreditAccount($creditAccount)
    {
        $this->container['creditAccount'] = $creditAccount;

        return $this;
    }

    /**
     * Gets creditSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCreditSubaccount()
    {
        return $this->container['creditSubaccount'];
    }

    /**
     * Sets creditSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $creditSubaccount creditSubaccount
     *
     * @return $this
     */
    public function setCreditSubaccount($creditSubaccount)
    {
        $this->container['creditSubaccount'] = $creditSubaccount;

        return $this;
    }

    /**
     * Gets date
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getDate()
    {
        return $this->container['date'];
    }

    /**
     * Sets date
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $date date
     *
     * @return $this
     */
    public function setDate($date)
    {
        $this->container['date'] = $date;

        return $this;
    }

    /**
     * Gets debitAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDebitAccount()
    {
        return $this->container['debitAccount'];
    }

    /**
     * Sets debitAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $debitAccount debitAccount
     *
     * @return $this
     */
    public function setDebitAccount($debitAccount)
    {
        $this->container['debitAccount'] = $debitAccount;

        return $this;
    }

    /**
     * Gets debitSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDebitSubaccount()
    {
        return $this->container['debitSubaccount'];
    }

    /**
     * Sets debitSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $debitSubaccount debitSubaccount
     *
     * @return $this
     */
    public function setDebitSubaccount($debitSubaccount)
    {
        $this->container['debitSubaccount'] = $debitSubaccount;

        return $this;
    }

    /**
     * Gets description
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets earningType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getEarningType()
    {
        return $this->container['earningType'];
    }

    /**
     * Sets earningType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $earningType earningType
     *
     * @return $this
     */
    public function setEarningType($earningType)
    {
        $this->container['earningType'] = $earningType;

        return $this;
    }

    /**
     * Gets employee
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getEmployee()
    {
        return $this->container['employee'];
    }

    /**
     * Sets employee
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $employee employee
     *
     * @return $this
     */
    public function setEmployee($employee)
    {
        $this->container['employee'] = $employee;

        return $this;
    }

    /**
     * Gets endDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getEndDate()
    {
        return $this->container['endDate'];
    }

    /**
     * Sets endDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $endDate endDate
     *
     * @return $this
     */
    public function setEndDate($endDate)
    {
        $this->container['endDate'] = $endDate;

        return $this;
    }

    /**
     * Gets finPeriod
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getFinPeriod()
    {
        return $this->container['finPeriod'];
    }

    /**
     * Sets finPeriod
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $finPeriod finPeriod
     *
     * @return $this
     */
    public function setFinPeriod($finPeriod)
    {
        $this->container['finPeriod'] = $finPeriod;

        return $this;
    }

    /**
     * Gets inventoryID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getInventoryID()
    {
        return $this->container['inventoryID'];
    }

    /**
     * Sets inventoryID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $inventoryID inventoryID
     *
     * @return $this
     */
    public function setInventoryID($inventoryID)
    {
        $this->container['inventoryID'] = $inventoryID;

        return $this;
    }

    /**
     * Gets location
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $location location
     *
     * @return $this
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets multiplier
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getMultiplier()
    {
        return $this->container['multiplier'];
    }

    /**
     * Sets multiplier
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $multiplier multiplier
     *
     * @return $this
     */
    public function setMultiplier($multiplier)
    {
        $this->container['multiplier'] = $multiplier;

        return $this;
    }

    /**
     * Gets project
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getProject()
    {
        return $this->container['project'];
    }

    /**
     * Sets project
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $project project
     *
     * @return $this
     */
    public function setProject($project)
    {
        $this->container['project'] = $project;

        return $this;
    }

    /**
     * Gets projectTask
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getProjectTask()
    {
        return $this->container['projectTask'];
    }

    /**
     * Sets projectTask
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $projectTask projectTask
     *
     * @return $this
     */
    public function setProjectTask($projectTask)
    {
        $this->container['projectTask'] = $projectTask;

        return $this;
    }

    /**
     * Gets qty
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getQty()
    {
        return $this->container['qty'];
    }

    /**
     * Sets qty
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $qty qty
     *
     * @return $this
     */
    public function setQty($qty)
    {
        $this->container['qty'] = $qty;

        return $this;
    }

    /**
     * Gets released
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getReleased()
    {
        return $this->container['released'];
    }

    /**
     * Sets released
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $released released
     *
     * @return $this
     */
    public function setReleased($released)
    {
        $this->container['released'] = $released;

        return $this;
    }

    /**
     * Gets startDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getStartDate()
    {
        return $this->container['startDate'];
    }

    /**
     * Sets startDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $startDate startDate
     *
     * @return $this
     */
    public function setStartDate($startDate)
    {
        $this->container['startDate'] = $startDate;

        return $this;
    }

    /**
     * Gets transactionID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\LongValueModel
     */
    public function getTransactionID()
    {
        return $this->container['transactionID'];
    }

    /**
     * Sets transactionID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\LongValueModel $transactionID transactionID
     *
     * @return $this
     */
    public function setTransactionID($transactionID)
    {
        $this->container['transactionID'] = $transactionID;

        return $this;
    }

    /**
     * Gets unitRate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getUnitRate()
    {
        return $this->container['unitRate'];
    }

    /**
     * Sets unitRate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $unitRate unitRate
     *
     * @return $this
     */
    public function setUnitRate($unitRate)
    {
        $this->container['unitRate'] = $unitRate;

        return $this;
    }

    /**
     * Gets uOM
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getUOM()
    {
        return $this->container['uOM'];
    }

    /**
     * Sets uOM
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $uOM uOM
     *
     * @return $this
     */
    public function setUOM($uOM)
    {
        $this->container['uOM'] = $uOM;

        return $this;
    }

    /**
     * Gets useBillableQtyInAmountFormula
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getUseBillableQtyInAmountFormula()
    {
        return $this->container['useBillableQtyInAmountFormula'];
    }

    /**
     * Sets useBillableQtyInAmountFormula
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $useBillableQtyInAmountFormula useBillableQtyInAmountFormula
     *
     * @return $this
     */
    public function setUseBillableQtyInAmountFormula($useBillableQtyInAmountFormula)
    {
        $this->container['useBillableQtyInAmountFormula'] = $useBillableQtyInAmountFormula;

        return $this;
    }

    /**
     * Gets vendorOrCustomer
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getVendorOrCustomer()
    {
        return $this->container['vendorOrCustomer'];
    }

    /**
     * Sets vendorOrCustomer
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $vendorOrCustomer vendorOrCustomer
     *
     * @return $this
     */
    public function setVendorOrCustomer($vendorOrCustomer)
    {
        $this->container['vendorOrCustomer'] = $vendorOrCustomer;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


