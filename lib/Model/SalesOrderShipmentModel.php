<?php
/**
 * SalesOrderShipmentModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * SalesOrderShipmentModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SalesOrderShipmentModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SalesOrderShipment';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'inventoryDocType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'inventoryRefNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'invoiceNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'invoiceType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'shipmentDate' => '\Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel',
        'shipmentNbr' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'shipmentType' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'shippedQty' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'shippedVolume' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'shippedWeight' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'status' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'inventoryDocType' => null,
        'inventoryRefNbr' => null,
        'invoiceNbr' => null,
        'invoiceType' => null,
        'shipmentDate' => null,
        'shipmentNbr' => null,
        'shipmentType' => null,
        'shippedQty' => null,
        'shippedVolume' => null,
        'shippedWeight' => null,
        'status' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'inventoryDocType' => 'InventoryDocType',
        'inventoryRefNbr' => 'InventoryRefNbr',
        'invoiceNbr' => 'InvoiceNbr',
        'invoiceType' => 'InvoiceType',
        'shipmentDate' => 'ShipmentDate',
        'shipmentNbr' => 'ShipmentNbr',
        'shipmentType' => 'ShipmentType',
        'shippedQty' => 'ShippedQty',
        'shippedVolume' => 'ShippedVolume',
        'shippedWeight' => 'ShippedWeight',
        'status' => 'Status'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'inventoryDocType' => 'setInventoryDocType',
        'inventoryRefNbr' => 'setInventoryRefNbr',
        'invoiceNbr' => 'setInvoiceNbr',
        'invoiceType' => 'setInvoiceType',
        'shipmentDate' => 'setShipmentDate',
        'shipmentNbr' => 'setShipmentNbr',
        'shipmentType' => 'setShipmentType',
        'shippedQty' => 'setShippedQty',
        'shippedVolume' => 'setShippedVolume',
        'shippedWeight' => 'setShippedWeight',
        'status' => 'setStatus'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'inventoryDocType' => 'getInventoryDocType',
        'inventoryRefNbr' => 'getInventoryRefNbr',
        'invoiceNbr' => 'getInvoiceNbr',
        'invoiceType' => 'getInvoiceType',
        'shipmentDate' => 'getShipmentDate',
        'shipmentNbr' => 'getShipmentNbr',
        'shipmentType' => 'getShipmentType',
        'shippedQty' => 'getShippedQty',
        'shippedVolume' => 'getShippedVolume',
        'shippedWeight' => 'getShippedWeight',
        'status' => 'getStatus'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['inventoryDocType'] = isset($data['inventoryDocType']) ? $data['inventoryDocType'] : null;
        $this->container['inventoryRefNbr'] = isset($data['inventoryRefNbr']) ? $data['inventoryRefNbr'] : null;
        $this->container['invoiceNbr'] = isset($data['invoiceNbr']) ? $data['invoiceNbr'] : null;
        $this->container['invoiceType'] = isset($data['invoiceType']) ? $data['invoiceType'] : null;
        $this->container['shipmentDate'] = isset($data['shipmentDate']) ? $data['shipmentDate'] : null;
        $this->container['shipmentNbr'] = isset($data['shipmentNbr']) ? $data['shipmentNbr'] : null;
        $this->container['shipmentType'] = isset($data['shipmentType']) ? $data['shipmentType'] : null;
        $this->container['shippedQty'] = isset($data['shippedQty']) ? $data['shippedQty'] : null;
        $this->container['shippedVolume'] = isset($data['shippedVolume']) ? $data['shippedVolume'] : null;
        $this->container['shippedWeight'] = isset($data['shippedWeight']) ? $data['shippedWeight'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets inventoryDocType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getInventoryDocType()
    {
        return $this->container['inventoryDocType'];
    }

    /**
     * Sets inventoryDocType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $inventoryDocType inventoryDocType
     *
     * @return $this
     */
    public function setInventoryDocType($inventoryDocType)
    {
        $this->container['inventoryDocType'] = $inventoryDocType;

        return $this;
    }

    /**
     * Gets inventoryRefNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getInventoryRefNbr()
    {
        return $this->container['inventoryRefNbr'];
    }

    /**
     * Sets inventoryRefNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $inventoryRefNbr inventoryRefNbr
     *
     * @return $this
     */
    public function setInventoryRefNbr($inventoryRefNbr)
    {
        $this->container['inventoryRefNbr'] = $inventoryRefNbr;

        return $this;
    }

    /**
     * Gets invoiceNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getInvoiceNbr()
    {
        return $this->container['invoiceNbr'];
    }

    /**
     * Sets invoiceNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $invoiceNbr invoiceNbr
     *
     * @return $this
     */
    public function setInvoiceNbr($invoiceNbr)
    {
        $this->container['invoiceNbr'] = $invoiceNbr;

        return $this;
    }

    /**
     * Gets invoiceType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getInvoiceType()
    {
        return $this->container['invoiceType'];
    }

    /**
     * Sets invoiceType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $invoiceType invoiceType
     *
     * @return $this
     */
    public function setInvoiceType($invoiceType)
    {
        $this->container['invoiceType'] = $invoiceType;

        return $this;
    }

    /**
     * Gets shipmentDate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel
     */
    public function getShipmentDate()
    {
        return $this->container['shipmentDate'];
    }

    /**
     * Sets shipmentDate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DateTimeValueModel $shipmentDate shipmentDate
     *
     * @return $this
     */
    public function setShipmentDate($shipmentDate)
    {
        $this->container['shipmentDate'] = $shipmentDate;

        return $this;
    }

    /**
     * Gets shipmentNbr
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getShipmentNbr()
    {
        return $this->container['shipmentNbr'];
    }

    /**
     * Sets shipmentNbr
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $shipmentNbr shipmentNbr
     *
     * @return $this
     */
    public function setShipmentNbr($shipmentNbr)
    {
        $this->container['shipmentNbr'] = $shipmentNbr;

        return $this;
    }

    /**
     * Gets shipmentType
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getShipmentType()
    {
        return $this->container['shipmentType'];
    }

    /**
     * Sets shipmentType
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $shipmentType shipmentType
     *
     * @return $this
     */
    public function setShipmentType($shipmentType)
    {
        $this->container['shipmentType'] = $shipmentType;

        return $this;
    }

    /**
     * Gets shippedQty
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getShippedQty()
    {
        return $this->container['shippedQty'];
    }

    /**
     * Sets shippedQty
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $shippedQty shippedQty
     *
     * @return $this
     */
    public function setShippedQty($shippedQty)
    {
        $this->container['shippedQty'] = $shippedQty;

        return $this;
    }

    /**
     * Gets shippedVolume
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getShippedVolume()
    {
        return $this->container['shippedVolume'];
    }

    /**
     * Sets shippedVolume
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $shippedVolume shippedVolume
     *
     * @return $this
     */
    public function setShippedVolume($shippedVolume)
    {
        $this->container['shippedVolume'] = $shippedVolume;

        return $this;
    }

    /**
     * Gets shippedWeight
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getShippedWeight()
    {
        return $this->container['shippedWeight'];
    }

    /**
     * Sets shippedWeight
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $shippedWeight shippedWeight
     *
     * @return $this
     */
    public function setShippedWeight($shippedWeight)
    {
        $this->container['shippedWeight'] = $shippedWeight;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


