<?php
/**
 * ShipViaModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * ShipViaModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ShipViaModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ShipVia';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'calculationMethod' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'calendar' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'carrierID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'commonCarrier' => '\Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel',
        'description' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'freightExpenseAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'freightExpenseSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'freightRates' => '\Hut6\CranaplusAcumaticaSdk\Model\ShipViaFreightRateModel[]',
        'freightSalesAccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'freightSalesSubaccount' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'packages' => '\Hut6\CranaplusAcumaticaSdk\Model\ShippingBoxModel[]',
        'taxCategory' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'calculationMethod' => null,
        'calendar' => null,
        'carrierID' => null,
        'commonCarrier' => null,
        'description' => null,
        'freightExpenseAccount' => null,
        'freightExpenseSubaccount' => null,
        'freightRates' => null,
        'freightSalesAccount' => null,
        'freightSalesSubaccount' => null,
        'packages' => null,
        'taxCategory' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'calculationMethod' => 'CalculationMethod',
        'calendar' => 'Calendar',
        'carrierID' => 'CarrierID',
        'commonCarrier' => 'CommonCarrier',
        'description' => 'Description',
        'freightExpenseAccount' => 'FreightExpenseAccount',
        'freightExpenseSubaccount' => 'FreightExpenseSubaccount',
        'freightRates' => 'FreightRates',
        'freightSalesAccount' => 'FreightSalesAccount',
        'freightSalesSubaccount' => 'FreightSalesSubaccount',
        'packages' => 'Packages',
        'taxCategory' => 'TaxCategory'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'calculationMethod' => 'setCalculationMethod',
        'calendar' => 'setCalendar',
        'carrierID' => 'setCarrierID',
        'commonCarrier' => 'setCommonCarrier',
        'description' => 'setDescription',
        'freightExpenseAccount' => 'setFreightExpenseAccount',
        'freightExpenseSubaccount' => 'setFreightExpenseSubaccount',
        'freightRates' => 'setFreightRates',
        'freightSalesAccount' => 'setFreightSalesAccount',
        'freightSalesSubaccount' => 'setFreightSalesSubaccount',
        'packages' => 'setPackages',
        'taxCategory' => 'setTaxCategory'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'calculationMethod' => 'getCalculationMethod',
        'calendar' => 'getCalendar',
        'carrierID' => 'getCarrierID',
        'commonCarrier' => 'getCommonCarrier',
        'description' => 'getDescription',
        'freightExpenseAccount' => 'getFreightExpenseAccount',
        'freightExpenseSubaccount' => 'getFreightExpenseSubaccount',
        'freightRates' => 'getFreightRates',
        'freightSalesAccount' => 'getFreightSalesAccount',
        'freightSalesSubaccount' => 'getFreightSalesSubaccount',
        'packages' => 'getPackages',
        'taxCategory' => 'getTaxCategory'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['calculationMethod'] = isset($data['calculationMethod']) ? $data['calculationMethod'] : null;
        $this->container['calendar'] = isset($data['calendar']) ? $data['calendar'] : null;
        $this->container['carrierID'] = isset($data['carrierID']) ? $data['carrierID'] : null;
        $this->container['commonCarrier'] = isset($data['commonCarrier']) ? $data['commonCarrier'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['freightExpenseAccount'] = isset($data['freightExpenseAccount']) ? $data['freightExpenseAccount'] : null;
        $this->container['freightExpenseSubaccount'] = isset($data['freightExpenseSubaccount']) ? $data['freightExpenseSubaccount'] : null;
        $this->container['freightRates'] = isset($data['freightRates']) ? $data['freightRates'] : null;
        $this->container['freightSalesAccount'] = isset($data['freightSalesAccount']) ? $data['freightSalesAccount'] : null;
        $this->container['freightSalesSubaccount'] = isset($data['freightSalesSubaccount']) ? $data['freightSalesSubaccount'] : null;
        $this->container['packages'] = isset($data['packages']) ? $data['packages'] : null;
        $this->container['taxCategory'] = isset($data['taxCategory']) ? $data['taxCategory'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets calculationMethod
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCalculationMethod()
    {
        return $this->container['calculationMethod'];
    }

    /**
     * Sets calculationMethod
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $calculationMethod calculationMethod
     *
     * @return $this
     */
    public function setCalculationMethod($calculationMethod)
    {
        $this->container['calculationMethod'] = $calculationMethod;

        return $this;
    }

    /**
     * Gets calendar
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCalendar()
    {
        return $this->container['calendar'];
    }

    /**
     * Sets calendar
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $calendar calendar
     *
     * @return $this
     */
    public function setCalendar($calendar)
    {
        $this->container['calendar'] = $calendar;

        return $this;
    }

    /**
     * Gets carrierID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getCarrierID()
    {
        return $this->container['carrierID'];
    }

    /**
     * Sets carrierID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $carrierID carrierID
     *
     * @return $this
     */
    public function setCarrierID($carrierID)
    {
        $this->container['carrierID'] = $carrierID;

        return $this;
    }

    /**
     * Gets commonCarrier
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel
     */
    public function getCommonCarrier()
    {
        return $this->container['commonCarrier'];
    }

    /**
     * Sets commonCarrier
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\BooleanValueModel $commonCarrier commonCarrier
     *
     * @return $this
     */
    public function setCommonCarrier($commonCarrier)
    {
        $this->container['commonCarrier'] = $commonCarrier;

        return $this;
    }

    /**
     * Gets description
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets freightExpenseAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getFreightExpenseAccount()
    {
        return $this->container['freightExpenseAccount'];
    }

    /**
     * Sets freightExpenseAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $freightExpenseAccount freightExpenseAccount
     *
     * @return $this
     */
    public function setFreightExpenseAccount($freightExpenseAccount)
    {
        $this->container['freightExpenseAccount'] = $freightExpenseAccount;

        return $this;
    }

    /**
     * Gets freightExpenseSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getFreightExpenseSubaccount()
    {
        return $this->container['freightExpenseSubaccount'];
    }

    /**
     * Sets freightExpenseSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $freightExpenseSubaccount freightExpenseSubaccount
     *
     * @return $this
     */
    public function setFreightExpenseSubaccount($freightExpenseSubaccount)
    {
        $this->container['freightExpenseSubaccount'] = $freightExpenseSubaccount;

        return $this;
    }

    /**
     * Gets freightRates
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\ShipViaFreightRateModel[]
     */
    public function getFreightRates()
    {
        return $this->container['freightRates'];
    }

    /**
     * Sets freightRates
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\ShipViaFreightRateModel[] $freightRates freightRates
     *
     * @return $this
     */
    public function setFreightRates($freightRates)
    {
        $this->container['freightRates'] = $freightRates;

        return $this;
    }

    /**
     * Gets freightSalesAccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getFreightSalesAccount()
    {
        return $this->container['freightSalesAccount'];
    }

    /**
     * Sets freightSalesAccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $freightSalesAccount freightSalesAccount
     *
     * @return $this
     */
    public function setFreightSalesAccount($freightSalesAccount)
    {
        $this->container['freightSalesAccount'] = $freightSalesAccount;

        return $this;
    }

    /**
     * Gets freightSalesSubaccount
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getFreightSalesSubaccount()
    {
        return $this->container['freightSalesSubaccount'];
    }

    /**
     * Sets freightSalesSubaccount
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $freightSalesSubaccount freightSalesSubaccount
     *
     * @return $this
     */
    public function setFreightSalesSubaccount($freightSalesSubaccount)
    {
        $this->container['freightSalesSubaccount'] = $freightSalesSubaccount;

        return $this;
    }

    /**
     * Gets packages
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\ShippingBoxModel[]
     */
    public function getPackages()
    {
        return $this->container['packages'];
    }

    /**
     * Sets packages
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\ShippingBoxModel[] $packages packages
     *
     * @return $this
     */
    public function setPackages($packages)
    {
        $this->container['packages'] = $packages;

        return $this;
    }

    /**
     * Gets taxCategory
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getTaxCategory()
    {
        return $this->container['taxCategory'];
    }

    /**
     * Sets taxCategory
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $taxCategory taxCategory
     *
     * @return $this
     */
    public function setTaxCategory($taxCategory)
    {
        $this->container['taxCategory'] = $taxCategory;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


