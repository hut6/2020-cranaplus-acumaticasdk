<?php
/**
 * EntitlementSummaryDetailModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * EntitlementSummaryDetailModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EntitlementSummaryDetailModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'EntitlementSummaryDetail';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'department' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'accrued' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'closing' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'opening' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'entitlement' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'rate' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'taken' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'employeeIDEPEmployeeAcctCD' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'employeeName' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'payrunID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'entitlementID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'department' => null,
        'accrued' => null,
        'closing' => null,
        'opening' => null,
        'entitlement' => null,
        'rate' => null,
        'taken' => null,
        'employeeIDEPEmployeeAcctCD' => null,
        'employeeName' => null,
        'payrunID' => null,
        'entitlementID' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'department' => 'Department',
        'accrued' => 'Accrued',
        'closing' => 'Closing',
        'opening' => 'Opening',
        'entitlement' => 'Entitlement',
        'rate' => 'Rate',
        'taken' => 'Taken',
        'employeeIDEPEmployeeAcctCD' => 'EmployeeIDEPEmployee_AcctCD',
        'employeeName' => 'EmployeeName',
        'payrunID' => 'PayrunID',
        'entitlementID' => 'EntitlementID'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'department' => 'setDepartment',
        'accrued' => 'setAccrued',
        'closing' => 'setClosing',
        'opening' => 'setOpening',
        'entitlement' => 'setEntitlement',
        'rate' => 'setRate',
        'taken' => 'setTaken',
        'employeeIDEPEmployeeAcctCD' => 'setEmployeeIDEPEmployeeAcctCD',
        'employeeName' => 'setEmployeeName',
        'payrunID' => 'setPayrunID',
        'entitlementID' => 'setEntitlementID'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'department' => 'getDepartment',
        'accrued' => 'getAccrued',
        'closing' => 'getClosing',
        'opening' => 'getOpening',
        'entitlement' => 'getEntitlement',
        'rate' => 'getRate',
        'taken' => 'getTaken',
        'employeeIDEPEmployeeAcctCD' => 'getEmployeeIDEPEmployeeAcctCD',
        'employeeName' => 'getEmployeeName',
        'payrunID' => 'getPayrunID',
        'entitlementID' => 'getEntitlementID'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['department'] = isset($data['department']) ? $data['department'] : null;
        $this->container['accrued'] = isset($data['accrued']) ? $data['accrued'] : null;
        $this->container['closing'] = isset($data['closing']) ? $data['closing'] : null;
        $this->container['opening'] = isset($data['opening']) ? $data['opening'] : null;
        $this->container['entitlement'] = isset($data['entitlement']) ? $data['entitlement'] : null;
        $this->container['rate'] = isset($data['rate']) ? $data['rate'] : null;
        $this->container['taken'] = isset($data['taken']) ? $data['taken'] : null;
        $this->container['employeeIDEPEmployeeAcctCD'] = isset($data['employeeIDEPEmployeeAcctCD']) ? $data['employeeIDEPEmployeeAcctCD'] : null;
        $this->container['employeeName'] = isset($data['employeeName']) ? $data['employeeName'] : null;
        $this->container['payrunID'] = isset($data['payrunID']) ? $data['payrunID'] : null;
        $this->container['entitlementID'] = isset($data['entitlementID']) ? $data['entitlementID'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets department
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $department department
     *
     * @return $this
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets accrued
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getAccrued()
    {
        return $this->container['accrued'];
    }

    /**
     * Sets accrued
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $accrued accrued
     *
     * @return $this
     */
    public function setAccrued($accrued)
    {
        $this->container['accrued'] = $accrued;

        return $this;
    }

    /**
     * Gets closing
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getClosing()
    {
        return $this->container['closing'];
    }

    /**
     * Sets closing
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $closing closing
     *
     * @return $this
     */
    public function setClosing($closing)
    {
        $this->container['closing'] = $closing;

        return $this;
    }

    /**
     * Gets opening
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getOpening()
    {
        return $this->container['opening'];
    }

    /**
     * Sets opening
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $opening opening
     *
     * @return $this
     */
    public function setOpening($opening)
    {
        $this->container['opening'] = $opening;

        return $this;
    }

    /**
     * Gets entitlement
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getEntitlement()
    {
        return $this->container['entitlement'];
    }

    /**
     * Sets entitlement
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $entitlement entitlement
     *
     * @return $this
     */
    public function setEntitlement($entitlement)
    {
        $this->container['entitlement'] = $entitlement;

        return $this;
    }

    /**
     * Gets rate
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getRate()
    {
        return $this->container['rate'];
    }

    /**
     * Sets rate
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $rate rate
     *
     * @return $this
     */
    public function setRate($rate)
    {
        $this->container['rate'] = $rate;

        return $this;
    }

    /**
     * Gets taken
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getTaken()
    {
        return $this->container['taken'];
    }

    /**
     * Sets taken
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $taken taken
     *
     * @return $this
     */
    public function setTaken($taken)
    {
        $this->container['taken'] = $taken;

        return $this;
    }

    /**
     * Gets employeeIDEPEmployeeAcctCD
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getEmployeeIDEPEmployeeAcctCD()
    {
        return $this->container['employeeIDEPEmployeeAcctCD'];
    }

    /**
     * Sets employeeIDEPEmployeeAcctCD
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $employeeIDEPEmployeeAcctCD employeeIDEPEmployeeAcctCD
     *
     * @return $this
     */
    public function setEmployeeIDEPEmployeeAcctCD($employeeIDEPEmployeeAcctCD)
    {
        $this->container['employeeIDEPEmployeeAcctCD'] = $employeeIDEPEmployeeAcctCD;

        return $this;
    }

    /**
     * Gets employeeName
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getEmployeeName()
    {
        return $this->container['employeeName'];
    }

    /**
     * Sets employeeName
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $employeeName employeeName
     *
     * @return $this
     */
    public function setEmployeeName($employeeName)
    {
        $this->container['employeeName'] = $employeeName;

        return $this;
    }

    /**
     * Gets payrunID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getPayrunID()
    {
        return $this->container['payrunID'];
    }

    /**
     * Sets payrunID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $payrunID payrunID
     *
     * @return $this
     */
    public function setPayrunID($payrunID)
    {
        $this->container['payrunID'] = $payrunID;

        return $this;
    }

    /**
     * Gets entitlementID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getEntitlementID()
    {
        return $this->container['entitlementID'];
    }

    /**
     * Sets entitlementID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $entitlementID entitlementID
     *
     * @return $this
     */
    public function setEntitlementID($entitlementID)
    {
        $this->container['entitlementID'] = $entitlementID;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


