<?php
/**
 * InventoryAllocationInquiryModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Crana/17.200.001
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Hut6\CranaplusAcumaticaSdk\Model;
use \Hut6\CranaplusAcumaticaSdk\ObjectSerializer;

/**
 * InventoryAllocationInquiryModel Class Doc Comment
 *
 * @category Class
 * @package  Hut6\CranaplusAcumaticaSdk
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InventoryAllocationInquiryModel extends EntityModel 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'InventoryAllocationInquiry';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'available' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'availableForIssue' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'availableForShipping' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'baseUnit' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'inTransit' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'inTransitToSO' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'inventoryID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'inventoryIssues' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'inventoryReceipts' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'kitAssemblyDemand' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'kitAssemblySupply' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'location' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel',
        'onHand' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'onLocationNotAvailable' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'purchaseForSO' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'purchaseForSOPrepared' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'purchaseOrders' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'purchasePrepared' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'purchaseReceipts' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'receiptsForSO' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'results' => '\Hut6\CranaplusAcumaticaSdk\Model\InventoryAllocationRowModel[]',
        'sOAllocated' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'sOBackOrdered' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'sOBooked' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'sOPrepared' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'sOShipped' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'sOToPurchase' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'totalAddition' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'totalDeduction' => '\Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel',
        'warehouseID' => '\Hut6\CranaplusAcumaticaSdk\Model\StringValueModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'available' => null,
        'availableForIssue' => null,
        'availableForShipping' => null,
        'baseUnit' => null,
        'inTransit' => null,
        'inTransitToSO' => null,
        'inventoryID' => null,
        'inventoryIssues' => null,
        'inventoryReceipts' => null,
        'kitAssemblyDemand' => null,
        'kitAssemblySupply' => null,
        'location' => null,
        'onHand' => null,
        'onLocationNotAvailable' => null,
        'purchaseForSO' => null,
        'purchaseForSOPrepared' => null,
        'purchaseOrders' => null,
        'purchasePrepared' => null,
        'purchaseReceipts' => null,
        'receiptsForSO' => null,
        'results' => null,
        'sOAllocated' => null,
        'sOBackOrdered' => null,
        'sOBooked' => null,
        'sOPrepared' => null,
        'sOShipped' => null,
        'sOToPurchase' => null,
        'totalAddition' => null,
        'totalDeduction' => null,
        'warehouseID' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'available' => 'Available',
        'availableForIssue' => 'AvailableForIssue',
        'availableForShipping' => 'AvailableForShipping',
        'baseUnit' => 'BaseUnit',
        'inTransit' => 'InTransit',
        'inTransitToSO' => 'InTransitToSO',
        'inventoryID' => 'InventoryID',
        'inventoryIssues' => 'InventoryIssues',
        'inventoryReceipts' => 'InventoryReceipts',
        'kitAssemblyDemand' => 'KitAssemblyDemand',
        'kitAssemblySupply' => 'KitAssemblySupply',
        'location' => 'Location',
        'onHand' => 'OnHand',
        'onLocationNotAvailable' => 'OnLocationNotAvailable',
        'purchaseForSO' => 'PurchaseForSO',
        'purchaseForSOPrepared' => 'PurchaseForSOPrepared',
        'purchaseOrders' => 'PurchaseOrders',
        'purchasePrepared' => 'PurchasePrepared',
        'purchaseReceipts' => 'PurchaseReceipts',
        'receiptsForSO' => 'ReceiptsForSO',
        'results' => 'Results',
        'sOAllocated' => 'SOAllocated',
        'sOBackOrdered' => 'SOBackOrdered',
        'sOBooked' => 'SOBooked',
        'sOPrepared' => 'SOPrepared',
        'sOShipped' => 'SOShipped',
        'sOToPurchase' => 'SOToPurchase',
        'totalAddition' => 'TotalAddition',
        'totalDeduction' => 'TotalDeduction',
        'warehouseID' => 'WarehouseID'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'available' => 'setAvailable',
        'availableForIssue' => 'setAvailableForIssue',
        'availableForShipping' => 'setAvailableForShipping',
        'baseUnit' => 'setBaseUnit',
        'inTransit' => 'setInTransit',
        'inTransitToSO' => 'setInTransitToSO',
        'inventoryID' => 'setInventoryID',
        'inventoryIssues' => 'setInventoryIssues',
        'inventoryReceipts' => 'setInventoryReceipts',
        'kitAssemblyDemand' => 'setKitAssemblyDemand',
        'kitAssemblySupply' => 'setKitAssemblySupply',
        'location' => 'setLocation',
        'onHand' => 'setOnHand',
        'onLocationNotAvailable' => 'setOnLocationNotAvailable',
        'purchaseForSO' => 'setPurchaseForSO',
        'purchaseForSOPrepared' => 'setPurchaseForSOPrepared',
        'purchaseOrders' => 'setPurchaseOrders',
        'purchasePrepared' => 'setPurchasePrepared',
        'purchaseReceipts' => 'setPurchaseReceipts',
        'receiptsForSO' => 'setReceiptsForSO',
        'results' => 'setResults',
        'sOAllocated' => 'setSOAllocated',
        'sOBackOrdered' => 'setSOBackOrdered',
        'sOBooked' => 'setSOBooked',
        'sOPrepared' => 'setSOPrepared',
        'sOShipped' => 'setSOShipped',
        'sOToPurchase' => 'setSOToPurchase',
        'totalAddition' => 'setTotalAddition',
        'totalDeduction' => 'setTotalDeduction',
        'warehouseID' => 'setWarehouseID'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'available' => 'getAvailable',
        'availableForIssue' => 'getAvailableForIssue',
        'availableForShipping' => 'getAvailableForShipping',
        'baseUnit' => 'getBaseUnit',
        'inTransit' => 'getInTransit',
        'inTransitToSO' => 'getInTransitToSO',
        'inventoryID' => 'getInventoryID',
        'inventoryIssues' => 'getInventoryIssues',
        'inventoryReceipts' => 'getInventoryReceipts',
        'kitAssemblyDemand' => 'getKitAssemblyDemand',
        'kitAssemblySupply' => 'getKitAssemblySupply',
        'location' => 'getLocation',
        'onHand' => 'getOnHand',
        'onLocationNotAvailable' => 'getOnLocationNotAvailable',
        'purchaseForSO' => 'getPurchaseForSO',
        'purchaseForSOPrepared' => 'getPurchaseForSOPrepared',
        'purchaseOrders' => 'getPurchaseOrders',
        'purchasePrepared' => 'getPurchasePrepared',
        'purchaseReceipts' => 'getPurchaseReceipts',
        'receiptsForSO' => 'getReceiptsForSO',
        'results' => 'getResults',
        'sOAllocated' => 'getSOAllocated',
        'sOBackOrdered' => 'getSOBackOrdered',
        'sOBooked' => 'getSOBooked',
        'sOPrepared' => 'getSOPrepared',
        'sOShipped' => 'getSOShipped',
        'sOToPurchase' => 'getSOToPurchase',
        'totalAddition' => 'getTotalAddition',
        'totalDeduction' => 'getTotalDeduction',
        'warehouseID' => 'getWarehouseID'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['available'] = isset($data['available']) ? $data['available'] : null;
        $this->container['availableForIssue'] = isset($data['availableForIssue']) ? $data['availableForIssue'] : null;
        $this->container['availableForShipping'] = isset($data['availableForShipping']) ? $data['availableForShipping'] : null;
        $this->container['baseUnit'] = isset($data['baseUnit']) ? $data['baseUnit'] : null;
        $this->container['inTransit'] = isset($data['inTransit']) ? $data['inTransit'] : null;
        $this->container['inTransitToSO'] = isset($data['inTransitToSO']) ? $data['inTransitToSO'] : null;
        $this->container['inventoryID'] = isset($data['inventoryID']) ? $data['inventoryID'] : null;
        $this->container['inventoryIssues'] = isset($data['inventoryIssues']) ? $data['inventoryIssues'] : null;
        $this->container['inventoryReceipts'] = isset($data['inventoryReceipts']) ? $data['inventoryReceipts'] : null;
        $this->container['kitAssemblyDemand'] = isset($data['kitAssemblyDemand']) ? $data['kitAssemblyDemand'] : null;
        $this->container['kitAssemblySupply'] = isset($data['kitAssemblySupply']) ? $data['kitAssemblySupply'] : null;
        $this->container['location'] = isset($data['location']) ? $data['location'] : null;
        $this->container['onHand'] = isset($data['onHand']) ? $data['onHand'] : null;
        $this->container['onLocationNotAvailable'] = isset($data['onLocationNotAvailable']) ? $data['onLocationNotAvailable'] : null;
        $this->container['purchaseForSO'] = isset($data['purchaseForSO']) ? $data['purchaseForSO'] : null;
        $this->container['purchaseForSOPrepared'] = isset($data['purchaseForSOPrepared']) ? $data['purchaseForSOPrepared'] : null;
        $this->container['purchaseOrders'] = isset($data['purchaseOrders']) ? $data['purchaseOrders'] : null;
        $this->container['purchasePrepared'] = isset($data['purchasePrepared']) ? $data['purchasePrepared'] : null;
        $this->container['purchaseReceipts'] = isset($data['purchaseReceipts']) ? $data['purchaseReceipts'] : null;
        $this->container['receiptsForSO'] = isset($data['receiptsForSO']) ? $data['receiptsForSO'] : null;
        $this->container['results'] = isset($data['results']) ? $data['results'] : null;
        $this->container['sOAllocated'] = isset($data['sOAllocated']) ? $data['sOAllocated'] : null;
        $this->container['sOBackOrdered'] = isset($data['sOBackOrdered']) ? $data['sOBackOrdered'] : null;
        $this->container['sOBooked'] = isset($data['sOBooked']) ? $data['sOBooked'] : null;
        $this->container['sOPrepared'] = isset($data['sOPrepared']) ? $data['sOPrepared'] : null;
        $this->container['sOShipped'] = isset($data['sOShipped']) ? $data['sOShipped'] : null;
        $this->container['sOToPurchase'] = isset($data['sOToPurchase']) ? $data['sOToPurchase'] : null;
        $this->container['totalAddition'] = isset($data['totalAddition']) ? $data['totalAddition'] : null;
        $this->container['totalDeduction'] = isset($data['totalDeduction']) ? $data['totalDeduction'] : null;
        $this->container['warehouseID'] = isset($data['warehouseID']) ? $data['warehouseID'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets available
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getAvailable()
    {
        return $this->container['available'];
    }

    /**
     * Sets available
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $available available
     *
     * @return $this
     */
    public function setAvailable($available)
    {
        $this->container['available'] = $available;

        return $this;
    }

    /**
     * Gets availableForIssue
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getAvailableForIssue()
    {
        return $this->container['availableForIssue'];
    }

    /**
     * Sets availableForIssue
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $availableForIssue availableForIssue
     *
     * @return $this
     */
    public function setAvailableForIssue($availableForIssue)
    {
        $this->container['availableForIssue'] = $availableForIssue;

        return $this;
    }

    /**
     * Gets availableForShipping
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getAvailableForShipping()
    {
        return $this->container['availableForShipping'];
    }

    /**
     * Sets availableForShipping
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $availableForShipping availableForShipping
     *
     * @return $this
     */
    public function setAvailableForShipping($availableForShipping)
    {
        $this->container['availableForShipping'] = $availableForShipping;

        return $this;
    }

    /**
     * Gets baseUnit
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getBaseUnit()
    {
        return $this->container['baseUnit'];
    }

    /**
     * Sets baseUnit
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $baseUnit baseUnit
     *
     * @return $this
     */
    public function setBaseUnit($baseUnit)
    {
        $this->container['baseUnit'] = $baseUnit;

        return $this;
    }

    /**
     * Gets inTransit
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getInTransit()
    {
        return $this->container['inTransit'];
    }

    /**
     * Sets inTransit
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $inTransit inTransit
     *
     * @return $this
     */
    public function setInTransit($inTransit)
    {
        $this->container['inTransit'] = $inTransit;

        return $this;
    }

    /**
     * Gets inTransitToSO
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getInTransitToSO()
    {
        return $this->container['inTransitToSO'];
    }

    /**
     * Sets inTransitToSO
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $inTransitToSO inTransitToSO
     *
     * @return $this
     */
    public function setInTransitToSO($inTransitToSO)
    {
        $this->container['inTransitToSO'] = $inTransitToSO;

        return $this;
    }

    /**
     * Gets inventoryID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getInventoryID()
    {
        return $this->container['inventoryID'];
    }

    /**
     * Sets inventoryID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $inventoryID inventoryID
     *
     * @return $this
     */
    public function setInventoryID($inventoryID)
    {
        $this->container['inventoryID'] = $inventoryID;

        return $this;
    }

    /**
     * Gets inventoryIssues
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getInventoryIssues()
    {
        return $this->container['inventoryIssues'];
    }

    /**
     * Sets inventoryIssues
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $inventoryIssues inventoryIssues
     *
     * @return $this
     */
    public function setInventoryIssues($inventoryIssues)
    {
        $this->container['inventoryIssues'] = $inventoryIssues;

        return $this;
    }

    /**
     * Gets inventoryReceipts
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getInventoryReceipts()
    {
        return $this->container['inventoryReceipts'];
    }

    /**
     * Sets inventoryReceipts
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $inventoryReceipts inventoryReceipts
     *
     * @return $this
     */
    public function setInventoryReceipts($inventoryReceipts)
    {
        $this->container['inventoryReceipts'] = $inventoryReceipts;

        return $this;
    }

    /**
     * Gets kitAssemblyDemand
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getKitAssemblyDemand()
    {
        return $this->container['kitAssemblyDemand'];
    }

    /**
     * Sets kitAssemblyDemand
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $kitAssemblyDemand kitAssemblyDemand
     *
     * @return $this
     */
    public function setKitAssemblyDemand($kitAssemblyDemand)
    {
        $this->container['kitAssemblyDemand'] = $kitAssemblyDemand;

        return $this;
    }

    /**
     * Gets kitAssemblySupply
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getKitAssemblySupply()
    {
        return $this->container['kitAssemblySupply'];
    }

    /**
     * Sets kitAssemblySupply
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $kitAssemblySupply kitAssemblySupply
     *
     * @return $this
     */
    public function setKitAssemblySupply($kitAssemblySupply)
    {
        $this->container['kitAssemblySupply'] = $kitAssemblySupply;

        return $this;
    }

    /**
     * Gets location
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $location location
     *
     * @return $this
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets onHand
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getOnHand()
    {
        return $this->container['onHand'];
    }

    /**
     * Sets onHand
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $onHand onHand
     *
     * @return $this
     */
    public function setOnHand($onHand)
    {
        $this->container['onHand'] = $onHand;

        return $this;
    }

    /**
     * Gets onLocationNotAvailable
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getOnLocationNotAvailable()
    {
        return $this->container['onLocationNotAvailable'];
    }

    /**
     * Sets onLocationNotAvailable
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $onLocationNotAvailable onLocationNotAvailable
     *
     * @return $this
     */
    public function setOnLocationNotAvailable($onLocationNotAvailable)
    {
        $this->container['onLocationNotAvailable'] = $onLocationNotAvailable;

        return $this;
    }

    /**
     * Gets purchaseForSO
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getPurchaseForSO()
    {
        return $this->container['purchaseForSO'];
    }

    /**
     * Sets purchaseForSO
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $purchaseForSO purchaseForSO
     *
     * @return $this
     */
    public function setPurchaseForSO($purchaseForSO)
    {
        $this->container['purchaseForSO'] = $purchaseForSO;

        return $this;
    }

    /**
     * Gets purchaseForSOPrepared
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getPurchaseForSOPrepared()
    {
        return $this->container['purchaseForSOPrepared'];
    }

    /**
     * Sets purchaseForSOPrepared
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $purchaseForSOPrepared purchaseForSOPrepared
     *
     * @return $this
     */
    public function setPurchaseForSOPrepared($purchaseForSOPrepared)
    {
        $this->container['purchaseForSOPrepared'] = $purchaseForSOPrepared;

        return $this;
    }

    /**
     * Gets purchaseOrders
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getPurchaseOrders()
    {
        return $this->container['purchaseOrders'];
    }

    /**
     * Sets purchaseOrders
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $purchaseOrders purchaseOrders
     *
     * @return $this
     */
    public function setPurchaseOrders($purchaseOrders)
    {
        $this->container['purchaseOrders'] = $purchaseOrders;

        return $this;
    }

    /**
     * Gets purchasePrepared
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getPurchasePrepared()
    {
        return $this->container['purchasePrepared'];
    }

    /**
     * Sets purchasePrepared
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $purchasePrepared purchasePrepared
     *
     * @return $this
     */
    public function setPurchasePrepared($purchasePrepared)
    {
        $this->container['purchasePrepared'] = $purchasePrepared;

        return $this;
    }

    /**
     * Gets purchaseReceipts
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getPurchaseReceipts()
    {
        return $this->container['purchaseReceipts'];
    }

    /**
     * Sets purchaseReceipts
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $purchaseReceipts purchaseReceipts
     *
     * @return $this
     */
    public function setPurchaseReceipts($purchaseReceipts)
    {
        $this->container['purchaseReceipts'] = $purchaseReceipts;

        return $this;
    }

    /**
     * Gets receiptsForSO
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getReceiptsForSO()
    {
        return $this->container['receiptsForSO'];
    }

    /**
     * Sets receiptsForSO
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $receiptsForSO receiptsForSO
     *
     * @return $this
     */
    public function setReceiptsForSO($receiptsForSO)
    {
        $this->container['receiptsForSO'] = $receiptsForSO;

        return $this;
    }

    /**
     * Gets results
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\InventoryAllocationRowModel[]
     */
    public function getResults()
    {
        return $this->container['results'];
    }

    /**
     * Sets results
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\InventoryAllocationRowModel[] $results results
     *
     * @return $this
     */
    public function setResults($results)
    {
        $this->container['results'] = $results;

        return $this;
    }

    /**
     * Gets sOAllocated
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getSOAllocated()
    {
        return $this->container['sOAllocated'];
    }

    /**
     * Sets sOAllocated
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $sOAllocated sOAllocated
     *
     * @return $this
     */
    public function setSOAllocated($sOAllocated)
    {
        $this->container['sOAllocated'] = $sOAllocated;

        return $this;
    }

    /**
     * Gets sOBackOrdered
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getSOBackOrdered()
    {
        return $this->container['sOBackOrdered'];
    }

    /**
     * Sets sOBackOrdered
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $sOBackOrdered sOBackOrdered
     *
     * @return $this
     */
    public function setSOBackOrdered($sOBackOrdered)
    {
        $this->container['sOBackOrdered'] = $sOBackOrdered;

        return $this;
    }

    /**
     * Gets sOBooked
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getSOBooked()
    {
        return $this->container['sOBooked'];
    }

    /**
     * Sets sOBooked
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $sOBooked sOBooked
     *
     * @return $this
     */
    public function setSOBooked($sOBooked)
    {
        $this->container['sOBooked'] = $sOBooked;

        return $this;
    }

    /**
     * Gets sOPrepared
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getSOPrepared()
    {
        return $this->container['sOPrepared'];
    }

    /**
     * Sets sOPrepared
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $sOPrepared sOPrepared
     *
     * @return $this
     */
    public function setSOPrepared($sOPrepared)
    {
        $this->container['sOPrepared'] = $sOPrepared;

        return $this;
    }

    /**
     * Gets sOShipped
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getSOShipped()
    {
        return $this->container['sOShipped'];
    }

    /**
     * Sets sOShipped
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $sOShipped sOShipped
     *
     * @return $this
     */
    public function setSOShipped($sOShipped)
    {
        $this->container['sOShipped'] = $sOShipped;

        return $this;
    }

    /**
     * Gets sOToPurchase
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getSOToPurchase()
    {
        return $this->container['sOToPurchase'];
    }

    /**
     * Sets sOToPurchase
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $sOToPurchase sOToPurchase
     *
     * @return $this
     */
    public function setSOToPurchase($sOToPurchase)
    {
        $this->container['sOToPurchase'] = $sOToPurchase;

        return $this;
    }

    /**
     * Gets totalAddition
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getTotalAddition()
    {
        return $this->container['totalAddition'];
    }

    /**
     * Sets totalAddition
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $totalAddition totalAddition
     *
     * @return $this
     */
    public function setTotalAddition($totalAddition)
    {
        $this->container['totalAddition'] = $totalAddition;

        return $this;
    }

    /**
     * Gets totalDeduction
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel
     */
    public function getTotalDeduction()
    {
        return $this->container['totalDeduction'];
    }

    /**
     * Sets totalDeduction
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\DecimalValueModel $totalDeduction totalDeduction
     *
     * @return $this
     */
    public function setTotalDeduction($totalDeduction)
    {
        $this->container['totalDeduction'] = $totalDeduction;

        return $this;
    }

    /**
     * Gets warehouseID
     *
     * @return \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel
     */
    public function getWarehouseID()
    {
        return $this->container['warehouseID'];
    }

    /**
     * Sets warehouseID
     *
     * @param \Hut6\CranaplusAcumaticaSdk\Model\StringValueModel $warehouseID warehouseID
     *
     * @return $this
     */
    public function setWarehouseID($warehouseID)
    {
        $this->container['warehouseID'] = $warehouseID;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


